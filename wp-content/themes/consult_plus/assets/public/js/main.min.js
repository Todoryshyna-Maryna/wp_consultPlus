!function(t,e){"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("jquery")):t.jQueryBridget=e(t,t.jQuery)}(window,function(t,e){"use strict";function i(i,s,a){function h(t,e,o){var n,s="$()."+i+'("'+e+'")';return t.each(function(t,h){var l=a.data(h,i);if(l){var u=l[e];if(u&&"_"!=e.charAt(0)){var d=u.apply(l,o);n=void 0===n?d:n}else r(s+" is not a valid method")}else r(i+" not initialized. Cannot call methods, i.e. "+s)}),void 0!==n?n:t}function l(t,e){t.each(function(t,o){var n=a.data(o,i);n?(n.option(e),n._init()):(n=new s(o,e),a.data(o,i,n))})}(a=a||e||t.jQuery)&&(s.prototype.option||(s.prototype.option=function(t){a.isPlainObject(t)&&(this.options=a.extend(!0,this.options,t))}),a.fn[i]=function(t){return"string"==typeof t?h(this,t,n.call(arguments,1)):(l(this,t),this)},o(a))}function o(t){!t||t&&t.bridget||(t.bridget=i)}var n=Array.prototype.slice,s=t.console,r=void 0===s?function(){}:function(t){s.error(t)};return o(e||t.jQuery),i}),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},o=i[t]=i[t]||[];return-1==o.indexOf(e)&&o.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{};return(i[t]=i[t]||{})[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var o=i.indexOf(e);return-1!=o&&i.splice(o,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var o=0,n=i[o];e=e||[];for(var s=this._onceEvents&&this._onceEvents[t];n;){var r=s&&s[n];r&&(this.off(t,n),delete s[n]),n.apply(this,e),n=i[o+=r?0:1]}return this}},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("get-size/get-size",[],function(){return e()}):"object"==typeof module&&module.exports?module.exports=e():t.getSize=e()}(window,function(){"use strict";function t(t){var e=parseFloat(t);return-1==t.indexOf("%")&&!isNaN(e)&&e}function e(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;e<h;e++)t[a[e]]=0;return t}function i(t){var e=getComputedStyle(t);return e||r("Style returned "+e+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),e}function o(){if(!l){l=!0;var e=document.createElement("div");e.style.width="200px",e.style.padding="1px 2px 3px 4px",e.style.borderStyle="solid",e.style.borderWidth="1px 2px 3px 4px",e.style.boxSizing="border-box";var o=document.body||document.documentElement;o.appendChild(e);var r=i(e);n.isBoxSizeOuter=s=200==t(r.width),o.removeChild(e)}}function n(n){if(o(),"string"==typeof n&&(n=document.querySelector(n)),n&&"object"==typeof n&&n.nodeType){var r=i(n);if("none"==r.display)return e();var l={};l.width=n.offsetWidth,l.height=n.offsetHeight;for(var u=l.isBorderBox="border-box"==r.boxSizing,d=0;d<h;d++){var c=a[d],p=r[c],f=parseFloat(p);l[c]=isNaN(f)?0:f}var m=l.paddingLeft+l.paddingRight,g=l.paddingTop+l.paddingBottom,y=l.marginLeft+l.marginRight,v=l.marginTop+l.marginBottom,b=l.borderLeftWidth+l.borderRightWidth,_=l.borderTopWidth+l.borderBottomWidth,I=u&&s,w=t(r.width);!1!==w&&(l.width=w+(I?0:m+b));var x=t(r.height);return!1!==x&&(l.height=x+(I?0:g+_)),l.innerWidth=l.width-(m+b),l.innerHeight=l.height-(g+_),l.outerWidth=l.width+y,l.outerHeight=l.height+v,l}}var s,r="undefined"==typeof console?function(){}:function(t){console.error(t)},a=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],h=a.length,l=!1;return n}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",e):"object"==typeof module&&module.exports?module.exports=e():t.matchesSelector=e()}(window,function(){"use strict";var t=function(){var t=window.Element.prototype;if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],i=0;i<e.length;i++){var o=e[i]+"MatchesSelector";if(t[o])return o}}();return function(e,i){return e[t](i)}}),function(t,e){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("desandro-matches-selector")):t.fizzyUIUtils=e(t,t.matchesSelector)}(window,function(t,e){var i={};i.extend=function(t,e){for(var i in e)t[i]=e[i];return t},i.modulo=function(t,e){return(t%e+e)%e},i.makeArray=function(t){var e=[];if(Array.isArray(t))e=t;else if(t&&"object"==typeof t&&"number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e},i.removeFrom=function(t,e){var i=t.indexOf(e);-1!=i&&t.splice(i,1)},i.getParent=function(t,i){for(;t.parentNode&&t!=document.body;)if(t=t.parentNode,e(t,i))return t},i.getQueryElement=function(t){return"string"==typeof t?document.querySelector(t):t},i.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.filterFindElements=function(t,o){var n=[];return(t=i.makeArray(t)).forEach(function(t){if(t instanceof HTMLElement)if(o){e(t,o)&&n.push(t);for(var i=t.querySelectorAll(o),s=0;s<i.length;s++)n.push(i[s])}else n.push(t)}),n},i.debounceMethod=function(t,e,i){var o=t.prototype[e],n=e+"Timeout";t.prototype[e]=function(){var t=this[n];t&&clearTimeout(t);var e=arguments,s=this;this[n]=setTimeout(function(){o.apply(s,e),delete s[n]},i||100)}},i.docReady=function(t){var e=document.readyState;"complete"==e||"interactive"==e?setTimeout(t):document.addEventListener("DOMContentLoaded",t)},i.toDashed=function(t){return t.replace(/(.)([A-Z])/g,function(t,e,i){return e+"-"+i}).toLowerCase()};var o=t.console;return i.htmlInit=function(e,n){i.docReady(function(){var s=i.toDashed(n),r="data-"+s,a=document.querySelectorAll("["+r+"]"),h=document.querySelectorAll(".js-"+s),l=i.makeArray(a).concat(i.makeArray(h)),u=r+"-options",d=t.jQuery;l.forEach(function(t){var i,s=t.getAttribute(r)||t.getAttribute(u);try{i=s&&JSON.parse(s)}catch(e){return void(o&&o.error("Error parsing "+r+" on "+t.className+": "+e))}var a=new e(t,i);d&&d.data(t,n,a)})})},i}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/item",["ev-emitter/ev-emitter","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("ev-emitter"),require("get-size")):(t.Outlayer={},t.Outlayer.Item=e(t.EvEmitter,t.getSize))}(window,function(t,e){"use strict";function i(t){for(var e in t)return!1;return null,!0}function o(t,e){t&&(this.element=t,this.layout=e,this.position={x:0,y:0},this._create())}var n=document.documentElement.style,s="string"==typeof n.transition?"transition":"WebkitTransition",r="string"==typeof n.transform?"transform":"WebkitTransform",a={WebkitTransition:"webkitTransitionEnd",transition:"transitionend"}[s],h={transform:r,transition:s,transitionDuration:s+"Duration",transitionProperty:s+"Property",transitionDelay:s+"Delay"},l=o.prototype=Object.create(t.prototype);l.constructor=o,l._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},l.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},l.getSize=function(){this.size=e(this.element)},l.css=function(t){var e=this.element.style;for(var i in t)e[h[i]||i]=t[i]},l.getPosition=function(){var t=getComputedStyle(this.element),e=this.layout._getOption("originLeft"),i=this.layout._getOption("originTop"),o=t[e?"left":"right"],n=t[i?"top":"bottom"],s=this.layout.size,r=-1!=o.indexOf("%")?parseFloat(o)/100*s.width:parseInt(o,10),a=-1!=n.indexOf("%")?parseFloat(n)/100*s.height:parseInt(n,10);r=isNaN(r)?0:r,a=isNaN(a)?0:a,r-=e?s.paddingLeft:s.paddingRight,a-=i?s.paddingTop:s.paddingBottom,this.position.x=r,this.position.y=a},l.layoutPosition=function(){var t=this.layout.size,e={},i=this.layout._getOption("originLeft"),o=this.layout._getOption("originTop"),n=i?"paddingLeft":"paddingRight",s=i?"left":"right",r=i?"right":"left",a=this.position.x+t[n];e[s]=this.getXValue(a),e[r]="";var h=o?"paddingTop":"paddingBottom",l=o?"top":"bottom",u=o?"bottom":"top",d=this.position.y+t[h];e[l]=this.getYValue(d),e[u]="",this.css(e),this.emitEvent("layout",[this])},l.getXValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&!e?t/this.layout.size.width*100+"%":t+"px"},l.getYValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&e?t/this.layout.size.height*100+"%":t+"px"},l._transitionTo=function(t,e){this.getPosition();var i=this.position.x,o=this.position.y,n=parseInt(t,10),s=parseInt(e,10),r=n===this.position.x&&s===this.position.y;if(this.setPosition(t,e),!r||this.isTransitioning){var a=t-i,h=e-o,l={};l.transform=this.getTranslate(a,h),this.transition({to:l,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})}else this.layoutPosition()},l.getTranslate=function(t,e){var i=this.layout._getOption("originLeft"),o=this.layout._getOption("originTop");return t=i?t:-t,e=o?e:-e,"translate3d("+t+"px, "+e+"px, 0)"},l.goTo=function(t,e){this.setPosition(t,e),this.layoutPosition()},l.moveTo=l._transitionTo,l.setPosition=function(t,e){this.position.x=parseInt(t,10),this.position.y=parseInt(e,10)},l._nonTransition=function(t){this.css(t.to),t.isCleaning&&this._removeStyles(t.to);for(var e in t.onTransitionEnd)t.onTransitionEnd[e].call(this)},l.transition=function(t){if(parseFloat(this.layout.options.transitionDuration)){var e=this._transn;for(var i in t.onTransitionEnd)e.onEnd[i]=t.onTransitionEnd[i];for(i in t.to)e.ingProperties[i]=!0,t.isCleaning&&(e.clean[i]=!0);if(t.from){this.css(t.from);this.element.offsetHeight;null}this.enableTransition(t.to),this.css(t.to),this.isTransitioning=!0}else this._nonTransition(t)};var u="opacity,"+function(t){return t.replace(/([A-Z])/g,function(t){return"-"+t.toLowerCase()})}(r);l.enableTransition=function(){if(!this.isTransitioning){var t=this.layout.options.transitionDuration;t="number"==typeof t?t+"ms":t,this.css({transitionProperty:u,transitionDuration:t,transitionDelay:this.staggerDelay||0}),this.element.addEventListener(a,this,!1)}},l.onwebkitTransitionEnd=function(t){this.ontransitionend(t)},l.onotransitionend=function(t){this.ontransitionend(t)};var d={"-webkit-transform":"transform"};l.ontransitionend=function(t){if(t.target===this.element){var e=this._transn,o=d[t.propertyName]||t.propertyName;delete e.ingProperties[o],i(e.ingProperties)&&this.disableTransition(),o in e.clean&&(this.element.style[t.propertyName]="",delete e.clean[o]),o in e.onEnd&&(e.onEnd[o].call(this),delete e.onEnd[o]),this.emitEvent("transitionEnd",[this])}},l.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(a,this,!1),this.isTransitioning=!1},l._removeStyles=function(t){var e={};for(var i in t)e[i]="";this.css(e)};var c={transitionProperty:"",transitionDuration:"",transitionDelay:""};return l.removeTransitionStyles=function(){this.css(c)},l.stagger=function(t){t=isNaN(t)?0:t,this.staggerDelay=t+"ms"},l.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},l.remove=function(){s&&parseFloat(this.layout.options.transitionDuration)?(this.once("transitionEnd",function(){this.removeElem()}),this.hide()):this.removeElem()},l.reveal=function(){delete this.isHidden,this.css({display:""});var t=this.layout.options,e={};e[this.getHideRevealTransitionEndProperty("visibleStyle")]=this.onRevealTransitionEnd,this.transition({from:t.hiddenStyle,to:t.visibleStyle,isCleaning:!0,onTransitionEnd:e})},l.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},l.getHideRevealTransitionEndProperty=function(t){var e=this.layout.options[t];if(e.opacity)return"opacity";for(var i in e)return i},l.hide=function(){this.isHidden=!0,this.css({display:""});var t=this.layout.options,e={};e[this.getHideRevealTransitionEndProperty("hiddenStyle")]=this.onHideTransitionEnd,this.transition({from:t.visibleStyle,to:t.hiddenStyle,isCleaning:!0,onTransitionEnd:e})},l.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},l.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},o}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(i,o,n,s){return e(t,i,o,n,s)}):"object"==typeof module&&module.exports?module.exports=e(t,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):t.Outlayer=e(t,t.EvEmitter,t.getSize,t.fizzyUIUtils,t.Outlayer.Item)}(window,function(t,e,i,o,n){"use strict";function s(t,e){var i=o.getQueryElement(t);if(i){this.element=i,l&&(this.$element=l(this.element)),this.options=o.extend({},this.constructor.defaults),this.option(e);var n=++d;this.element.outlayerGUID=n,c[n]=this,this._create(),this._getOption("initLayout")&&this.layout()}else h&&h.error("Bad element for "+this.constructor.namespace+": "+(i||t))}function r(t){function e(){t.apply(this,arguments)}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e}function a(t){if("number"==typeof t)return t;var e=t.match(/(^\d*\.?\d*)(\w*)/),i=e&&e[1],o=e&&e[2];return i.length?(i=parseFloat(i))*(f[o]||1):0}var h=t.console,l=t.jQuery,u=function(){},d=0,c={};s.namespace="outlayer",s.Item=n,s.defaults={containerStyle:{position:"relative"},initLayout:!0,originLeft:!0,originTop:!0,resize:!0,resizeContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}};var p=s.prototype;o.extend(p,e.prototype),p.option=function(t){o.extend(this.options,t)},p._getOption=function(t){var e=this.constructor.compatOptions[t];return e&&void 0!==this.options[e]?this.options[e]:this.options[t]},s.compatOptions={initLayout:"isInitLayout",horizontal:"isHorizontal",layoutInstant:"isLayoutInstant",originLeft:"isOriginLeft",originTop:"isOriginTop",resize:"isResizeBound",resizeContainer:"isResizingContainer"},p._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),o.extend(this.element.style,this.options.containerStyle),this._getOption("resize")&&this.bindResize()},p.reloadItems=function(){this.items=this._itemize(this.element.children)},p._itemize=function(t){for(var e=this._filterFindItemElements(t),i=this.constructor.Item,o=[],n=0;n<e.length;n++){var s=new i(e[n],this);o.push(s)}return o},p._filterFindItemElements=function(t){return o.filterFindElements(t,this.options.itemSelector)},p.getItemElements=function(){return this.items.map(function(t){return t.element})},p.layout=function(){this._resetLayout(),this._manageStamps();var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;this.layoutItems(this.items,e),this._isLayoutInited=!0},p._init=p.layout,p._resetLayout=function(){this.getSize()},p.getSize=function(){this.size=i(this.element)},p._getMeasurement=function(t,e){var o,n=this.options[t];n?("string"==typeof n?o=this.element.querySelector(n):n instanceof HTMLElement&&(o=n),this[t]=o?i(o)[e]:n):this[t]=0},p.layoutItems=function(t,e){t=this._getItemsForLayout(t),this._layoutItems(t,e),this._postLayout()},p._getItemsForLayout=function(t){return t.filter(function(t){return!t.isIgnored})},p._layoutItems=function(t,e){if(this._emitCompleteOnItems("layout",t),t&&t.length){var i=[];t.forEach(function(t){var o=this._getItemLayoutPosition(t);o.item=t,o.isInstant=e||t.isLayoutInstant,i.push(o)},this),this._processLayoutQueue(i)}},p._getItemLayoutPosition=function(){return{x:0,y:0}},p._processLayoutQueue=function(t){this.updateStagger(),t.forEach(function(t,e){this._positionItem(t.item,t.x,t.y,t.isInstant,e)},this)},p.updateStagger=function(){var t=this.options.stagger;{if(null!==t&&void 0!==t)return this.stagger=a(t),this.stagger;this.stagger=0}},p._positionItem=function(t,e,i,o,n){o?t.goTo(e,i):(t.stagger(n*this.stagger),t.moveTo(e,i))},p._postLayout=function(){this.resizeContainer()},p.resizeContainer=function(){if(this._getOption("resizeContainer")){var t=this._getContainerSize();t&&(this._setContainerMeasure(t.width,!0),this._setContainerMeasure(t.height,!1))}},p._getContainerSize=u,p._setContainerMeasure=function(t,e){if(void 0!==t){var i=this.size;i.isBorderBox&&(t+=e?i.paddingLeft+i.paddingRight+i.borderLeftWidth+i.borderRightWidth:i.paddingBottom+i.paddingTop+i.borderTopWidth+i.borderBottomWidth),t=Math.max(t,0),this.element.style[e?"width":"height"]=t+"px"}},p._emitCompleteOnItems=function(t,e){function i(){n.dispatchEvent(t+"Complete",null,[e])}function o(){++r==s&&i()}var n=this,s=e.length;if(e&&s){var r=0;e.forEach(function(e){e.once(t,o)})}else i()},p.dispatchEvent=function(t,e,i){var o=e?[e].concat(i):i;if(this.emitEvent(t,o),l)if(this.$element=this.$element||l(this.element),e){var n=l.Event(e);n.type=t,this.$element.trigger(n,i)}else this.$element.trigger(t,i)},p.ignore=function(t){var e=this.getItem(t);e&&(e.isIgnored=!0)},p.unignore=function(t){var e=this.getItem(t);e&&delete e.isIgnored},p.stamp=function(t){(t=this._find(t))&&(this.stamps=this.stamps.concat(t),t.forEach(this.ignore,this))},p.unstamp=function(t){(t=this._find(t))&&t.forEach(function(t){o.removeFrom(this.stamps,t),this.unignore(t)},this)},p._find=function(t){if(t)return"string"==typeof t&&(t=this.element.querySelectorAll(t)),t=o.makeArray(t)},p._manageStamps=function(){this.stamps&&this.stamps.length&&(this._getBoundingRect(),this.stamps.forEach(this._manageStamp,this))},p._getBoundingRect=function(){var t=this.element.getBoundingClientRect(),e=this.size;this._boundingRect={left:t.left+e.paddingLeft+e.borderLeftWidth,top:t.top+e.paddingTop+e.borderTopWidth,right:t.right-(e.paddingRight+e.borderRightWidth),bottom:t.bottom-(e.paddingBottom+e.borderBottomWidth)}},p._manageStamp=u,p._getElementOffset=function(t){var e=t.getBoundingClientRect(),o=this._boundingRect,n=i(t);return{left:e.left-o.left-n.marginLeft,top:e.top-o.top-n.marginTop,right:o.right-e.right-n.marginRight,bottom:o.bottom-e.bottom-n.marginBottom}},p.handleEvent=o.handleEvent,p.bindResize=function(){t.addEventListener("resize",this),this.isResizeBound=!0},p.unbindResize=function(){t.removeEventListener("resize",this),this.isResizeBound=!1},p.onresize=function(){this.resize()},o.debounceMethod(s,"onresize",100),p.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},p.needsResizeLayout=function(){var t=i(this.element);return this.size&&t&&t.innerWidth!==this.size.innerWidth},p.addItems=function(t){var e=this._itemize(t);return e.length&&(this.items=this.items.concat(e)),e},p.appended=function(t){var e=this.addItems(t);e.length&&(this.layoutItems(e,!0),this.reveal(e))},p.prepended=function(t){var e=this._itemize(t);if(e.length){var i=this.items.slice(0);this.items=e.concat(i),this._resetLayout(),this._manageStamps(),this.layoutItems(e,!0),this.reveal(e),this.layoutItems(i)}},p.reveal=function(t){if(this._emitCompleteOnItems("reveal",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.reveal()})}},p.hide=function(t){if(this._emitCompleteOnItems("hide",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.hide()})}},p.revealItemElements=function(t){var e=this.getItems(t);this.reveal(e)},p.hideItemElements=function(t){var e=this.getItems(t);this.hide(e)},p.getItem=function(t){for(var e=0;e<this.items.length;e++){var i=this.items[e];if(i.element==t)return i}},p.getItems=function(t){var e=[];return(t=o.makeArray(t)).forEach(function(t){var i=this.getItem(t);i&&e.push(i)},this),e},p.remove=function(t){var e=this.getItems(t);this._emitCompleteOnItems("remove",e),e&&e.length&&e.forEach(function(t){t.remove(),o.removeFrom(this.items,t)},this)},p.destroy=function(){var t=this.element.style;t.height="",t.position="",t.width="",this.items.forEach(function(t){t.destroy()}),this.unbindResize();var e=this.element.outlayerGUID;delete c[e],delete this.element.outlayerGUID,l&&l.removeData(this.element,this.constructor.namespace)},s.data=function(t){var e=(t=o.getQueryElement(t))&&t.outlayerGUID;return e&&c[e]},s.create=function(t,e){var i=r(s);return i.defaults=o.extend({},s.defaults),o.extend(i.defaults,e),i.compatOptions=o.extend({},s.compatOptions),i.namespace=t,i.data=s.data,i.Item=r(n),o.htmlInit(i,t),l&&l.bridget&&l.bridget(t,i),i};var f={ms:1,s:1e3};return s.Item=n,s}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/item",["outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.Item=e(t.Outlayer))}(window,function(t){"use strict";function e(){t.Item.apply(this,arguments)}var i=e.prototype=Object.create(t.Item.prototype),o=i._create;i._create=function(){this.id=this.layout.itemGUID++,o.call(this),this.sortData={}},i.updateSortData=function(){if(!this.isIgnored){this.sortData.id=this.id,this.sortData["original-order"]=this.id,this.sortData.random=Math.random();var t=this.layout.options.getSortData,e=this.layout._sorters;for(var i in t){var o=e[i];this.sortData[i]=o(this.element,this)}}};var n=i.destroy;return i.destroy=function(){n.apply(this,arguments),this.css({display:""})},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-mode",["get-size/get-size","outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("get-size"),require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.LayoutMode=e(t.getSize,t.Outlayer))}(window,function(t,e){"use strict";function i(t){this.isotope=t,t&&(this.options=t.options[this.namespace],this.element=t.element,this.items=t.filteredItems,this.size=t.size)}var o=i.prototype;return["_resetLayout","_getItemLayoutPosition","_manageStamp","_getContainerSize","_getElementOffset","needsResizeLayout","_getOption"].forEach(function(t){o[t]=function(){return e.prototype[t].apply(this.isotope,arguments)}}),o.needsVerticalResizeLayout=function(){var e=t(this.isotope.element);return this.isotope.size&&e&&e.innerHeight!=this.isotope.size.innerHeight},o._getMeasurement=function(){this.isotope._getMeasurement.apply(this,arguments)},o.getColumnWidth=function(){this.getSegmentSize("column","Width")},o.getRowHeight=function(){this.getSegmentSize("row","Height")},o.getSegmentSize=function(t,e){var i=t+e,o="outer"+e;if(this._getMeasurement(i,o),!this[i]){var n=this.getFirstItemSize();this[i]=n&&n[o]||this.isotope.size["inner"+e]}},o.getFirstItemSize=function(){var e=this.isotope.filteredItems[0];return e&&e.element&&t(e.element)},o.layout=function(){this.isotope.layout.apply(this.isotope,arguments)},o.getSize=function(){this.isotope.getSize(),this.size=this.isotope.size},i.modes={},i.create=function(t,e){function n(){i.apply(this,arguments)}return n.prototype=Object.create(o),n.prototype.constructor=n,e&&(n.options=e),n.prototype.namespace=t,i.modes[t]=n,n},i}),function(t,e){"function"==typeof define&&define.amd?define("masonry/masonry",["outlayer/outlayer","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer"),require("get-size")):t.Masonry=e(t.Outlayer,t.getSize)}(window,function(t,e){var i=t.create("masonry");i.compatOptions.fitWidth="isFitWidth";var o=i.prototype;return o._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns(),this.colYs=[];for(var t=0;t<this.cols;t++)this.colYs.push(0);this.maxY=0,this.horizontalColIndex=0},o.measureColumns=function(){if(this.getContainerWidth(),!this.columnWidth){var t=this.items[0],i=t&&t.element;this.columnWidth=i&&e(i).outerWidth||this.containerWidth}var o=this.columnWidth+=this.gutter,n=this.containerWidth+this.gutter,s=n/o,r=o-n%o,a=r&&r<1?"round":"floor";s=Math[a](s),this.cols=Math.max(s,1)},o.getContainerWidth=function(){var t=this._getOption("fitWidth")?this.element.parentNode:this.element,i=e(t);this.containerWidth=i&&i.innerWidth},o._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth%this.columnWidth,i=e&&e<1?"round":"ceil",o=Math[i](t.size.outerWidth/this.columnWidth);o=Math.min(o,this.cols);for(var n=this[this.options.horizontalOrder?"_getHorizontalColPosition":"_getTopColPosition"](o,t),s={x:this.columnWidth*n.col,y:n.y},r=n.y+t.size.outerHeight,a=o+n.col,h=n.col;h<a;h++)this.colYs[h]=r;return s},o._getTopColPosition=function(t){var e=this._getTopColGroup(t),i=Math.min.apply(Math,e);return{col:e.indexOf(i),y:i}},o._getTopColGroup=function(t){if(t<2)return this.colYs;for(var e=[],i=this.cols+1-t,o=0;o<i;o++)e[o]=this._getColGroupY(o,t);return e},o._getColGroupY=function(t,e){if(e<2)return this.colYs[t];var i=this.colYs.slice(t,t+e);return Math.max.apply(Math,i)},o._getHorizontalColPosition=function(t,e){var i=this.horizontalColIndex%this.cols;i=t>1&&i+t>this.cols?0:i;var o=e.size.outerWidth&&e.size.outerHeight;return this.horizontalColIndex=o?i+t:this.horizontalColIndex,{col:i,y:this._getColGroupY(i,t)}},o._manageStamp=function(t){var i=e(t),o=this._getElementOffset(t),n=this._getOption("originLeft")?o.left:o.right,s=n+i.outerWidth,r=Math.floor(n/this.columnWidth);r=Math.max(0,r);var a=Math.floor(s/this.columnWidth);a-=s%this.columnWidth?0:1,a=Math.min(this.cols-1,a);for(var h=(this._getOption("originTop")?o.top:o.bottom)+i.outerHeight,l=r;l<=a;l++)this.colYs[l]=Math.max(h,this.colYs[l])},o._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var t={height:this.maxY};return this._getOption("fitWidth")&&(t.width=this._getContainerFitWidth()),t},o._getContainerFitWidth=function(){for(var t=0,e=this.cols;--e&&0===this.colYs[e];)t++;return(this.cols-t)*this.columnWidth-this.gutter},o.needsResizeLayout=function(){var t=this.containerWidth;return this.getContainerWidth(),t!=this.containerWidth},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/masonry",["../layout-mode","masonry/masonry"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode"),require("masonry-layout")):e(t.Isotope.LayoutMode,t.Masonry)}(window,function(t,e){"use strict";var i=t.create("masonry"),o=i.prototype,n={_getElementOffset:!0,layout:!0,_getMeasurement:!0};for(var s in e.prototype)n[s]||(o[s]=e.prototype[s]);var r=o.measureColumns;o.measureColumns=function(){this.items=this.isotope.filteredItems,r.call(this)};var a=o._getOption;return o._getOption=function(t){return"fitWidth"==t?void 0!==this.options.isFitWidth?this.options.isFitWidth:this.options.fitWidth:a.apply(this.isotope,arguments)},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/fit-rows",["../layout-mode"],e):"object"==typeof exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("fitRows"),i=e.prototype;return i._resetLayout=function(){this.x=0,this.y=0,this.maxY=0,this._getMeasurement("gutter","outerWidth")},i._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth+this.gutter,i=this.isotope.size.innerWidth+this.gutter;0!==this.x&&e+this.x>i&&(this.x=0,this.y=this.maxY);var o={x:this.x,y:this.y};return this.maxY=Math.max(this.maxY,this.y+t.size.outerHeight),this.x+=e,o},i._getContainerSize=function(){return{height:this.maxY}},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/vertical",["../layout-mode"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("vertical",{horizontalAlignment:0}),i=e.prototype;return i._resetLayout=function(){this.y=0},i._getItemLayoutPosition=function(t){t.getSize();var e=(this.isotope.size.innerWidth-t.size.outerWidth)*this.options.horizontalAlignment,i=this.y;return this.y+=t.size.outerHeight,{x:e,y:i}},i._getContainerSize=function(){return{height:this.y}},e}),function(t,e){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","desandro-matches-selector/matches-selector","fizzy-ui-utils/utils","isotope/js/item","isotope/js/layout-mode","isotope/js/layout-modes/masonry","isotope/js/layout-modes/fit-rows","isotope/js/layout-modes/vertical"],function(i,o,n,s,r,a){return e(t,i,o,n,s,r,a)}):"object"==typeof module&&module.exports?module.exports=e(t,require("outlayer"),require("get-size"),require("desandro-matches-selector"),require("fizzy-ui-utils"),require("isotope/js/item"),require("isotope/js/layout-mode"),require("isotope/js/layout-modes/masonry"),require("isotope/js/layout-modes/fit-rows"),require("isotope/js/layout-modes/vertical")):t.Isotope=e(t,t.Outlayer,t.getSize,t.matchesSelector,t.fizzyUIUtils,t.Isotope.Item,t.Isotope.LayoutMode)}(window,function(t,e,i,o,n,s,r){function a(t,e){return function(i,o){for(var n=0;n<t.length;n++){var s=t[n],r=i.sortData[s],a=o.sortData[s];if(r>a||r<a){var h=(void 0!==e[s]?e[s]:e)?1:-1;return(r>a?1:-1)*h}}return 0}}var h=t.jQuery,l=String.prototype.trim?function(t){return t.trim()}:function(t){return t.replace(/^\s+|\s+$/g,"")},u=e.create("isotope",{layoutMode:"masonry",isJQueryFiltering:!0,sortAscending:!0});u.Item=s,u.LayoutMode=r;var d=u.prototype;d._create=function(){this.itemGUID=0,this._sorters={},this._getSorters(),e.prototype._create.call(this),this.modes={},this.filteredItems=this.items,this.sortHistory=["original-order"];for(var t in r.modes)this._initLayoutMode(t)},d.reloadItems=function(){this.itemGUID=0,e.prototype.reloadItems.call(this)},d._itemize=function(){for(var t=e.prototype._itemize.apply(this,arguments),i=0;i<t.length;i++)t[i].id=this.itemGUID++;return this._updateItemsSortData(t),t},d._initLayoutMode=function(t){var e=r.modes[t],i=this.options[t]||{};this.options[t]=e.options?n.extend(e.options,i):i,this.modes[t]=new e(this)},d.layout=function(){this._isLayoutInited||!this._getOption("initLayout")?this._layout():this.arrange()},d._layout=function(){var t=this._getIsInstant();this._resetLayout(),this._manageStamps(),this.layoutItems(this.filteredItems,t),this._isLayoutInited=!0},d.arrange=function(t){this.option(t),this._getIsInstant();var e=this._filter(this.items);this.filteredItems=e.matches,this._bindArrangeComplete(),this._isInstant?this._noTransition(this._hideReveal,[e]):this._hideReveal(e),this._sort(),this._layout()},d._init=d.arrange,d._hideReveal=function(t){this.reveal(t.needReveal),this.hide(t.needHide)},d._getIsInstant=function(){var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;return this._isInstant=e,e},d._bindArrangeComplete=function(){function t(){e&&i&&o&&n.dispatchEvent("arrangeComplete",null,[n.filteredItems])}var e,i,o,n=this;this.once("layoutComplete",function(){e=!0,t()}),this.once("hideComplete",function(){i=!0,t()}),this.once("revealComplete",function(){o=!0,t()})},d._filter=function(t){var e=this.options.filter;e=e||"*";for(var i=[],o=[],n=[],s=this._getFilterTest(e),r=0;r<t.length;r++){var a=t[r];if(!a.isIgnored){var h=s(a);h&&i.push(a),h&&a.isHidden?o.push(a):h||a.isHidden||n.push(a)}}return{matches:i,needReveal:o,needHide:n}},d._getFilterTest=function(t){return h&&this.options.isJQueryFiltering?function(e){return h(e.element).is(t)}:"function"==typeof t?function(e){return t(e.element)}:function(e){return o(e.element,t)}},d.updateSortData=function(t){var e;t?(t=n.makeArray(t),e=this.getItems(t)):e=this.items,this._getSorters(),this._updateItemsSortData(e)},d._getSorters=function(){var t=this.options.getSortData;for(var e in t){var i=t[e];this._sorters[e]=c(i)}},d._updateItemsSortData=function(t){for(var e=t&&t.length,i=0;e&&i<e;i++)t[i].updateSortData()};var c=function(){function t(t,e){return t?function(e){return e.getAttribute(t)}:function(t){var i=t.querySelector(e);return i&&i.textContent}}return function(e){if("string"!=typeof e)return e;var i=l(e).split(" "),o=i[0],n=o.match(/^\[(.+)\]$/),s=t(n&&n[1],o),r=u.sortDataParsers[i[1]];return e=r?function(t){return t&&r(s(t))}:function(t){return t&&s(t)}}}();u.sortDataParsers={parseInt:function(t){return parseInt(t,10)},parseFloat:function(t){return parseFloat(t)}},d._sort=function(){if(this.options.sortBy){var t=n.makeArray(this.options.sortBy);this._getIsSameSortBy(t)||(this.sortHistory=t.concat(this.sortHistory));var e=a(this.sortHistory,this.options.sortAscending);this.filteredItems.sort(e)}},d._getIsSameSortBy=function(t){for(var e=0;e<t.length;e++)if(t[e]!=this.sortHistory[e])return!1;return!0},d._mode=function(){var t=this.options.layoutMode,e=this.modes[t];if(!e)throw new Error("No layout mode: "+t);return e.options=this.options[t],e},d._resetLayout=function(){e.prototype._resetLayout.call(this),this._mode()._resetLayout()},d._getItemLayoutPosition=function(t){return this._mode()._getItemLayoutPosition(t)},d._manageStamp=function(t){this._mode()._manageStamp(t)},d._getContainerSize=function(){return this._mode()._getContainerSize()},d.needsResizeLayout=function(){return this._mode().needsResizeLayout()},d.appended=function(t){var e=this.addItems(t);if(e.length){var i=this._filterRevealAdded(e);this.filteredItems=this.filteredItems.concat(i)}},d.prepended=function(t){var e=this._itemize(t);if(e.length){this._resetLayout(),this._manageStamps();var i=this._filterRevealAdded(e);this.layoutItems(this.filteredItems),this.filteredItems=i.concat(this.filteredItems),this.items=e.concat(this.items)}},d._filterRevealAdded=function(t){var e=this._filter(t);return this.hide(e.needHide),this.reveal(e.matches),this.layoutItems(e.matches,!0),e.matches},d.insert=function(t){var e=this.addItems(t);if(e.length){var i,o,n=e.length;for(i=0;i<n;i++)o=e[i],this.element.appendChild(o.element);var s=this._filter(e).matches;for(i=0;i<n;i++)e[i].isLayoutInstant=!0;for(this.arrange(),i=0;i<n;i++)delete e[i].isLayoutInstant;this.reveal(s)}};var p=d.remove;return d.remove=function(t){t=n.makeArray(t);var e=this.getItems(t);p.call(this,t);for(var i=e&&e.length,o=0;i&&o<i;o++){var s=e[o];n.removeFrom(this.filteredItems,s)}},d.shuffle=function(){for(var t=0;t<this.items.length;t++)this.items[t].sortData.random=Math.random();this.options.sortBy="random",this._sort(),this._layout()},d._noTransition=function(t,e){var i=this.options.transitionDuration;this.options.transitionDuration=0;var o=t.apply(this,e);return this.options.transitionDuration=i,o},d.getFilteredItemElements=function(){return this.filteredItems.map(function(t){return t.element})},u}),function(t,e){"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("jquery")):t.jQueryBridget=e(t,t.jQuery)}(window,function(t,e){"use strict";function i(i,s,a){function h(t,e,o){var n,s="$()."+i+'("'+e+'")';return t.each(function(t,h){var l=a.data(h,i);if(l){var u=l[e];if(u&&"_"!=e.charAt(0)){var d=u.apply(l,o);n=void 0===n?d:n}else r(s+" is not a valid method")}else r(i+" not initialized. Cannot call methods, i.e. "+s)}),void 0!==n?n:t}function l(t,e){t.each(function(t,o){var n=a.data(o,i);n?(n.option(e),n._init()):(n=new s(o,e),a.data(o,i,n))})}(a=a||e||t.jQuery)&&(s.prototype.option||(s.prototype.option=function(t){a.isPlainObject(t)&&(this.options=a.extend(!0,this.options,t))}),a.fn[i]=function(t){return"string"==typeof t?h(this,t,n.call(arguments,1)):(l(this,t),this)},o(a))}function o(t){!t||t&&t.bridget||(t.bridget=i)}var n=Array.prototype.slice,s=t.console,r=void 0===s?function(){}:function(t){s.error(t)};return o(e||t.jQuery),i}),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},o=i[t]=i[t]||[];return-1==o.indexOf(e)&&o.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{};return(i[t]=i[t]||{})[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var o=i.indexOf(e);return-1!=o&&i.splice(o,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var o=0,n=i[o];e=e||[];for(var s=this._onceEvents&&this._onceEvents[t];n;){var r=s&&s[n];r&&(this.off(t,n),delete s[n]),n.apply(this,e),n=i[o+=r?0:1]}return this}},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("get-size/get-size",[],function(){return e()}):"object"==typeof module&&module.exports?module.exports=e():t.getSize=e()}(window,function(){"use strict";function t(t){var e=parseFloat(t);return-1==t.indexOf("%")&&!isNaN(e)&&e}function e(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;e<h;e++)t[a[e]]=0;return t}function i(t){var e=getComputedStyle(t);return e||r("Style returned "+e+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),e}function o(){if(!l){l=!0;var e=document.createElement("div");e.style.width="200px",e.style.padding="1px 2px 3px 4px",e.style.borderStyle="solid",e.style.borderWidth="1px 2px 3px 4px",e.style.boxSizing="border-box";var o=document.body||document.documentElement;o.appendChild(e);var r=i(e);n.isBoxSizeOuter=s=200==t(r.width),o.removeChild(e)}}function n(n){if(o(),"string"==typeof n&&(n=document.querySelector(n)),n&&"object"==typeof n&&n.nodeType){var r=i(n);if("none"==r.display)return e();var l={};l.width=n.offsetWidth,l.height=n.offsetHeight;for(var u=l.isBorderBox="border-box"==r.boxSizing,d=0;d<h;d++){var c=a[d],p=r[c],f=parseFloat(p);l[c]=isNaN(f)?0:f}var m=l.paddingLeft+l.paddingRight,g=l.paddingTop+l.paddingBottom,y=l.marginLeft+l.marginRight,v=l.marginTop+l.marginBottom,b=l.borderLeftWidth+l.borderRightWidth,_=l.borderTopWidth+l.borderBottomWidth,I=u&&s,w=t(r.width);!1!==w&&(l.width=w+(I?0:m+b));var x=t(r.height);return!1!==x&&(l.height=x+(I?0:g+_)),l.innerWidth=l.width-(m+b),l.innerHeight=l.height-(g+_),l.outerWidth=l.width+y,l.outerHeight=l.height+v,l}}var s,r="undefined"==typeof console?function(){}:function(t){console.error(t)},a=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],h=a.length,l=!1;return n}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",e):"object"==typeof module&&module.exports?module.exports=e():t.matchesSelector=e()}(window,function(){"use strict";var t=function(){var t=window.Element.prototype;if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],i=0;i<e.length;i++){var o=e[i]+"MatchesSelector";if(t[o])return o}}();return function(e,i){return e[t](i)}}),function(t,e){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("desandro-matches-selector")):t.fizzyUIUtils=e(t,t.matchesSelector)}(window,function(t,e){var i={};i.extend=function(t,e){for(var i in e)t[i]=e[i];return t},i.modulo=function(t,e){return(t%e+e)%e},i.makeArray=function(t){var e=[];if(Array.isArray(t))e=t;else if(t&&"object"==typeof t&&"number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e},i.removeFrom=function(t,e){var i=t.indexOf(e);-1!=i&&t.splice(i,1)},i.getParent=function(t,i){for(;t.parentNode&&t!=document.body;)if(t=t.parentNode,e(t,i))return t},i.getQueryElement=function(t){return"string"==typeof t?document.querySelector(t):t},i.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.filterFindElements=function(t,o){var n=[];return(t=i.makeArray(t)).forEach(function(t){if(t instanceof HTMLElement){if(!o)return void n.push(t);e(t,o)&&n.push(t);for(var i=t.querySelectorAll(o),s=0;s<i.length;s++)n.push(i[s])}}),n},i.debounceMethod=function(t,e,i){var o=t.prototype[e],n=e+"Timeout";t.prototype[e]=function(){var t=this[n];t&&clearTimeout(t);var e=arguments,s=this;this[n]=setTimeout(function(){o.apply(s,e),delete s[n]},i||100)}},i.docReady=function(t){var e=document.readyState;"complete"==e||"interactive"==e?setTimeout(t):document.addEventListener("DOMContentLoaded",t)},i.toDashed=function(t){return t.replace(/(.)([A-Z])/g,function(t,e,i){return e+"-"+i}).toLowerCase()};var o=t.console;return i.htmlInit=function(e,n){i.docReady(function(){var s=i.toDashed(n),r="data-"+s,a=document.querySelectorAll("["+r+"]"),h=document.querySelectorAll(".js-"+s),l=i.makeArray(a).concat(i.makeArray(h)),u=r+"-options",d=t.jQuery;l.forEach(function(t){var i,s=t.getAttribute(r)||t.getAttribute(u);try{i=s&&JSON.parse(s)}catch(e){return void(o&&o.error("Error parsing "+r+" on "+t.className+": "+e))}var a=new e(t,i);d&&d.data(t,n,a)})})},i}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/item",["ev-emitter/ev-emitter","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("ev-emitter"),require("get-size")):(t.Outlayer={},t.Outlayer.Item=e(t.EvEmitter,t.getSize))}(window,function(t,e){"use strict";function i(t){for(var e in t)return!1;return null,!0}function o(t,e){t&&(this.element=t,this.layout=e,this.position={x:0,y:0},this._create())}var n=document.documentElement.style,s="string"==typeof n.transition?"transition":"WebkitTransition",r="string"==typeof n.transform?"transform":"WebkitTransform",a={WebkitTransition:"webkitTransitionEnd",transition:"transitionend"}[s],h={transform:r,transition:s,transitionDuration:s+"Duration",transitionProperty:s+"Property",transitionDelay:s+"Delay"},l=o.prototype=Object.create(t.prototype);l.constructor=o,l._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},l.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},l.getSize=function(){this.size=e(this.element)},l.css=function(t){var e=this.element.style;for(var i in t)e[h[i]||i]=t[i]},l.getPosition=function(){var t=getComputedStyle(this.element),e=this.layout._getOption("originLeft"),i=this.layout._getOption("originTop"),o=t[e?"left":"right"],n=t[i?"top":"bottom"],s=this.layout.size,r=-1!=o.indexOf("%")?parseFloat(o)/100*s.width:parseInt(o,10),a=-1!=n.indexOf("%")?parseFloat(n)/100*s.height:parseInt(n,10);r=isNaN(r)?0:r,a=isNaN(a)?0:a,r-=e?s.paddingLeft:s.paddingRight,a-=i?s.paddingTop:s.paddingBottom,this.position.x=r,this.position.y=a},l.layoutPosition=function(){var t=this.layout.size,e={},i=this.layout._getOption("originLeft"),o=this.layout._getOption("originTop"),n=i?"paddingLeft":"paddingRight",s=i?"left":"right",r=i?"right":"left",a=this.position.x+t[n];e[s]=this.getXValue(a),e[r]="";var h=o?"paddingTop":"paddingBottom",l=o?"top":"bottom",u=o?"bottom":"top",d=this.position.y+t[h];e[l]=this.getYValue(d),e[u]="",this.css(e),this.emitEvent("layout",[this])},l.getXValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&!e?t/this.layout.size.width*100+"%":t+"px"},l.getYValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&e?t/this.layout.size.height*100+"%":t+"px"},l._transitionTo=function(t,e){this.getPosition();var i=this.position.x,o=this.position.y,n=parseInt(t,10),s=parseInt(e,10),r=n===this.position.x&&s===this.position.y;if(this.setPosition(t,e),!r||this.isTransitioning){var a=t-i,h=e-o,l={};l.transform=this.getTranslate(a,h),this.transition({to:l,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})}else this.layoutPosition()},l.getTranslate=function(t,e){var i=this.layout._getOption("originLeft"),o=this.layout._getOption("originTop");return t=i?t:-t,e=o?e:-e,"translate3d("+t+"px, "+e+"px, 0)"},l.goTo=function(t,e){this.setPosition(t,e),this.layoutPosition()},l.moveTo=l._transitionTo,l.setPosition=function(t,e){this.position.x=parseInt(t,10),this.position.y=parseInt(e,10)},l._nonTransition=function(t){this.css(t.to),t.isCleaning&&this._removeStyles(t.to);for(var e in t.onTransitionEnd)t.onTransitionEnd[e].call(this)},l.transition=function(t){if(parseFloat(this.layout.options.transitionDuration)){var e=this._transn;for(var i in t.onTransitionEnd)e.onEnd[i]=t.onTransitionEnd[i];for(i in t.to)e.ingProperties[i]=!0,t.isCleaning&&(e.clean[i]=!0);if(t.from){this.css(t.from);this.element.offsetHeight;null}this.enableTransition(t.to),this.css(t.to),this.isTransitioning=!0}else this._nonTransition(t)};var u="opacity,"+function(t){return t.replace(/([A-Z])/g,function(t){return"-"+t.toLowerCase()})}(r);l.enableTransition=function(){if(!this.isTransitioning){var t=this.layout.options.transitionDuration;t="number"==typeof t?t+"ms":t,this.css({transitionProperty:u,transitionDuration:t,transitionDelay:this.staggerDelay||0}),this.element.addEventListener(a,this,!1)}},l.onwebkitTransitionEnd=function(t){this.ontransitionend(t)},l.onotransitionend=function(t){this.ontransitionend(t)};var d={"-webkit-transform":"transform"};l.ontransitionend=function(t){if(t.target===this.element){var e=this._transn,o=d[t.propertyName]||t.propertyName;delete e.ingProperties[o],i(e.ingProperties)&&this.disableTransition(),o in e.clean&&(this.element.style[t.propertyName]="",delete e.clean[o]),o in e.onEnd&&(e.onEnd[o].call(this),delete e.onEnd[o]),this.emitEvent("transitionEnd",[this])}},l.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(a,this,!1),this.isTransitioning=!1},l._removeStyles=function(t){var e={};for(var i in t)e[i]="";this.css(e)};var c={transitionProperty:"",transitionDuration:"",transitionDelay:""};return l.removeTransitionStyles=function(){this.css(c)},l.stagger=function(t){t=isNaN(t)?0:t,this.staggerDelay=t+"ms"},l.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},l.remove=function(){return s&&parseFloat(this.layout.options.transitionDuration)?(this.once("transitionEnd",function(){this.removeElem()}),void this.hide()):void this.removeElem()},l.reveal=function(){delete this.isHidden,this.css({display:""});var t=this.layout.options,e={};e[this.getHideRevealTransitionEndProperty("visibleStyle")]=this.onRevealTransitionEnd,this.transition({from:t.hiddenStyle,to:t.visibleStyle,isCleaning:!0,onTransitionEnd:e})},l.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},l.getHideRevealTransitionEndProperty=function(t){var e=this.layout.options[t];if(e.opacity)return"opacity";for(var i in e)return i},l.hide=function(){this.isHidden=!0,this.css({display:""});var t=this.layout.options,e={};e[this.getHideRevealTransitionEndProperty("hiddenStyle")]=this.onHideTransitionEnd,this.transition({from:t.visibleStyle,to:t.hiddenStyle,isCleaning:!0,onTransitionEnd:e})},l.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},l.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},o}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(i,o,n,s){return e(t,i,o,n,s)}):"object"==typeof module&&module.exports?module.exports=e(t,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):t.Outlayer=e(t,t.EvEmitter,t.getSize,t.fizzyUIUtils,t.Outlayer.Item)}(window,function(t,e,i,o,n){"use strict";function s(t,e){var i=o.getQueryElement(t);if(i){this.element=i,l&&(this.$element=l(this.element)),this.options=o.extend({},this.constructor.defaults),this.option(e);var n=++d;this.element.outlayerGUID=n,c[n]=this,this._create(),this._getOption("initLayout")&&this.layout()}else h&&h.error("Bad element for "+this.constructor.namespace+": "+(i||t))}function r(t){function e(){t.apply(this,arguments)}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e}function a(t){if("number"==typeof t)return t;var e=t.match(/(^\d*\.?\d*)(\w*)/),i=e&&e[1],o=e&&e[2];return i.length?(i=parseFloat(i))*(f[o]||1):0}var h=t.console,l=t.jQuery,u=function(){},d=0,c={};s.namespace="outlayer",s.Item=n,s.defaults={containerStyle:{position:"relative"},initLayout:!0,originLeft:!0,originTop:!0,resize:!0,resizeContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}};var p=s.prototype;o.extend(p,e.prototype),p.option=function(t){o.extend(this.options,t)},p._getOption=function(t){var e=this.constructor.compatOptions[t];return e&&void 0!==this.options[e]?this.options[e]:this.options[t]},s.compatOptions={initLayout:"isInitLayout",horizontal:"isHorizontal",layoutInstant:"isLayoutInstant",originLeft:"isOriginLeft",originTop:"isOriginTop",resize:"isResizeBound",resizeContainer:"isResizingContainer"},p._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),o.extend(this.element.style,this.options.containerStyle),this._getOption("resize")&&this.bindResize()},p.reloadItems=function(){this.items=this._itemize(this.element.children)},p._itemize=function(t){for(var e=this._filterFindItemElements(t),i=this.constructor.Item,o=[],n=0;n<e.length;n++){var s=new i(e[n],this);o.push(s)}return o},p._filterFindItemElements=function(t){return o.filterFindElements(t,this.options.itemSelector)},p.getItemElements=function(){return this.items.map(function(t){return t.element})},p.layout=function(){this._resetLayout(),this._manageStamps();var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;this.layoutItems(this.items,e),this._isLayoutInited=!0},p._init=p.layout,p._resetLayout=function(){this.getSize()},p.getSize=function(){this.size=i(this.element)},p._getMeasurement=function(t,e){var o,n=this.options[t];n?("string"==typeof n?o=this.element.querySelector(n):n instanceof HTMLElement&&(o=n),this[t]=o?i(o)[e]:n):this[t]=0},p.layoutItems=function(t,e){t=this._getItemsForLayout(t),this._layoutItems(t,e),this._postLayout()},p._getItemsForLayout=function(t){return t.filter(function(t){return!t.isIgnored})},p._layoutItems=function(t,e){if(this._emitCompleteOnItems("layout",t),t&&t.length){var i=[];t.forEach(function(t){var o=this._getItemLayoutPosition(t);o.item=t,o.isInstant=e||t.isLayoutInstant,i.push(o)},this),this._processLayoutQueue(i)}},p._getItemLayoutPosition=function(){return{x:0,y:0}},p._processLayoutQueue=function(t){this.updateStagger(),t.forEach(function(t,e){this._positionItem(t.item,t.x,t.y,t.isInstant,e)},this)},p.updateStagger=function(){var t=this.options.stagger;return null===t||void 0===t?void(this.stagger=0):(this.stagger=a(t),this.stagger)},p._positionItem=function(t,e,i,o,n){o?t.goTo(e,i):(t.stagger(n*this.stagger),t.moveTo(e,i))},p._postLayout=function(){this.resizeContainer()},p.resizeContainer=function(){if(this._getOption("resizeContainer")){var t=this._getContainerSize();t&&(this._setContainerMeasure(t.width,!0),this._setContainerMeasure(t.height,!1))}},p._getContainerSize=u,p._setContainerMeasure=function(t,e){if(void 0!==t){var i=this.size;i.isBorderBox&&(t+=e?i.paddingLeft+i.paddingRight+i.borderLeftWidth+i.borderRightWidth:i.paddingBottom+i.paddingTop+i.borderTopWidth+i.borderBottomWidth),t=Math.max(t,0),this.element.style[e?"width":"height"]=t+"px"}},p._emitCompleteOnItems=function(t,e){function i(){n.dispatchEvent(t+"Complete",null,[e])}function o(){++r==s&&i()}var n=this,s=e.length;if(e&&s){var r=0;e.forEach(function(e){e.once(t,o)})}else i()},p.dispatchEvent=function(t,e,i){var o=e?[e].concat(i):i;if(this.emitEvent(t,o),l)if(this.$element=this.$element||l(this.element),e){var n=l.Event(e);n.type=t,this.$element.trigger(n,i)}else this.$element.trigger(t,i)},p.ignore=function(t){var e=this.getItem(t);e&&(e.isIgnored=!0)},p.unignore=function(t){var e=this.getItem(t);e&&delete e.isIgnored},p.stamp=function(t){(t=this._find(t))&&(this.stamps=this.stamps.concat(t),t.forEach(this.ignore,this))},p.unstamp=function(t){(t=this._find(t))&&t.forEach(function(t){o.removeFrom(this.stamps,t),this.unignore(t)},this)},p._find=function(t){if(t)return"string"==typeof t&&(t=this.element.querySelectorAll(t)),t=o.makeArray(t)},p._manageStamps=function(){this.stamps&&this.stamps.length&&(this._getBoundingRect(),this.stamps.forEach(this._manageStamp,this))},p._getBoundingRect=function(){var t=this.element.getBoundingClientRect(),e=this.size;this._boundingRect={left:t.left+e.paddingLeft+e.borderLeftWidth,top:t.top+e.paddingTop+e.borderTopWidth,right:t.right-(e.paddingRight+e.borderRightWidth),bottom:t.bottom-(e.paddingBottom+e.borderBottomWidth)}},p._manageStamp=u,p._getElementOffset=function(t){var e=t.getBoundingClientRect(),o=this._boundingRect,n=i(t);return{left:e.left-o.left-n.marginLeft,top:e.top-o.top-n.marginTop,right:o.right-e.right-n.marginRight,bottom:o.bottom-e.bottom-n.marginBottom}},p.handleEvent=o.handleEvent,p.bindResize=function(){t.addEventListener("resize",this),this.isResizeBound=!0},p.unbindResize=function(){t.removeEventListener("resize",this),this.isResizeBound=!1},p.onresize=function(){this.resize()},o.debounceMethod(s,"onresize",100),p.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},p.needsResizeLayout=function(){var t=i(this.element);return this.size&&t&&t.innerWidth!==this.size.innerWidth},p.addItems=function(t){var e=this._itemize(t);return e.length&&(this.items=this.items.concat(e)),e},p.appended=function(t){var e=this.addItems(t);e.length&&(this.layoutItems(e,!0),this.reveal(e))},p.prepended=function(t){var e=this._itemize(t);if(e.length){var i=this.items.slice(0);this.items=e.concat(i),this._resetLayout(),this._manageStamps(),this.layoutItems(e,!0),this.reveal(e),this.layoutItems(i)}},p.reveal=function(t){if(this._emitCompleteOnItems("reveal",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.reveal()})}},p.hide=function(t){if(this._emitCompleteOnItems("hide",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.hide()})}},p.revealItemElements=function(t){var e=this.getItems(t);this.reveal(e)},p.hideItemElements=function(t){var e=this.getItems(t);this.hide(e)},p.getItem=function(t){for(var e=0;e<this.items.length;e++){var i=this.items[e];if(i.element==t)return i}},p.getItems=function(t){var e=[];return(t=o.makeArray(t)).forEach(function(t){var i=this.getItem(t);i&&e.push(i)},this),e},p.remove=function(t){var e=this.getItems(t);this._emitCompleteOnItems("remove",e),e&&e.length&&e.forEach(function(t){t.remove(),o.removeFrom(this.items,t)},this)},p.destroy=function(){var t=this.element.style;t.height="",t.position="",t.width="",this.items.forEach(function(t){t.destroy()}),this.unbindResize();var e=this.element.outlayerGUID;delete c[e],delete this.element.outlayerGUID,l&&l.removeData(this.element,this.constructor.namespace)},s.data=function(t){var e=(t=o.getQueryElement(t))&&t.outlayerGUID;return e&&c[e]},s.create=function(t,e){var i=r(s);return i.defaults=o.extend({},s.defaults),o.extend(i.defaults,e),i.compatOptions=o.extend({},s.compatOptions),i.namespace=t,i.data=s.data,i.Item=r(n),o.htmlInit(i,t),l&&l.bridget&&l.bridget(t,i),i};var f={ms:1,s:1e3};return s.Item=n,s}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/item",["outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.Item=e(t.Outlayer))}(window,function(t){"use strict";function e(){t.Item.apply(this,arguments)}var i=e.prototype=Object.create(t.Item.prototype),o=i._create;i._create=function(){this.id=this.layout.itemGUID++,o.call(this),this.sortData={}},i.updateSortData=function(){if(!this.isIgnored){this.sortData.id=this.id,this.sortData["original-order"]=this.id,this.sortData.random=Math.random();var t=this.layout.options.getSortData,e=this.layout._sorters;for(var i in t){var o=e[i];this.sortData[i]=o(this.element,this)}}};var n=i.destroy;return i.destroy=function(){n.apply(this,arguments),this.css({display:""})},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-mode",["get-size/get-size","outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("get-size"),require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.LayoutMode=e(t.getSize,t.Outlayer))}(window,function(t,e){"use strict";function i(t){this.isotope=t,t&&(this.options=t.options[this.namespace],this.element=t.element,this.items=t.filteredItems,this.size=t.size)}var o=i.prototype;return["_resetLayout","_getItemLayoutPosition","_manageStamp","_getContainerSize","_getElementOffset","needsResizeLayout","_getOption"].forEach(function(t){o[t]=function(){return e.prototype[t].apply(this.isotope,arguments)}}),o.needsVerticalResizeLayout=function(){var e=t(this.isotope.element);return this.isotope.size&&e&&e.innerHeight!=this.isotope.size.innerHeight},o._getMeasurement=function(){this.isotope._getMeasurement.apply(this,arguments)},o.getColumnWidth=function(){this.getSegmentSize("column","Width")},o.getRowHeight=function(){this.getSegmentSize("row","Height")},o.getSegmentSize=function(t,e){var i=t+e,o="outer"+e;if(this._getMeasurement(i,o),!this[i]){var n=this.getFirstItemSize();this[i]=n&&n[o]||this.isotope.size["inner"+e]}},o.getFirstItemSize=function(){var e=this.isotope.filteredItems[0];return e&&e.element&&t(e.element)},o.layout=function(){this.isotope.layout.apply(this.isotope,arguments)},o.getSize=function(){this.isotope.getSize(),this.size=this.isotope.size},i.modes={},i.create=function(t,e){function n(){i.apply(this,arguments)}return n.prototype=Object.create(o),n.prototype.constructor=n,e&&(n.options=e),n.prototype.namespace=t,i.modes[t]=n,n},i}),function(t,e){"function"==typeof define&&define.amd?define("masonry/masonry",["outlayer/outlayer","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer"),require("get-size")):t.Masonry=e(t.Outlayer,t.getSize)}(window,function(t,e){var i=t.create("masonry");i.compatOptions.fitWidth="isFitWidth";var o=i.prototype;return o._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns(),this.colYs=[];for(var t=0;t<this.cols;t++)this.colYs.push(0);this.maxY=0,this.horizontalColIndex=0},o.measureColumns=function(){if(this.getContainerWidth(),!this.columnWidth){var t=this.items[0],i=t&&t.element;this.columnWidth=i&&e(i).outerWidth||this.containerWidth}var o=this.columnWidth+=this.gutter,n=this.containerWidth+this.gutter,s=n/o,r=o-n%o,a=r&&r<1?"round":"floor";s=Math[a](s),this.cols=Math.max(s,1)},o.getContainerWidth=function(){var t=this._getOption("fitWidth")?this.element.parentNode:this.element,i=e(t);this.containerWidth=i&&i.innerWidth},o._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth%this.columnWidth,i=e&&e<1?"round":"ceil",o=Math[i](t.size.outerWidth/this.columnWidth);o=Math.min(o,this.cols);for(var n=this[this.options.horizontalOrder?"_getHorizontalColPosition":"_getTopColPosition"](o,t),s={x:this.columnWidth*n.col,y:n.y},r=n.y+t.size.outerHeight,a=o+n.col,h=n.col;h<a;h++)this.colYs[h]=r;return s},o._getTopColPosition=function(t){var e=this._getTopColGroup(t),i=Math.min.apply(Math,e);return{col:e.indexOf(i),y:i}},o._getTopColGroup=function(t){if(t<2)return this.colYs;for(var e=[],i=this.cols+1-t,o=0;o<i;o++)e[o]=this._getColGroupY(o,t);return e},o._getColGroupY=function(t,e){if(e<2)return this.colYs[t];var i=this.colYs.slice(t,t+e);return Math.max.apply(Math,i)},o._getHorizontalColPosition=function(t,e){var i=this.horizontalColIndex%this.cols;i=t>1&&i+t>this.cols?0:i;var o=e.size.outerWidth&&e.size.outerHeight;return this.horizontalColIndex=o?i+t:this.horizontalColIndex,{col:i,y:this._getColGroupY(i,t)}},o._manageStamp=function(t){var i=e(t),o=this._getElementOffset(t),n=this._getOption("originLeft")?o.left:o.right,s=n+i.outerWidth,r=Math.floor(n/this.columnWidth);r=Math.max(0,r);var a=Math.floor(s/this.columnWidth);a-=s%this.columnWidth?0:1,a=Math.min(this.cols-1,a);for(var h=(this._getOption("originTop")?o.top:o.bottom)+i.outerHeight,l=r;l<=a;l++)this.colYs[l]=Math.max(h,this.colYs[l])},o._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var t={height:this.maxY};return this._getOption("fitWidth")&&(t.width=this._getContainerFitWidth()),t},o._getContainerFitWidth=function(){for(var t=0,e=this.cols;--e&&0===this.colYs[e];)t++;return(this.cols-t)*this.columnWidth-this.gutter},o.needsResizeLayout=function(){var t=this.containerWidth;return this.getContainerWidth(),t!=this.containerWidth},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/masonry",["../layout-mode","masonry/masonry"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode"),require("masonry-layout")):e(t.Isotope.LayoutMode,t.Masonry)}(window,function(t,e){"use strict";var i=t.create("masonry"),o=i.prototype,n={_getElementOffset:!0,layout:!0,_getMeasurement:!0};for(var s in e.prototype)n[s]||(o[s]=e.prototype[s]);var r=o.measureColumns;o.measureColumns=function(){this.items=this.isotope.filteredItems,r.call(this)};var a=o._getOption;return o._getOption=function(t){return"fitWidth"==t?void 0!==this.options.isFitWidth?this.options.isFitWidth:this.options.fitWidth:a.apply(this.isotope,arguments)},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/fit-rows",["../layout-mode"],e):"object"==typeof exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("fitRows"),i=e.prototype;return i._resetLayout=function(){this.x=0,this.y=0,this.maxY=0,this._getMeasurement("gutter","outerWidth")},i._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth+this.gutter,i=this.isotope.size.innerWidth+this.gutter;0!==this.x&&e+this.x>i&&(this.x=0,this.y=this.maxY);var o={x:this.x,y:this.y};return this.maxY=Math.max(this.maxY,this.y+t.size.outerHeight),this.x+=e,o},i._getContainerSize=function(){return{height:this.maxY}},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/vertical",["../layout-mode"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("vertical",{horizontalAlignment:0}),i=e.prototype;return i._resetLayout=function(){this.y=0},i._getItemLayoutPosition=function(t){t.getSize();var e=(this.isotope.size.innerWidth-t.size.outerWidth)*this.options.horizontalAlignment,i=this.y;return this.y+=t.size.outerHeight,{x:e,y:i}},i._getContainerSize=function(){return{height:this.y}},e}),function(t,e){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","desandro-matches-selector/matches-selector","fizzy-ui-utils/utils","isotope/js/item","isotope/js/layout-mode","isotope/js/layout-modes/masonry","isotope/js/layout-modes/fit-rows","isotope/js/layout-modes/vertical"],function(i,o,n,s,r,a){return e(t,i,o,n,s,r,a)}):"object"==typeof module&&module.exports?module.exports=e(t,require("outlayer"),require("get-size"),require("desandro-matches-selector"),require("fizzy-ui-utils"),require("isotope/js/item"),require("isotope/js/layout-mode"),require("isotope/js/layout-modes/masonry"),require("isotope/js/layout-modes/fit-rows"),require("isotope/js/layout-modes/vertical")):t.Isotope=e(t,t.Outlayer,t.getSize,t.matchesSelector,t.fizzyUIUtils,t.Isotope.Item,t.Isotope.LayoutMode)}(window,function(t,e,i,o,n,s,r){function a(t,e){return function(i,o){for(var n=0;n<t.length;n++){var s=t[n],r=i.sortData[s],a=o.sortData[s];if(r>a||r<a){var h=(void 0!==e[s]?e[s]:e)?1:-1;return(r>a?1:-1)*h}}return 0}}var h=t.jQuery,l=String.prototype.trim?function(t){return t.trim()}:function(t){return t.replace(/^\s+|\s+$/g,"")},u=e.create("isotope",{layoutMode:"masonry",isJQueryFiltering:!0,sortAscending:!0});u.Item=s,u.LayoutMode=r;var d=u.prototype;d._create=function(){this.itemGUID=0,this._sorters={},this._getSorters(),e.prototype._create.call(this),this.modes={},this.filteredItems=this.items,this.sortHistory=["original-order"];for(var t in r.modes)this._initLayoutMode(t)},d.reloadItems=function(){this.itemGUID=0,e.prototype.reloadItems.call(this)},d._itemize=function(){for(var t=e.prototype._itemize.apply(this,arguments),i=0;i<t.length;i++)t[i].id=this.itemGUID++;return this._updateItemsSortData(t),t},d._initLayoutMode=function(t){var e=r.modes[t],i=this.options[t]||{};this.options[t]=e.options?n.extend(e.options,i):i,this.modes[t]=new e(this)},d.layout=function(){return!this._isLayoutInited&&this._getOption("initLayout")?void this.arrange():void this._layout()},d._layout=function(){var t=this._getIsInstant();this._resetLayout(),this._manageStamps(),this.layoutItems(this.filteredItems,t),this._isLayoutInited=!0},d.arrange=function(t){this.option(t),this._getIsInstant();var e=this._filter(this.items);this.filteredItems=e.matches,this._bindArrangeComplete(),this._isInstant?this._noTransition(this._hideReveal,[e]):this._hideReveal(e),this._sort(),this._layout()},d._init=d.arrange,d._hideReveal=function(t){this.reveal(t.needReveal),this.hide(t.needHide)},d._getIsInstant=function(){var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;return this._isInstant=e,e},d._bindArrangeComplete=function(){function t(){e&&i&&o&&n.dispatchEvent("arrangeComplete",null,[n.filteredItems])}var e,i,o,n=this;this.once("layoutComplete",function(){e=!0,t()}),this.once("hideComplete",function(){i=!0,t()}),this.once("revealComplete",function(){o=!0,t()})},d._filter=function(t){var e=this.options.filter;e=e||"*";for(var i=[],o=[],n=[],s=this._getFilterTest(e),r=0;r<t.length;r++){var a=t[r];if(!a.isIgnored){var h=s(a);h&&i.push(a),h&&a.isHidden?o.push(a):h||a.isHidden||n.push(a)}}return{matches:i,needReveal:o,needHide:n}},d._getFilterTest=function(t){return h&&this.options.isJQueryFiltering?function(e){return h(e.element).is(t)}:"function"==typeof t?function(e){return t(e.element)}:function(e){return o(e.element,t)}},d.updateSortData=function(t){var e;t?(t=n.makeArray(t),e=this.getItems(t)):e=this.items,this._getSorters(),this._updateItemsSortData(e)},d._getSorters=function(){var t=this.options.getSortData;for(var e in t){var i=t[e];this._sorters[e]=c(i)}},d._updateItemsSortData=function(t){for(var e=t&&t.length,i=0;e&&i<e;i++)t[i].updateSortData()};var c=function(){function t(t,e){return t?function(e){return e.getAttribute(t)}:function(t){var i=t.querySelector(e);return i&&i.textContent}}return function(e){if("string"!=typeof e)return e;var i=l(e).split(" "),o=i[0],n=o.match(/^\[(.+)\]$/),s=t(n&&n[1],o),r=u.sortDataParsers[i[1]];return e=r?function(t){return t&&r(s(t))}:function(t){return t&&s(t)}}}();u.sortDataParsers={parseInt:function(t){return parseInt(t,10)},parseFloat:function(t){return parseFloat(t)}},d._sort=function(){if(this.options.sortBy){var t=n.makeArray(this.options.sortBy);this._getIsSameSortBy(t)||(this.sortHistory=t.concat(this.sortHistory));var e=a(this.sortHistory,this.options.sortAscending);this.filteredItems.sort(e)}},d._getIsSameSortBy=function(t){for(var e=0;e<t.length;e++)if(t[e]!=this.sortHistory[e])return!1;return!0},d._mode=function(){var t=this.options.layoutMode,e=this.modes[t];if(!e)throw new Error("No layout mode: "+t);return e.options=this.options[t],e},d._resetLayout=function(){e.prototype._resetLayout.call(this),this._mode()._resetLayout()},d._getItemLayoutPosition=function(t){return this._mode()._getItemLayoutPosition(t)},d._manageStamp=function(t){this._mode()._manageStamp(t)},d._getContainerSize=function(){return this._mode()._getContainerSize()},d.needsResizeLayout=function(){return this._mode().needsResizeLayout()},d.appended=function(t){var e=this.addItems(t);if(e.length){var i=this._filterRevealAdded(e);this.filteredItems=this.filteredItems.concat(i)}},d.prepended=function(t){var e=this._itemize(t);if(e.length){this._resetLayout(),this._manageStamps();var i=this._filterRevealAdded(e);this.layoutItems(this.filteredItems),this.filteredItems=i.concat(this.filteredItems),this.items=e.concat(this.items)}},d._filterRevealAdded=function(t){var e=this._filter(t);return this.hide(e.needHide),this.reveal(e.matches),this.layoutItems(e.matches,!0),e.matches},d.insert=function(t){var e=this.addItems(t);if(e.length){var i,o,n=e.length;for(i=0;i<n;i++)o=e[i],this.element.appendChild(o.element);var s=this._filter(e).matches;for(i=0;i<n;i++)e[i].isLayoutInstant=!0;for(this.arrange(),i=0;i<n;i++)delete e[i].isLayoutInstant;this.reveal(s)}};var p=d.remove;return d.remove=function(t){t=n.makeArray(t);var e=this.getItems(t);p.call(this,t);for(var i=e&&e.length,o=0;i&&o<i;o++){var s=e[o];n.removeFrom(this.filteredItems,s)}},d.shuffle=function(){for(var t=0;t<this.items.length;t++)this.items[t].sortData.random=Math.random();this.options.sortBy="random",this._sort(),this._layout()},d._noTransition=function(t,e){var i=this.options.transitionDuration;this.options.transitionDuration=0;var o=t.apply(this,e);return this.options.transitionDuration=i,o},d.getFilteredItemElements=function(){return this.filteredItems.map(function(t){return t.element})},u});var $grid,$=jQuery.noConflict();if($(document).ready(function(){$grid=$(".grid").isotope({itemSelector:".grid-item",layoutMode:"masonry",fitWidth:!0,masonry:{gutter:20,columnWidth:".item"}})}),$(document).ready(function(){$(".grid-projects").isotope({itemSelector:".grid-projects-item",layoutMode:"masonry",masonry:{gutter:25,columnWidth:".projects-page_post"}})}),$(document).ready(function(){var t=$(".m-single-post_content_text>p").width();$(".gallery-1")&&($(".m-single-post_content_text>p").css("marginLeft","90px"),$(".m-single-post_content_text>p").css("width",t-50+"px"))}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(t){"use strict";var e=jQuery.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||e[0]>3)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(),function(t){"use strict";function e(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return{end:e[i]};return!1}t.fn.emulateTransitionEnd=function(e){var i=!1,o=this;t(this).one("bsTransitionEnd",function(){i=!0});return setTimeout(function(){i||t(o).trigger(t.support.transition.end)},e),this},t(function(){t.support.transition=e(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){if(t(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}})})}(jQuery),function(t){"use strict";var e='[data-dismiss="alert"]',i=function(i){t(i).on("click",e,this.close)};i.VERSION="3.3.7",i.TRANSITION_DURATION=150,i.prototype.close=function(e){function o(){r.detach().trigger("closed.bs.alert").remove()}var n=t(this),s=n.attr("data-target");s||(s=(s=n.attr("href"))&&s.replace(/.*(?=#[^\s]*$)/,""));var r=t("#"===s?[]:s);e&&e.preventDefault(),r.length||(r=n.closest(".alert")),r.trigger(e=t.Event("close.bs.alert")),e.isDefaultPrevented()||(r.removeClass("in"),t.support.transition&&r.hasClass("fade")?r.one("bsTransitionEnd",o).emulateTransitionEnd(i.TRANSITION_DURATION):o())};var o=t.fn.alert;t.fn.alert=function(e){return this.each(function(){var o=t(this),n=o.data("bs.alert");n||o.data("bs.alert",n=new i(this)),"string"==typeof e&&n[e].call(o)})},t.fn.alert.Constructor=i,t.fn.alert.noConflict=function(){return t.fn.alert=o,this},t(document).on("click.bs.alert.data-api",e,i.prototype.close)}(jQuery),function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.button"),s="object"==typeof e&&e;n||o.data("bs.button",n=new i(this,s)),"toggle"==e?n.toggle():e&&n.setState(e)})}var i=function(e,o){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,o),this.isLoading=!1};i.VERSION="3.3.7",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var i="disabled",o=this.$element,n=o.is("input")?"val":"html",s=o.data();e+="Text",null==s.resetText&&o.data("resetText",o[n]()),setTimeout(t.proxy(function(){o[n](null==s[e]?this.options[e]:s[e]),"loadingText"==e?(this.isLoading=!0,o.addClass(i).attr(i,i).prop(i,!0)):this.isLoading&&(this.isLoading=!1,o.removeClass(i).removeAttr(i).prop(i,!1))},this),0)},i.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var i=this.$element.find("input");"radio"==i.prop("type")?(i.prop("checked")&&(t=!1),e.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==i.prop("type")&&(i.prop("checked")!==this.$element.hasClass("active")&&(t=!1),this.$element.toggleClass("active")),i.prop("checked",this.$element.hasClass("active")),t&&i.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var o=t.fn.button;t.fn.button=e,t.fn.button.Constructor=i,t.fn.button.noConflict=function(){return t.fn.button=o,this},t(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var o=t(i.target).closest(".btn");e.call(o,"toggle"),t(i.target).is('input[type="radio"], input[type="checkbox"]')||(i.preventDefault(),o.is("input,button")?o.trigger("focus"):o.find("input:visible,button:visible").first().trigger("focus"))}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(e){t(e.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(e.type))})}(jQuery),function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.carousel"),s=t.extend({},i.DEFAULTS,o.data(),"object"==typeof e&&e),r="string"==typeof e?e:s.slide;n||o.data("bs.carousel",n=new i(this,s)),"number"==typeof e?n.to(e):r?n[r]():s.interval&&n.pause().cycle()})}var i=function(e,i){this.$element=t(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",t.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",t.proxy(this.pause,this)).on("mouseleave.bs.carousel",t.proxy(this.cycle,this))};i.VERSION="3.3.7",i.TRANSITION_DURATION=600,i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},i.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},i.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(t.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},i.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e);if(("prev"==t&&0===i||"next"==t&&i==this.$items.length-1)&&!this.options.wrap)return e;var o=(i+("prev"==t?-1:1))%this.$items.length;return this.$items.eq(o)},i.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(t>this.$items.length-1||t<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",this.$items.eq(t))},i.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&t.support.transition&&(this.$element.trigger(t.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){if(!this.sliding)return this.slide("next")},i.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},i.prototype.slide=function(e,o){var n=this.$element.find(".item.active"),s=o||this.getItemForDirection(e,n),r=this.interval,a="next"==e?"left":"right",h=this;if(s.hasClass("active"))return this.sliding=!1;var l=s[0],u=t.Event("slide.bs.carousel",{relatedTarget:l,direction:a});if(this.$element.trigger(u),!u.isDefaultPrevented()){if(this.sliding=!0,r&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var d=t(this.$indicators.children()[this.getItemIndex(s)]);d&&d.addClass("active")}var c=t.Event("slid.bs.carousel",{relatedTarget:l,direction:a});return t.support.transition&&this.$element.hasClass("slide")?(s.addClass(e),s[0].offsetWidth,n.addClass(a),s.addClass(a),n.one("bsTransitionEnd",function(){s.removeClass([e,a].join(" ")).addClass("active"),n.removeClass(["active",a].join(" ")),h.sliding=!1,setTimeout(function(){h.$element.trigger(c)},0)}).emulateTransitionEnd(i.TRANSITION_DURATION)):(n.removeClass("active"),s.addClass("active"),this.sliding=!1,this.$element.trigger(c)),r&&this.cycle(),this}};var o=t.fn.carousel;t.fn.carousel=e,t.fn.carousel.Constructor=i,t.fn.carousel.noConflict=function(){return t.fn.carousel=o,this};var n=function(i){var o,n=t(this),s=t(n.attr("data-target")||(o=n.attr("href"))&&o.replace(/.*(?=#[^\s]+$)/,""));if(s.hasClass("carousel")){var r=t.extend({},s.data(),n.data()),a=n.attr("data-slide-to");a&&(r.interval=!1),e.call(s,r),a&&s.data("bs.carousel").to(a),i.preventDefault()}};t(document).on("click.bs.carousel.data-api","[data-slide]",n).on("click.bs.carousel.data-api","[data-slide-to]",n),t(window).on("load",function(){t('[data-ride="carousel"]').each(function(){var i=t(this);e.call(i,i.data())})})}(jQuery),function(t){"use strict";function e(e){var i,o=e.attr("data-target")||(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,"");return t(o)}function i(e){return this.each(function(){var i=t(this),n=i.data("bs.collapse"),s=t.extend({},o.DEFAULTS,i.data(),"object"==typeof e&&e);!n&&s.toggle&&/show|hide/.test(e)&&(s.toggle=!1),n||i.data("bs.collapse",n=new o(this,s)),"string"==typeof e&&n[e]()})}var o=function(e,i){this.$element=t(e),this.options=t.extend({},o.DEFAULTS,i),this.$trigger=t('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};o.VERSION="3.3.7",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,n=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(n&&n.length&&(e=n.data("bs.collapse"))&&e.transitioning)){var s=t.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){n&&n.length&&(i.call(n,"hide"),e||n.data("bs.collapse",null));var r=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[r](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var a=function(){this.$element.removeClass("collapsing").addClass("collapse in")[r](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return a.call(this);var h=t.camelCase(["scroll",r].join("-"));this.$element.one("bsTransitionEnd",t.proxy(a,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[r](this.$element[0][h])}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=t.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};if(!t.support.transition)return n.call(this);this.$element[i](0).one("bsTransitionEnd",t.proxy(n,this)).emulateTransitionEnd(o.TRANSITION_DURATION)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return t(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(t.proxy(function(i,o){var n=t(o);this.addAriaAndCollapsedClass(e(n),n)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var n=t.fn.collapse;t.fn.collapse=i,t.fn.collapse.Constructor=o,t.fn.collapse.noConflict=function(){return t.fn.collapse=n,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(o){var n=t(this);n.attr("data-target")||o.preventDefault();var s=e(n),r=s.data("bs.collapse")?"toggle":n.data();i.call(s,r)})}(jQuery),function(t){"use strict";function e(e){var i=e.attr("data-target");i||(i=(i=e.attr("href"))&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var o=i&&t(i);return o&&o.length?o:e.parent()}function i(i){i&&3===i.which||(t(o).remove(),t(n).each(function(){var o=t(this),n=e(o),s={relatedTarget:this};n.hasClass("open")&&(i&&"click"==i.type&&/input|textarea/i.test(i.target.tagName)&&t.contains(n[0],i.target)||(n.trigger(i=t.Event("hide.bs.dropdown",s)),i.isDefaultPrevented()||(o.attr("aria-expanded","false"),n.removeClass("open").trigger(t.Event("hidden.bs.dropdown",s)))))}))}var o=".dropdown-backdrop",n='[data-toggle="dropdown"]',s=function(e){t(e).on("click.bs.dropdown",this.toggle)};s.VERSION="3.3.7",s.prototype.toggle=function(o){var n=t(this);if(!n.is(".disabled, :disabled")){var s=e(n),r=s.hasClass("open");if(i(),!r){"ontouchstart"in document.documentElement&&!s.closest(".navbar-nav").length&&t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click",i);var a={relatedTarget:this};if(s.trigger(o=t.Event("show.bs.dropdown",a)),o.isDefaultPrevented())return;n.trigger("focus").attr("aria-expanded","true"),s.toggleClass("open").trigger(t.Event("shown.bs.dropdown",a))}return!1}},s.prototype.keydown=function(i){if(/(38|40|27|32)/.test(i.which)&&!/input|textarea/i.test(i.target.tagName)){var o=t(this);if(i.preventDefault(),i.stopPropagation(),!o.is(".disabled, :disabled")){var s=e(o),r=s.hasClass("open");if(!r&&27!=i.which||r&&27==i.which)return 27==i.which&&s.find(n).trigger("focus"),o.trigger("click");var a=s.find(".dropdown-menu li:not(.disabled):visible a");if(a.length){var h=a.index(i.target);38==i.which&&h>0&&h--,40==i.which&&h<a.length-1&&h++,~h||(h=0),a.eq(h).trigger("focus")}}}};var r=t.fn.dropdown;t.fn.dropdown=function(e){return this.each(function(){var i=t(this),o=i.data("bs.dropdown");o||i.data("bs.dropdown",o=new s(this)),"string"==typeof e&&o[e].call(i)})},t.fn.dropdown.Constructor=s,t.fn.dropdown.noConflict=function(){return t.fn.dropdown=r,this},t(document).on("click.bs.dropdown.data-api",i).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",n,s.prototype.toggle).on("keydown.bs.dropdown.data-api",n,s.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",s.prototype.keydown)}(jQuery),function(t){"use strict";function e(e,o){return this.each(function(){var n=t(this),s=n.data("bs.modal"),r=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e);s||n.data("bs.modal",s=new i(this,r)),"string"==typeof e?s[e](o):r.show&&s.show(o)})}var i=function(e,i){this.options=i,this.$body=t(document.body),this.$element=t(e),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.7",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},i.prototype.show=function(e){var o=this,n=t.Event("show.bs.modal",{relatedTarget:e});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){o.$element.one("mouseup.dismiss.bs.modal",function(e){t(e.target).is(o.$element)&&(o.ignoreBackdropClick=!0)})}),this.backdrop(function(){var n=t.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.adjustDialog(),n&&o.$element[0].offsetWidth,o.$element.addClass("in"),o.enforceFocus();var s=t.Event("shown.bs.modal",{relatedTarget:e});n?o.$dialog.one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(s)}).emulateTransitionEnd(i.TRANSITION_DURATION):o.$element.trigger("focus").trigger(s)}))},i.prototype.hide=function(e){e&&e.preventDefault(),e=t.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){document===t.target||this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?t(window).on("resize.bs.modal",t.proxy(this.handleUpdate,this)):t(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(e){var o=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var s=t.support.transition&&n;if(this.$backdrop=t(document.createElement("div")).addClass("modal-backdrop "+n).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",t.proxy(function(t){this.ignoreBackdropClick?this.ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide())},this)),s&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!e)return;s?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):e()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var r=function(){o.removeBackdrop(),e&&e()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",r).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):r()}else e&&e()},i.prototype.handleUpdate=function(){this.adjustDialog()},i.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){var t=window.innerWidth;if(!t){var e=document.documentElement.getBoundingClientRect();t=e.right-Math.abs(e.left)}this.bodyIsOverflowing=document.body.clientWidth<t,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},i.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var o=t.fn.modal;t.fn.modal=e,t.fn.modal.Constructor=i,t.fn.modal.noConflict=function(){return t.fn.modal=o,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var o=t(this),n=o.attr("href"),s=t(o.attr("data-target")||n&&n.replace(/.*(?=#[^\s]+$)/,"")),r=s.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(n)&&n},s.data(),o.data());o.is("a")&&i.preventDefault(),s.one("show.bs.modal",function(t){t.isDefaultPrevented()||s.one("hidden.bs.modal",function(){o.is(":visible")&&o.trigger("focus")})}),e.call(s,r,this)})}(jQuery),function(t){"use strict";var e=function(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",t,e)};e.VERSION="3.3.7",e.TRANSITION_DURATION=150,e.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},e.prototype.init=function(e,i,o){if(this.enabled=!0,this.type=e,this.$element=t(i),this.options=this.getOptions(o),this.$viewport=this.options.viewport&&t(t.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var n=this.options.trigger.split(" "),s=n.length;s--;){var r=n[s];if("click"==r)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=r){var a="hover"==r?"mouseenter":"focusin",h="hover"==r?"mouseleave":"focusout";this.$element.on(a+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(h+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},e.prototype.getDefaults=function(){return e.DEFAULTS},e.prototype.getOptions=function(e){return(e=t.extend({},this.getDefaults(),this.$element.data(),e)).delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},e.prototype.getDelegateOptions=function(){var e={},i=this.getDefaults();return this._options&&t.each(this._options,function(t,o){i[t]!=o&&(e[t]=o)}),e},e.prototype.enter=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);if(i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusin"==e.type?"focus":"hover"]=!0),i.tip().hasClass("in")||"in"==i.hoverState)i.hoverState="in";else{if(clearTimeout(i.timeout),i.hoverState="in",!i.options.delay||!i.options.delay.show)return i.show();i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)}},e.prototype.isInStateTrue=function(){for(var t in this.inState)if(this.inState[t])return!0;return!1},e.prototype.leave=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);if(i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusout"==e.type?"focus":"hover"]=!1),!i.isInStateTrue()){if(clearTimeout(i.timeout),i.hoverState="out",!i.options.delay||!i.options.delay.hide)return i.hide();i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)}},e.prototype.show=function(){var i=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(i);var o=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(i.isDefaultPrevented()||!o)return;var n=this,s=this.tip(),r=this.getUID(this.type);this.setContent(),s.attr("id",r),this.$element.attr("aria-describedby",r),this.options.animation&&s.addClass("fade");var a="function"==typeof this.options.placement?this.options.placement.call(this,s[0],this.$element[0]):this.options.placement,h=/\s?auto?\s?/i,l=h.test(a);l&&(a=a.replace(h,"")||"top"),s.detach().css({top:0,left:0,display:"block"}).addClass(a).data("bs."+this.type,this),this.options.container?s.appendTo(this.options.container):s.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var u=this.getPosition(),d=s[0].offsetWidth,c=s[0].offsetHeight;if(l){var p=a,f=this.getPosition(this.$viewport);a="bottom"==a&&u.bottom+c>f.bottom?"top":"top"==a&&u.top-c<f.top?"bottom":"right"==a&&u.right+d>f.width?"left":"left"==a&&u.left-d<f.left?"right":a,s.removeClass(p).addClass(a)}var m=this.getCalculatedOffset(a,u,d,c);this.applyPlacement(m,a);var g=function(){var t=n.hoverState;n.$element.trigger("shown.bs."+n.type),n.hoverState=null,"out"==t&&n.leave(n)};t.support.transition&&this.$tip.hasClass("fade")?s.one("bsTransitionEnd",g).emulateTransitionEnd(e.TRANSITION_DURATION):g()}},e.prototype.applyPlacement=function(e,i){var o=this.tip(),n=o[0].offsetWidth,s=o[0].offsetHeight,r=parseInt(o.css("margin-top"),10),a=parseInt(o.css("margin-left"),10);isNaN(r)&&(r=0),isNaN(a)&&(a=0),e.top+=r,e.left+=a,t.offset.setOffset(o[0],t.extend({using:function(t){o.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),o.addClass("in");var h=o[0].offsetWidth,l=o[0].offsetHeight;"top"==i&&l!=s&&(e.top=e.top+s-l);var u=this.getViewportAdjustedDelta(i,e,h,l);u.left?e.left+=u.left:e.top+=u.top;var d=/top|bottom/.test(i),c=d?2*u.left-n+h:2*u.top-s+l,p=d?"offsetWidth":"offsetHeight";o.offset(e),this.replaceArrow(c,o[0][p],d)},e.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},e.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},e.prototype.hide=function(i){function o(){"in"!=n.hoverState&&s.detach(),n.$element&&n.$element.removeAttr("aria-describedby").trigger("hidden.bs."+n.type),i&&i()}var n=this,s=t(this.$tip),r=t.Event("hide.bs."+this.type);if(this.$element.trigger(r),!r.isDefaultPrevented())return s.removeClass("in"),t.support.transition&&s.hasClass("fade")?s.one("bsTransitionEnd",o).emulateTransitionEnd(e.TRANSITION_DURATION):o(),this.hoverState=null,this},e.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},e.prototype.hasContent=function(){return this.getTitle()},e.prototype.getPosition=function(e){var i=(e=e||this.$element)[0],o="BODY"==i.tagName,n=i.getBoundingClientRect();null==n.width&&(n=t.extend({},n,{width:n.right-n.left,height:n.bottom-n.top}));var s=window.SVGElement&&i instanceof window.SVGElement,r=o?{top:0,left:0}:s?null:e.offset(),a={scroll:o?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},h=o?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},n,a,h,r)},e.prototype.getCalculatedOffset=function(t,e,i,o){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-o,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-o/2,left:e.left-i}:{top:e.top+e.height/2-o/2,left:e.left+e.width}},e.prototype.getViewportAdjustedDelta=function(t,e,i,o){var n={top:0,left:0};if(!this.$viewport)return n;var s=this.options.viewport&&this.options.viewport.padding||0,r=this.getPosition(this.$viewport);if(/right|left/.test(t)){var a=e.top-s-r.scroll,h=e.top+s-r.scroll+o;a<r.top?n.top=r.top-a:h>r.top+r.height&&(n.top=r.top+r.height-h)}else{var l=e.left-s,u=e.left+s+i;l<r.left?n.left=r.left-l:u>r.right&&(n.left=r.left+r.width-u)}return n},e.prototype.getTitle=function(){var t=this.$element,e=this.options;return t.attr("data-original-title")||("function"==typeof e.title?e.title.call(t[0]):e.title)},e.prototype.getUID=function(t){do{t+=~~(1e6*Math.random())}while(document.getElementById(t));return t},e.prototype.tip=function(){if(!this.$tip&&(this.$tip=t(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},e.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},e.prototype.enable=function(){this.enabled=!0},e.prototype.disable=function(){this.enabled=!1},e.prototype.toggleEnabled=function(){this.enabled=!this.enabled},e.prototype.toggle=function(e){var i=this;e&&((i=t(e.currentTarget).data("bs."+this.type))||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i))),e?(i.inState.click=!i.inState.click,i.isInStateTrue()?i.enter(i):i.leave(i)):i.tip().hasClass("in")?i.leave(i):i.enter(i)},e.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type),t.$tip&&t.$tip.detach(),t.$tip=null,t.$arrow=null,t.$viewport=null,t.$element=null})};var i=t.fn.tooltip;t.fn.tooltip=function(i){return this.each(function(){var o=t(this),n=o.data("bs.tooltip"),s="object"==typeof i&&i;!n&&/destroy|hide/.test(i)||(n||o.data("bs.tooltip",n=new e(this,s)),"string"==typeof i&&n[i]())})},t.fn.tooltip.Constructor=e,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=i,this}}(jQuery),function(t){"use strict";var e=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");e.VERSION="3.3.7",e.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),e.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),e.prototype.constructor=e,e.prototype.getDefaults=function(){return e.DEFAULTS},e.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},e.prototype.hasContent=function(){return this.getTitle()||this.getContent()},e.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},e.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var i=t.fn.popover;t.fn.popover=function(i){return this.each(function(){var o=t(this),n=o.data("bs.popover"),s="object"==typeof i&&i;!n&&/destroy|hide/.test(i)||(n||o.data("bs.popover",n=new e(this,s)),"string"==typeof i&&n[i]())})},t.fn.popover.Constructor=e,t.fn.popover.noConflict=function(){return t.fn.popover=i,this}}(jQuery),function(t){"use strict";function e(i,o){this.$body=t(document.body),this.$scrollElement=t(t(i).is(document.body)?window:i),this.options=t.extend({},e.DEFAULTS,o),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",t.proxy(this.process,this)),this.refresh(),this.process()}function i(i){return this.each(function(){var o=t(this),n=o.data("bs.scrollspy"),s="object"==typeof i&&i;n||o.data("bs.scrollspy",n=new e(this,s)),"string"==typeof i&&n[i]()})}e.VERSION="3.3.7",e.DEFAULTS={offset:10},e.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},e.prototype.refresh=function(){var e=this,i="offset",o=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),t.isWindow(this.$scrollElement[0])||(i="position",o=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var e=t(this),n=e.data("target")||e.attr("href"),s=/^#./.test(n)&&t(n);return s&&s.length&&s.is(":visible")&&[[s[i]().top+o,n]]||null}).sort(function(t,e){return t[0]-e[0]}).each(function(){e.offsets.push(this[0]),e.targets.push(this[1])})},e.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),o=this.options.offset+i-this.$scrollElement.height(),n=this.offsets,s=this.targets,r=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),e>=o)return r!=(t=s[s.length-1])&&this.activate(t);if(r&&e<n[0])return this.activeTarget=null,this.clear();for(t=n.length;t--;)r!=s[t]&&e>=n[t]&&(void 0===n[t+1]||e<n[t+1])&&this.activate(s[t])},e.prototype.activate=function(e){this.activeTarget=e,this.clear();var i=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',o=t(i).parents("li").addClass("active");o.parent(".dropdown-menu").length&&(o=o.closest("li.dropdown").addClass("active")),o.trigger("activate.bs.scrollspy")},e.prototype.clear=function(){t(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var o=t.fn.scrollspy;t.fn.scrollspy=i,t.fn.scrollspy.Constructor=e,t.fn.scrollspy.noConflict=function(){return t.fn.scrollspy=o,this},t(window).on("load.bs.scrollspy.data-api",function(){t('[data-spy="scroll"]').each(function(){var e=t(this);i.call(e,e.data())})})}(jQuery),function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tab");n||o.data("bs.tab",n=new i(this)),"string"==typeof e&&n[e]()})}var i=function(e){this.element=t(e)};i.VERSION="3.3.7",i.TRANSITION_DURATION=150,i.prototype.show=function(){var e=this.element,i=e.closest("ul:not(.dropdown-menu)"),o=e.data("target");if(o||(o=(o=e.attr("href"))&&o.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var n=i.find(".active:last a"),s=t.Event("hide.bs.tab",{relatedTarget:e[0]}),r=t.Event("show.bs.tab",{relatedTarget:n[0]});if(n.trigger(s),e.trigger(r),!r.isDefaultPrevented()&&!s.isDefaultPrevented()){var a=t(o);this.activate(e.closest("li"),i),this.activate(a,a.parent(),function(){n.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:n[0]})})}}},i.prototype.activate=function(e,o,n){function s(){r.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),a?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),n&&n()}var r=o.find("> .active"),a=n&&t.support.transition&&(r.length&&r.hasClass("fade")||!!o.find("> .fade").length);r.length&&a?r.one("bsTransitionEnd",s).emulateTransitionEnd(i.TRANSITION_DURATION):s(),r.removeClass("in")};var o=t.fn.tab;t.fn.tab=e,t.fn.tab.Constructor=i,t.fn.tab.noConflict=function(){return t.fn.tab=o,this};var n=function(i){i.preventDefault(),e.call(t(this),"show")};t(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',n).on("click.bs.tab.data-api",'[data-toggle="pill"]',n)}(jQuery),function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.affix"),s="object"==typeof e&&e;n||o.data("bs.affix",n=new i(this,s)),"string"==typeof e&&n[e]()})}var i=function(e,o){this.options=t.extend({},i.DEFAULTS,o),this.$target=t(this.options.target).on("scroll.bs.affix.data-api",t.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=t(e),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.3.7",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getState=function(t,e,i,o){var n=this.$target.scrollTop(),s=this.$element.offset(),r=this.$target.height();if(null!=i&&"top"==this.affixed)return n<i&&"top";if("bottom"==this.affixed)return null!=i?!(n+this.unpin<=s.top)&&"bottom":!(n+r<=t-o)&&"bottom";var a=null==this.affixed,h=a?n:s.top,l=a?r:e;return null!=i&&n<=i?"top":null!=o&&h+l>=t-o&&"bottom"},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},i.prototype.checkPositionWithEventLoop=function(){setTimeout(t.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=this.$element.height(),o=this.options.offset,n=o.top,s=o.bottom,r=Math.max(t(document).height(),t(document.body).height());"object"!=typeof o&&(s=n=o),"function"==typeof n&&(n=o.top(this.$element)),"function"==typeof s&&(s=o.bottom(this.$element));var a=this.getState(r,e,n,s);if(this.affixed!=a){null!=this.unpin&&this.$element.css("top","");var h="affix"+(a?"-"+a:""),l=t.Event(h+".bs.affix");if(this.$element.trigger(l),l.isDefaultPrevented())return;this.affixed=a,this.unpin="bottom"==a?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(h).trigger(h.replace("affix","affixed")+".bs.affix")}"bottom"==a&&this.$element.offset({top:r-e-s})}};var o=t.fn.affix;t.fn.affix=e,t.fn.affix.Constructor=i,t.fn.affix.noConflict=function(){return t.fn.affix=o,this},t(window).on("load",function(){t('[data-spy="affix"]').each(function(){var i=t(this),o=i.data();o.offset=o.offset||{},null!=o.offsetBottom&&(o.offset.bottom=o.offsetBottom),null!=o.offsetTop&&(o.offset.top=o.offsetTop),e.call(i,o)})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzb3RvcGUucGtnZC5qcyIsImlzb3RvcGUucGtnZC5taW4uanMiLCJib290c3RyYXAuanMiXSwibmFtZXMiOlsid2luZG93IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsImpRdWVyeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwialF1ZXJ5QnJpZGdldCIsIm5hbWVzcGFjZSIsIlBsdWdpbkNsYXNzIiwiJCIsIm1ldGhvZENhbGwiLCIkZWxlbXMiLCJtZXRob2ROYW1lIiwiYXJncyIsInJldHVyblZhbHVlIiwicGx1Z2luTWV0aG9kU3RyIiwiZWFjaCIsImkiLCJlbGVtIiwiaW5zdGFuY2UiLCJkYXRhIiwibWV0aG9kIiwiY2hhckF0IiwidmFsdWUiLCJhcHBseSIsInVuZGVmaW5lZCIsImxvZ0Vycm9yIiwicGxhaW5DYWxsIiwib3B0aW9ucyIsIm9wdGlvbiIsIl9pbml0IiwicHJvdG90eXBlIiwib3B0cyIsImlzUGxhaW5PYmplY3QiLCJ0aGlzIiwiZXh0ZW5kIiwiZm4iLCJhcmcwIiwiYXJyYXlTbGljZSIsImNhbGwiLCJhcmd1bWVudHMiLCJ1cGRhdGVKUXVlcnkiLCJicmlkZ2V0IiwiQXJyYXkiLCJzbGljZSIsImNvbnNvbGUiLCJtZXNzYWdlIiwiZXJyb3IiLCJnbG9iYWwiLCJFdkVtaXR0ZXIiLCJwcm90byIsIm9uIiwiZXZlbnROYW1lIiwibGlzdGVuZXIiLCJldmVudHMiLCJfZXZlbnRzIiwibGlzdGVuZXJzIiwiaW5kZXhPZiIsInB1c2giLCJvbmNlIiwib25jZUV2ZW50cyIsIl9vbmNlRXZlbnRzIiwib2ZmIiwibGVuZ3RoIiwiaW5kZXgiLCJzcGxpY2UiLCJlbWl0RXZlbnQiLCJvbmNlTGlzdGVuZXJzIiwiaXNPbmNlIiwiZ2V0U2l6ZSIsImdldFN0eWxlU2l6ZSIsIm51bSIsInBhcnNlRmxvYXQiLCJpc05hTiIsImdldFplcm9TaXplIiwic2l6ZSIsIndpZHRoIiwiaGVpZ2h0IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0Iiwib3V0ZXJXaWR0aCIsIm91dGVySGVpZ2h0IiwibWVhc3VyZW1lbnRzTGVuZ3RoIiwibWVhc3VyZW1lbnRzIiwiZ2V0U3R5bGUiLCJzdHlsZSIsImdldENvbXB1dGVkU3R5bGUiLCJzZXR1cCIsImlzU2V0dXAiLCJkaXYiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJwYWRkaW5nIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJXaWR0aCIsImJveFNpemluZyIsImJvZHkiLCJkb2N1bWVudEVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsImlzQm94U2l6ZU91dGVyIiwicmVtb3ZlQ2hpbGQiLCJxdWVyeVNlbGVjdG9yIiwibm9kZVR5cGUiLCJkaXNwbGF5Iiwib2Zmc2V0V2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJpc0JvcmRlckJveCIsIm1lYXN1cmVtZW50IiwicGFkZGluZ1dpZHRoIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nSGVpZ2h0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJtYXJnaW5XaWR0aCIsIm1hcmdpbkxlZnQiLCJtYXJnaW5SaWdodCIsIm1hcmdpbkhlaWdodCIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsImJvcmRlckxlZnRXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJib3JkZXJIZWlnaHQiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckJvdHRvbVdpZHRoIiwiaXNCb3JkZXJCb3hTaXplT3V0ZXIiLCJzdHlsZVdpZHRoIiwic3R5bGVIZWlnaHQiLCJtYXRjaGVzU2VsZWN0b3IiLCJtYXRjaGVzTWV0aG9kIiwiRWxlbVByb3RvIiwiRWxlbWVudCIsIm1hdGNoZXMiLCJwcmVmaXhlcyIsInNlbGVjdG9yIiwiZml6enlVSVV0aWxzIiwidXRpbHMiLCJhIiwiYiIsInByb3AiLCJtb2R1bG8iLCJtYWtlQXJyYXkiLCJvYmoiLCJhcnkiLCJpc0FycmF5IiwicmVtb3ZlRnJvbSIsImdldFBhcmVudCIsInBhcmVudE5vZGUiLCJnZXRRdWVyeUVsZW1lbnQiLCJoYW5kbGVFdmVudCIsImV2ZW50IiwidHlwZSIsImZpbHRlckZpbmRFbGVtZW50cyIsImVsZW1zIiwiZmZFbGVtcyIsImZvckVhY2giLCJIVE1MRWxlbWVudCIsImNoaWxkRWxlbXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVib3VuY2VNZXRob2QiLCJfY2xhc3MiLCJ0aHJlc2hvbGQiLCJ0aW1lb3V0TmFtZSIsInRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJfdGhpcyIsInNldFRpbWVvdXQiLCJkb2NSZWFkeSIsImNhbGxiYWNrIiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0b0Rhc2hlZCIsInN0ciIsInJlcGxhY2UiLCJtYXRjaCIsIiQxIiwiJDIiLCJ0b0xvd2VyQ2FzZSIsImh0bWxJbml0IiwiV2lkZ2V0Q2xhc3MiLCJkYXNoZWROYW1lc3BhY2UiLCJkYXRhQXR0ciIsImRhdGFBdHRyRWxlbXMiLCJqc0Rhc2hFbGVtcyIsImNvbmNhdCIsImRhdGFPcHRpb25zQXR0ciIsImF0dHIiLCJnZXRBdHRyaWJ1dGUiLCJKU09OIiwicGFyc2UiLCJjbGFzc05hbWUiLCJPdXRsYXllciIsIkl0ZW0iLCJpc0VtcHR5T2JqIiwiZWxlbWVudCIsImxheW91dCIsInBvc2l0aW9uIiwieCIsInkiLCJfY3JlYXRlIiwiZG9jRWxlbVN0eWxlIiwidHJhbnNpdGlvblByb3BlcnR5IiwidHJhbnNpdGlvbiIsInRyYW5zZm9ybVByb3BlcnR5IiwidHJhbnNmb3JtIiwidHJhbnNpdGlvbkVuZEV2ZW50IiwiV2Via2l0VHJhbnNpdGlvbiIsInZlbmRvclByb3BlcnRpZXMiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJ0cmFuc2l0aW9uRGVsYXkiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsIl90cmFuc24iLCJpbmdQcm9wZXJ0aWVzIiwiY2xlYW4iLCJvbkVuZCIsImNzcyIsImVsZW1TdHlsZSIsImdldFBvc2l0aW9uIiwiaXNPcmlnaW5MZWZ0IiwiX2dldE9wdGlvbiIsImlzT3JpZ2luVG9wIiwieFZhbHVlIiwieVZhbHVlIiwibGF5b3V0U2l6ZSIsInBhcnNlSW50IiwibGF5b3V0UG9zaXRpb24iLCJ4UGFkZGluZyIsInhQcm9wZXJ0eSIsInhSZXNldFByb3BlcnR5IiwiZ2V0WFZhbHVlIiwieVBhZGRpbmciLCJ5UHJvcGVydHkiLCJ5UmVzZXRQcm9wZXJ0eSIsImdldFlWYWx1ZSIsImlzSG9yaXpvbnRhbCIsInBlcmNlbnRQb3NpdGlvbiIsIl90cmFuc2l0aW9uVG8iLCJjdXJYIiwiY3VyWSIsImNvbXBhcmVYIiwiY29tcGFyZVkiLCJkaWROb3RNb3ZlIiwic2V0UG9zaXRpb24iLCJpc1RyYW5zaXRpb25pbmciLCJ0cmFuc1giLCJ0cmFuc1kiLCJ0cmFuc2l0aW9uU3R5bGUiLCJnZXRUcmFuc2xhdGUiLCJ0byIsIm9uVHJhbnNpdGlvbkVuZCIsImlzQ2xlYW5pbmciLCJnb1RvIiwibW92ZVRvIiwiX25vblRyYW5zaXRpb24iLCJfcmVtb3ZlU3R5bGVzIiwiX3RyYW5zaXRpb24iLCJmcm9tIiwiZW5hYmxlVHJhbnNpdGlvbiIsInRyYW5zaXRpb25Qcm9wcyIsImR1cmF0aW9uIiwic3RhZ2dlckRlbGF5Iiwib253ZWJraXRUcmFuc2l0aW9uRW5kIiwib250cmFuc2l0aW9uZW5kIiwib25vdHJhbnNpdGlvbmVuZCIsImRhc2hlZFZlbmRvclByb3BlcnRpZXMiLCItd2Via2l0LXRyYW5zZm9ybSIsInRhcmdldCIsInByb3BlcnR5TmFtZSIsImRpc2FibGVUcmFuc2l0aW9uIiwicmVtb3ZlVHJhbnNpdGlvblN0eWxlcyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjbGVhblN0eWxlIiwiY2xlYW5UcmFuc2l0aW9uU3R5bGUiLCJzdGFnZ2VyIiwiZGVsYXkiLCJyZW1vdmVFbGVtIiwicmVtb3ZlIiwiaGlkZSIsInJldmVhbCIsImlzSGlkZGVuIiwiZ2V0SGlkZVJldmVhbFRyYW5zaXRpb25FbmRQcm9wZXJ0eSIsIm9uUmV2ZWFsVHJhbnNpdGlvbkVuZCIsImhpZGRlblN0eWxlIiwidmlzaWJsZVN0eWxlIiwic3R5bGVQcm9wZXJ0eSIsIm9wdGlvblN0eWxlIiwib3BhY2l0eSIsIm9uSGlkZVRyYW5zaXRpb25FbmQiLCJkZXN0cm95IiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIiwicXVlcnlFbGVtZW50IiwiJGVsZW1lbnQiLCJkZWZhdWx0cyIsImlkIiwiR1VJRCIsIm91dGxheWVyR1VJRCIsImluc3RhbmNlcyIsInN1YmNsYXNzIiwiUGFyZW50IiwiU3ViQ2xhc3MiLCJnZXRNaWxsaXNlY29uZHMiLCJ0aW1lIiwidW5pdCIsIm1zVW5pdHMiLCJub29wIiwiY29udGFpbmVyU3R5bGUiLCJpbml0TGF5b3V0Iiwib3JpZ2luTGVmdCIsIm9yaWdpblRvcCIsInJlc2l6ZSIsInJlc2l6ZUNvbnRhaW5lciIsIm9sZE9wdGlvbiIsImNvbXBhdE9wdGlvbnMiLCJob3Jpem9udGFsIiwibGF5b3V0SW5zdGFudCIsInJlbG9hZEl0ZW1zIiwic3RhbXBzIiwic3RhbXAiLCJiaW5kUmVzaXplIiwiaXRlbXMiLCJfaXRlbWl6ZSIsImNoaWxkcmVuIiwiaXRlbUVsZW1zIiwiX2ZpbHRlckZpbmRJdGVtRWxlbWVudHMiLCJpdGVtIiwiaXRlbVNlbGVjdG9yIiwiZ2V0SXRlbUVsZW1lbnRzIiwibWFwIiwiX3Jlc2V0TGF5b3V0IiwiX21hbmFnZVN0YW1wcyIsImlzSW5zdGFudCIsIl9pc0xheW91dEluaXRlZCIsImxheW91dEl0ZW1zIiwiX2dldE1lYXN1cmVtZW50IiwiX2dldEl0ZW1zRm9yTGF5b3V0IiwiX2xheW91dEl0ZW1zIiwiX3Bvc3RMYXlvdXQiLCJmaWx0ZXIiLCJpc0lnbm9yZWQiLCJfZW1pdENvbXBsZXRlT25JdGVtcyIsInF1ZXVlIiwiX2dldEl0ZW1MYXlvdXRQb3NpdGlvbiIsImlzTGF5b3V0SW5zdGFudCIsIl9wcm9jZXNzTGF5b3V0UXVldWUiLCJ1cGRhdGVTdGFnZ2VyIiwiX3Bvc2l0aW9uSXRlbSIsIl9nZXRDb250YWluZXJTaXplIiwiX3NldENvbnRhaW5lck1lYXN1cmUiLCJtZWFzdXJlIiwiaXNXaWR0aCIsImVsZW1TaXplIiwiTWF0aCIsIm1heCIsIm9uQ29tcGxldGUiLCJkaXNwYXRjaEV2ZW50IiwidGljayIsImRvbmVDb3VudCIsImNvdW50IiwiZW1pdEFyZ3MiLCIkZXZlbnQiLCJFdmVudCIsInRyaWdnZXIiLCJpZ25vcmUiLCJnZXRJdGVtIiwidW5pZ25vcmUiLCJfZmluZCIsInVuc3RhbXAiLCJfZ2V0Qm91bmRpbmdSZWN0IiwiX21hbmFnZVN0YW1wIiwiYm91bmRpbmdSZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiX2JvdW5kaW5nUmVjdCIsIl9nZXRFbGVtZW50T2Zmc2V0IiwidGhpc1JlY3QiLCJpc1Jlc2l6ZUJvdW5kIiwidW5iaW5kUmVzaXplIiwib25yZXNpemUiLCJuZWVkc1Jlc2l6ZUxheW91dCIsImFkZEl0ZW1zIiwiYXBwZW5kZWQiLCJwcmVwZW5kZWQiLCJwcmV2aW91c0l0ZW1zIiwicmV2ZWFsSXRlbUVsZW1lbnRzIiwiZ2V0SXRlbXMiLCJoaWRlSXRlbUVsZW1lbnRzIiwicmVtb3ZlSXRlbXMiLCJyZW1vdmVEYXRhIiwiTGF5b3V0IiwibXMiLCJzIiwiSXNvdG9wZSIsIml0ZW1HVUlEIiwic29ydERhdGEiLCJ1cGRhdGVTb3J0RGF0YSIsInJhbmRvbSIsImdldFNvcnREYXRhIiwic29ydGVycyIsIl9zb3J0ZXJzIiwia2V5Iiwic29ydGVyIiwiX2Rlc3Ryb3kiLCJMYXlvdXRNb2RlIiwiaXNvdG9wZSIsImZpbHRlcmVkSXRlbXMiLCJuZWVkc1ZlcnRpY2FsUmVzaXplTGF5b3V0IiwiZ2V0Q29sdW1uV2lkdGgiLCJnZXRTZWdtZW50U2l6ZSIsImdldFJvd0hlaWdodCIsInNlZ21lbnQiLCJzZWdtZW50TmFtZSIsIm91dGVyU2l6ZSIsImZpcnN0SXRlbVNpemUiLCJnZXRGaXJzdEl0ZW1TaXplIiwiZmlyc3RJdGVtIiwibW9kZXMiLCJNb2RlIiwiTWFzb25yeSIsImZpdFdpZHRoIiwibWVhc3VyZUNvbHVtbnMiLCJjb2xZcyIsImNvbHMiLCJtYXhZIiwiaG9yaXpvbnRhbENvbEluZGV4IiwiZ2V0Q29udGFpbmVyV2lkdGgiLCJjb2x1bW5XaWR0aCIsImZpcnN0SXRlbUVsZW0iLCJjb250YWluZXJXaWR0aCIsImd1dHRlciIsImV4Y2VzcyIsIm1hdGhNZXRob2QiLCJjb250YWluZXIiLCJyZW1haW5kZXIiLCJjb2xTcGFuIiwibWluIiwiY29sUG9zaXRpb24iLCJob3Jpem9udGFsT3JkZXIiLCJjb2wiLCJzZXRIZWlnaHQiLCJzZXRNYXgiLCJfZ2V0VG9wQ29sUG9zaXRpb24iLCJjb2xHcm91cCIsIl9nZXRUb3BDb2xHcm91cCIsIm1pbmltdW1ZIiwiZ3JvdXBDb3VudCIsIl9nZXRDb2xHcm91cFkiLCJncm91cENvbFlzIiwiX2dldEhvcml6b250YWxDb2xQb3NpdGlvbiIsImhhc1NpemUiLCJzdGFtcFNpemUiLCJvZmZzZXQiLCJmaXJzdFgiLCJsYXN0WCIsImZpcnN0Q29sIiwiZmxvb3IiLCJsYXN0Q29sIiwic3RhbXBNYXhZIiwiX2dldENvbnRhaW5lckZpdFdpZHRoIiwidW51c2VkQ29scyIsInByZXZpb3VzV2lkdGgiLCJNYXNvbnJ5TW9kZSIsImtlZXBNb2RlTWV0aG9kcyIsImlzRml0V2lkdGgiLCJGaXRSb3dzIiwiaXRlbVdpZHRoIiwiVmVydGljYWwiLCJob3Jpem9udGFsQWxpZ25tZW50IiwiZ2V0SXRlbVNvcnRlciIsInNvcnRCeXMiLCJzb3J0QXNjIiwiaXRlbUEiLCJpdGVtQiIsInNvcnRCeSIsImRpcmVjdGlvbiIsInRyaW0iLCJTdHJpbmciLCJsYXlvdXRNb2RlIiwiaXNKUXVlcnlGaWx0ZXJpbmciLCJzb3J0QXNjZW5kaW5nIiwiX2dldFNvcnRlcnMiLCJzb3J0SGlzdG9yeSIsIm5hbWUiLCJfaW5pdExheW91dE1vZGUiLCJfdXBkYXRlSXRlbXNTb3J0RGF0YSIsImluaXRpYWxPcHRzIiwiX2xheW91dCIsImFycmFuZ2UiLCJfZ2V0SXNJbnN0YW50IiwiZmlsdGVyZWQiLCJfZmlsdGVyIiwiX2JpbmRBcnJhbmdlQ29tcGxldGUiLCJfaXNJbnN0YW50IiwiX25vVHJhbnNpdGlvbiIsIl9oaWRlUmV2ZWFsIiwiX3NvcnQiLCJuZWVkUmV2ZWFsIiwibmVlZEhpZGUiLCJhcnJhbmdlUGFyYWxsZWxDYWxsYmFjayIsImlzTGF5b3V0Q29tcGxldGUiLCJpc0hpZGVDb21wbGV0ZSIsImlzUmV2ZWFsQ29tcGxldGUiLCJoaWRkZW5NYXRjaGVkIiwidmlzaWJsZVVubWF0Y2hlZCIsInRlc3QiLCJfZ2V0RmlsdGVyVGVzdCIsImlzTWF0Y2hlZCIsImlzIiwibXVuZ2VTb3J0ZXIiLCJsZW4iLCJnZXRWYWx1ZUdldHRlciIsInF1ZXJ5IiwiY2hpbGQiLCJ0ZXh0Q29udGVudCIsInNwbGl0IiwiYXR0ck1hdGNoIiwiZ2V0VmFsdWUiLCJwYXJzZXIiLCJzb3J0RGF0YVBhcnNlcnMiLCJ2YWwiLCJfZ2V0SXNTYW1lU29ydEJ5IiwiaXRlbVNvcnRlciIsInNvcnQiLCJfbW9kZSIsIm1vZGUiLCJFcnJvciIsIl9maWx0ZXJSZXZlYWxBZGRlZCIsImluc2VydCIsImZpbHRlcmVkSW5zZXJ0SXRlbXMiLCJfcmVtb3ZlIiwic2h1ZmZsZSIsImdldEZpbHRlcmVkSXRlbUVsZW1lbnRzIiwidCIsImUiLCJ1IiwibyIsIm4iLCJoIiwiZCIsImwiLCJyIiwiZiIsImMiLCJtIiwicCIsImciLCJ2IiwiXyIsIkkiLCJ6IiwiUyIsIiRncmlkIiwibm9Db25mbGljdCIsInJlYWR5IiwibWFzb25yeSIsImN1cnJlbnRXaWR0aCIsInZlcnNpb24iLCJqcXVlcnkiLCJ0cmFuc2l0aW9uRW5kIiwiZWwiLCJ0cmFuc0VuZEV2ZW50TmFtZXMiLCJNb3pUcmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJlbmQiLCJlbXVsYXRlVHJhbnNpdGlvbkVuZCIsImNhbGxlZCIsIiRlbCIsIm9uZSIsInN1cHBvcnQiLCJzcGVjaWFsIiwiYnNUcmFuc2l0aW9uRW5kIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZVR5cGUiLCJoYW5kbGUiLCJoYW5kbGVPYmoiLCJoYW5kbGVyIiwiZGlzbWlzcyIsIkFsZXJ0IiwiY2xvc2UiLCJWRVJTSU9OIiwiVFJBTlNJVElPTl9EVVJBVElPTiIsInJlbW92ZUVsZW1lbnQiLCIkcGFyZW50IiwiZGV0YWNoIiwiJHRoaXMiLCJwcmV2ZW50RGVmYXVsdCIsImNsb3Nlc3QiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZW1vdmVDbGFzcyIsImhhc0NsYXNzIiwib2xkIiwiYWxlcnQiLCJDb25zdHJ1Y3RvciIsIlBsdWdpbiIsIkJ1dHRvbiIsInRvZ2dsZSIsInNldFN0YXRlIiwiREVGQVVMVFMiLCJpc0xvYWRpbmciLCJsb2FkaW5nVGV4dCIsInN0YXRlIiwicmVzZXRUZXh0IiwicHJveHkiLCJhZGRDbGFzcyIsInJlbW92ZUF0dHIiLCJjaGFuZ2VkIiwiJGlucHV0IiwiZmluZCIsInRvZ2dsZUNsYXNzIiwiYnV0dG9uIiwiJGJ0biIsImZpcnN0IiwiQ2Fyb3VzZWwiLCJhY3Rpb24iLCJzbGlkZSIsImludGVydmFsIiwicGF1c2UiLCJjeWNsZSIsIiRpbmRpY2F0b3JzIiwicGF1c2VkIiwic2xpZGluZyIsIiRhY3RpdmUiLCIkaXRlbXMiLCJrZXlib2FyZCIsImtleWRvd24iLCJ3cmFwIiwidGFnTmFtZSIsIndoaWNoIiwicHJldiIsIm5leHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJnZXRJdGVtSW5kZXgiLCJwYXJlbnQiLCJnZXRJdGVtRm9yRGlyZWN0aW9uIiwiYWN0aXZlIiwiYWN0aXZlSW5kZXgiLCJpdGVtSW5kZXgiLCJlcSIsInBvcyIsInRoYXQiLCIkbmV4dCIsImlzQ3ljbGluZyIsInJlbGF0ZWRUYXJnZXQiLCJzbGlkZUV2ZW50IiwiJG5leHRJbmRpY2F0b3IiLCJzbGlkRXZlbnQiLCJqb2luIiwiY2Fyb3VzZWwiLCJjbGlja0hhbmRsZXIiLCJocmVmIiwiJHRhcmdldCIsInNsaWRlSW5kZXgiLCIkY2Fyb3VzZWwiLCJnZXRUYXJnZXRGcm9tVHJpZ2dlciIsIiR0cmlnZ2VyIiwiQ29sbGFwc2UiLCJ0cmFuc2l0aW9uaW5nIiwiYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzIiwiZGltZW5zaW9uIiwic2hvdyIsImFjdGl2ZXNEYXRhIiwiYWN0aXZlcyIsInN0YXJ0RXZlbnQiLCJjb21wbGV0ZSIsInNjcm9sbFNpemUiLCJjYW1lbENhc2UiLCJpc09wZW4iLCJjb2xsYXBzZSIsImNsZWFyTWVudXMiLCJiYWNrZHJvcCIsImNvbnRhaW5zIiwiRHJvcGRvd24iLCJpc0FjdGl2ZSIsImluc2VydEFmdGVyIiwic3RvcFByb3BhZ2F0aW9uIiwiZHJvcGRvd24iLCJfcmVsYXRlZFRhcmdldCIsIk1vZGFsIiwiJGJvZHkiLCIkZGlhbG9nIiwiJGJhY2tkcm9wIiwiaXNTaG93biIsIm9yaWdpbmFsQm9keVBhZCIsInNjcm9sbGJhcldpZHRoIiwiaWdub3JlQmFja2Ryb3BDbGljayIsInJlbW90ZSIsImxvYWQiLCJCQUNLRFJPUF9UUkFOU0lUSU9OX0RVUkFUSU9OIiwiY2hlY2tTY3JvbGxiYXIiLCJzZXRTY3JvbGxiYXIiLCJlc2NhcGUiLCJhcHBlbmRUbyIsInNjcm9sbFRvcCIsImFkanVzdERpYWxvZyIsImVuZm9yY2VGb2N1cyIsImhpZGVNb2RhbCIsImhhcyIsImhhbmRsZVVwZGF0ZSIsInJlc2V0QWRqdXN0bWVudHMiLCJyZXNldFNjcm9sbGJhciIsInJlbW92ZUJhY2tkcm9wIiwiYW5pbWF0ZSIsImRvQW5pbWF0ZSIsImN1cnJlbnRUYXJnZXQiLCJmb2N1cyIsImNhbGxiYWNrUmVtb3ZlIiwibW9kYWxJc092ZXJmbG93aW5nIiwic2Nyb2xsSGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiYm9keUlzT3ZlcmZsb3dpbmciLCJmdWxsV2luZG93V2lkdGgiLCJkb2N1bWVudEVsZW1lbnRSZWN0IiwiYWJzIiwiY2xpZW50V2lkdGgiLCJtZWFzdXJlU2Nyb2xsYmFyIiwiYm9keVBhZCIsInNjcm9sbERpdiIsImFwcGVuZCIsIm1vZGFsIiwic2hvd0V2ZW50IiwiVG9vbHRpcCIsImVuYWJsZWQiLCJob3ZlclN0YXRlIiwiaW5TdGF0ZSIsImluaXQiLCJhbmltYXRpb24iLCJwbGFjZW1lbnQiLCJ0ZW1wbGF0ZSIsInRpdGxlIiwiaHRtbCIsInZpZXdwb3J0IiwiZ2V0T3B0aW9ucyIsIiR2aWV3cG9ydCIsImlzRnVuY3Rpb24iLCJjbGljayIsImhvdmVyIiwidHJpZ2dlcnMiLCJldmVudEluIiwiZXZlbnRPdXQiLCJlbnRlciIsImxlYXZlIiwiX29wdGlvbnMiLCJmaXhUaXRsZSIsImdldERlZmF1bHRzIiwiZ2V0RGVsZWdhdGVPcHRpb25zIiwic2VsZiIsInRpcCIsImlzSW5TdGF0ZVRydWUiLCJoYXNDb250ZW50IiwiaW5Eb20iLCJvd25lckRvY3VtZW50IiwiJHRpcCIsInRpcElkIiwiZ2V0VUlEIiwic2V0Q29udGVudCIsImF1dG9Ub2tlbiIsImF1dG9QbGFjZSIsImFjdHVhbFdpZHRoIiwiYWN0dWFsSGVpZ2h0Iiwib3JnUGxhY2VtZW50Iiwidmlld3BvcnREaW0iLCJjYWxjdWxhdGVkT2Zmc2V0IiwiZ2V0Q2FsY3VsYXRlZE9mZnNldCIsImFwcGx5UGxhY2VtZW50IiwicHJldkhvdmVyU3RhdGUiLCJzZXRPZmZzZXQiLCJ1c2luZyIsInByb3BzIiwicm91bmQiLCJkZWx0YSIsImdldFZpZXdwb3J0QWRqdXN0ZWREZWx0YSIsImlzVmVydGljYWwiLCJhcnJvd0RlbHRhIiwiYXJyb3dPZmZzZXRQb3NpdGlvbiIsInJlcGxhY2VBcnJvdyIsImFycm93IiwiZ2V0VGl0bGUiLCIkZSIsImlzQm9keSIsImVsUmVjdCIsImlzU3ZnIiwiU1ZHRWxlbWVudCIsImVsT2Zmc2V0Iiwic2Nyb2xsIiwib3V0ZXJEaW1zIiwidmlld3BvcnRQYWRkaW5nIiwidmlld3BvcnREaW1lbnNpb25zIiwidG9wRWRnZU9mZnNldCIsImJvdHRvbUVkZ2VPZmZzZXQiLCJsZWZ0RWRnZU9mZnNldCIsInJpZ2h0RWRnZU9mZnNldCIsInByZWZpeCIsImdldEVsZW1lbnRCeUlkIiwiJGFycm93IiwiZW5hYmxlIiwiZGlzYWJsZSIsInRvZ2dsZUVuYWJsZWQiLCJ0b29sdGlwIiwiUG9wb3ZlciIsImNvbnRlbnQiLCJnZXRDb250ZW50IiwicG9wb3ZlciIsIlNjcm9sbFNweSIsIiRzY3JvbGxFbGVtZW50Iiwib2Zmc2V0cyIsInRhcmdldHMiLCJhY3RpdmVUYXJnZXQiLCJwcm9jZXNzIiwicmVmcmVzaCIsImdldFNjcm9sbEhlaWdodCIsIm9mZnNldE1ldGhvZCIsIm9mZnNldEJhc2UiLCJpc1dpbmRvdyIsIiRocmVmIiwibWF4U2Nyb2xsIiwiYWN0aXZhdGUiLCJjbGVhciIsInBhcmVudHMiLCJwYXJlbnRzVW50aWwiLCJzY3JvbGxzcHkiLCIkc3B5IiwiVGFiIiwiJHVsIiwiJHByZXZpb3VzIiwiaGlkZUV2ZW50IiwidGFiIiwiQWZmaXgiLCJjaGVja1Bvc2l0aW9uIiwiY2hlY2tQb3NpdGlvbldpdGhFdmVudExvb3AiLCJhZmZpeGVkIiwidW5waW4iLCJwaW5uZWRPZmZzZXQiLCJSRVNFVCIsImdldFN0YXRlIiwib2Zmc2V0VG9wIiwib2Zmc2V0Qm90dG9tIiwidGFyZ2V0SGVpZ2h0IiwiaW5pdGlhbGl6aW5nIiwiY29sbGlkZXJUb3AiLCJjb2xsaWRlckhlaWdodCIsImdldFBpbm5lZE9mZnNldCIsImFmZml4IiwiYWZmaXhUeXBlIl0sIm1hcHBpbmdzIjoiQ0FrQkEsU0FBQUEsRUFBQUMsR0FHQSxtQkFBQUMsUUFBQUEsT0FBQUMsSUFFQUQsT0FBQSxpQ0FBQSxVQUFBLFNBQUFFLEdBQ0EsT0FBQUgsRUFBQUQsRUFBQUksS0FFQSxpQkFBQUMsUUFBQUEsT0FBQUMsUUFFQUQsT0FBQUMsUUFBQUwsRUFDQUQsRUFDQU8sUUFBQSxXQUlBUCxFQUFBUSxjQUFBUCxFQUNBRCxFQUNBQSxFQUFBSSxTQUlBSixPQUFBLFNBQUFBLEVBQUFJLEdBQ0EsYUFnQkEsU0FBQUksRUFBQUMsRUFBQUMsRUFBQUMsR0FnQ0EsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FDQSxJQUFBQyxFQUNBQyxFQUFBLE9BQUFSLEVBQUEsS0FBQUssRUFBQSxLQXVCQSxPQXJCQUQsRUFBQUssS0FBQSxTQUFBQyxF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R0FFQUEsRUFBQXNELHFCQUFBLE9BRUE1aUIsS0FBQSt4QixRQUFBWSxFQUNBM3lCLEtBQUFneUIsTUFBQSxVQUFBVyxFQUFBM3lCLEtBQUEweUIsa0JBQUEsS0FFQTF5QixLQUFBc1EsU0FDQXVTLFlBQUErTyxFQUFBTSxPQUNBdE8sU0FBQWdQLEdBQ0FoZSxRQUFBZ2UsRUFBQWpxQixRQUFBLFFBQUEsV0FBQSxhQUdBLFVBQUFncUIsR0FDQTN5QixLQUFBc1EsU0FBQThKLFFBQ0FqSyxJQUFBa2EsRUFBQTFuQixFQUFBMHZCLE1Bb0JBLElBQUF0UCxFQUFBeGtCLEVBQUEyQixHQUFBeXlCLE1BRUFwMEIsRUFBQTJCLEdBQUF5eUIsTUFBQXpQLEVBQ0Eza0IsRUFBQTJCLEdBQUF5eUIsTUFBQTFQLFlBQUEyTyxFQU1BcnpCLEVBQUEyQixHQUFBeXlCLE1BQUFsUyxXQUFBLFdBRUEsT0FEQWxpQixFQUFBMkIsR0FBQXl5QixNQUFBNVAsRUFDQS9pQixNQU9BekIsRUFBQVgsUUFBQXFELEdBQUEsT0FBQSxXQUNBMUMsRUFBQSxzQkFBQU8sS0FBQSxXQUNBLElBQUF3eUIsRUFBQS95QixFQUFBeUIsTUFDQWQsRUFBQW95QixFQUFBcHlCLE9BRUFBLEVBQUFrYixPQUFBbGIsRUFBQWtiLFdBRUEsTUFBQWxiLEVBQUFtekIsZUFBQW56QixFQUFBa2IsT0FBQWhLLE9BQUFsUixFQUFBbXpCLGNBQ0EsTUFBQW56QixFQUFBa3pCLFlBQUFsekIsRUFBQWtiLE9BQUFqSyxJQUFBalIsRUFBQWt6QixXQUVBbFAsRUFBQTdpQixLQUFBaXhCLEVBQUFweUIsUUFJQWxCIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBJc290b3BlIFBBQ0tBR0VEIHYzLjAuNFxuICpcbiAqIExpY2Vuc2VkIEdQTHYzIGZvciBvcGVuIHNvdXJjZSB1c2VcbiAqIG9yIElzb3RvcGUgQ29tbWVyY2lhbCBMaWNlbnNlIGZvciBjb21tZXJjaWFsIHVzZVxuICpcbiAqIGh0dHA6Ly9pc290b3BlLm1ldGFmaXp6eS5jb1xuICogQ29weXJpZ2h0IDIwMTcgTWV0YWZpenp5XG4gKi9cblxuLyoqXG4gKiBCcmlkZ2V0IG1ha2VzIGpRdWVyeSB3aWRnZXRzXG4gKiB2Mi4wLjFcbiAqIE1JVCBsaWNlbnNlXG4gKi9cblxuLyoganNoaW50IGJyb3dzZXI6IHRydWUsIHN0cmljdDogdHJ1ZSwgdW5kZWY6IHRydWUsIHVudXNlZDogdHJ1ZSAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKmpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qIGdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdqcXVlcnktYnJpZGdldC9qcXVlcnktYnJpZGdldCcsWyAnanF1ZXJ5JyBdLCBmdW5jdGlvbiggalF1ZXJ5ICkge1xuICAgICAgcmV0dXJuIGZhY3RvcnkoIHdpbmRvdywgalF1ZXJ5ICk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICByZXF1aXJlKCdqcXVlcnknKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICB3aW5kb3cualF1ZXJ5QnJpZGdldCA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICB3aW5kb3cualF1ZXJ5XG4gICAgKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoIHdpbmRvdywgalF1ZXJ5ICkge1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLSB1dGlscyAtLS0tLSAvL1xuXG52YXIgYXJyYXlTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcblxuLy8gaGVscGVyIGZ1bmN0aW9uIGZvciBsb2dnaW5nIGVycm9yc1xuLy8gJC5lcnJvciBicmVha3MgalF1ZXJ5IGNoYWluaW5nXG52YXIgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlO1xudmFyIGxvZ0Vycm9yID0gdHlwZW9mIGNvbnNvbGUgPT0gJ3VuZGVmaW5lZCcgPyBmdW5jdGlvbigpIHt9IDpcbiAgZnVuY3Rpb24oIG1lc3NhZ2UgKSB7XG4gICAgY29uc29sZS5lcnJvciggbWVzc2FnZSApO1xuICB9O1xuXG4vLyAtLS0tLSBqUXVlcnlCcmlkZ2V0IC0tLS0tIC8vXG5cbmZ1bmN0aW9uIGpRdWVyeUJyaWRnZXQoIG5hbWVzcGFjZSwgUGx1Z2luQ2xhc3MsICQgKSB7XG4gICQgPSAkIHx8IGpRdWVyeSB8fCB3aW5kb3cualF1ZXJ5O1xuICBpZiAoICEkICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIGFkZCBvcHRpb24gbWV0aG9kIC0+ICQoKS5wbHVnaW4oJ29wdGlvbicsIHsuLi59KVxuICBpZiAoICFQbHVnaW5DbGFzcy5wcm90b3R5cGUub3B0aW9uICkge1xuICAgIC8vIG9wdGlvbiBzZXR0ZXJcbiAgICBQbHVnaW5DbGFzcy5wcm90b3R5cGUub3B0aW9uID0gZnVuY3Rpb24oIG9wdHMgKSB7XG4gICAgICAvLyBiYWlsIG91dCBpZiBub3QgYW4gb2JqZWN0XG4gICAgICBpZiAoICEkLmlzUGxhaW5PYmplY3QoIG9wdHMgKSApe1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCggdHJ1ZSwgdGhpcy5vcHRpb25zLCBvcHRzICk7XG4gICAgfTtcbiAgfVxuXG4gIC8vIG1ha2UgalF1ZXJ5IHBsdWdpblxuICAkLmZuWyBuYW1lc3BhY2UgXSA9IGZ1bmN0aW9uKCBhcmcwIC8qLCBhcmcxICovICkge1xuICAgIGlmICggdHlwZW9mIGFyZzAgPT0gJ3N0cmluZycgKSB7XG4gICAgICAvLyBtZXRob2QgY2FsbCAkKCkucGx1Z2luKCAnbWV0aG9kTmFtZScsIHsgb3B0aW9ucyB9IClcbiAgICAgIC8vIHNoaWZ0IGFyZ3VtZW50cyBieSAxXG4gICAgICB2YXIgYXJncyA9IGFycmF5U2xpY2UuY2FsbCggYXJndW1lbnRzLCAxICk7XG4gICAgICByZXR1cm4gbWV0aG9kQ2FsbCggdGhpcywgYXJnMCwgYXJncyApO1xuICAgIH1cbiAgICAvLyBqdXN0ICQoKS5wbHVnaW4oeyBvcHRpb25zIH0pXG4gICAgcGxhaW5DYWxsKCB0aGlzLCBhcmcwICk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgLy8gJCgpLnBsdWdpbignbWV0aG9kTmFtZScpXG4gIGZ1bmN0aW9uIG1ldGhvZENhbGwoICRlbGVtcywgbWV0aG9kTmFtZSwgYXJncyApIHtcbiAgICB2YXIgcmV0dXJuVmFsdWU7XG4gICAgdmFyIHBsdWdpbk1ldGhvZFN0ciA9ICckKCkuJyArIG5hbWVzcGFjZSArICcoXCInICsgbWV0aG9kTmFtZSArICdcIiknO1xuXG4gICAgJGVsZW1zLmVhY2goIGZ1bmN0aW9uKCBpLCBlbGVtICkge1xuICAgICAgLy8gZ2V0IGluc3RhbmNlXG4gICAgICB2YXIgaW5zdGFuY2UgPSAkLmRhdGEoIGVsZW0sIG5hbWVzcGFjZSApO1xuICAgICAgaWYgKCAhaW5zdGFuY2UgKSB7XG4gICAgICAgIGxvZ0Vycm9yKCBuYW1lc3BhY2UgKyAnIG5vdCBpbml0aWFsaXplZC4gQ2Fubm90IGNhbGwgbWV0aG9kcywgaS5lLiAnICtcbiAgICAgICAgICBwbHVnaW5NZXRob2RTdHIgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgbWV0aG9kID0gaW5zdGFuY2VbIG1ldGhvZE5hbWUgXTtcbiAgICAgIGlmICggIW1ldGhvZCB8fCBtZXRob2ROYW1lLmNoYXJBdCgwKSA9PSAnXycgKSB7XG4gICAgICAgIGxvZ0Vycm9yKCBwbHVnaW5NZXRob2RTdHIgKyAnIGlzIG5vdCBhIHZhbGlkIG1ldGhvZCcgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBhcHBseSBtZXRob2QsIGdldCByZXR1cm4gdmFsdWVcbiAgICAgIHZhciB2YWx1ZSA9IG1ldGhvZC5hcHBseSggaW5zdGFuY2UsIGFyZ3MgKTtcbiAgICAgIC8vIHNldCByZXR1cm4gdmFsdWUgaWYgdmFsdWUgaXMgcmV0dXJuZWQsIHVzZSBvbmx5IGZpcnN0IHZhbHVlXG4gICAgICByZXR1cm5WYWx1ZSA9IHJldHVyblZhbHVlID09PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHJldHVyblZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJldHVyblZhbHVlICE9PSB1bmRlZmluZWQgPyByZXR1cm5WYWx1ZSA6ICRlbGVtcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYWluQ2FsbCggJGVsZW1zLCBvcHRpb25zICkge1xuICAgICRlbGVtcy5lYWNoKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcbiAgICAgIHZhciBpbnN0YW5jZSA9ICQuZGF0YSggZWxlbSwgbmFtZXNwYWNlICk7XG4gICAgICBpZiAoIGluc3RhbmNlICkge1xuICAgICAgICAvLyBzZXQgb3B0aW9ucyAmIGluaXRcbiAgICAgICAgaW5zdGFuY2Uub3B0aW9uKCBvcHRpb25zICk7XG4gICAgICAgIGluc3RhbmNlLl9pbml0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBpbml0aWFsaXplIG5ldyBpbnN0YW5jZVxuICAgICAgICBpbnN0YW5jZSA9IG5ldyBQbHVnaW5DbGFzcyggZWxlbSwgb3B0aW9ucyApO1xuICAgICAgICAkLmRhdGEoIGVsZW0sIG5hbWVzcGFjZSwgaW5zdGFuY2UgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHVwZGF0ZUpRdWVyeSggJCApO1xuXG59XG5cbi8vIC0tLS0tIHVwZGF0ZUpRdWVyeSAtLS0tLSAvL1xuXG4vLyBzZXQgJC5icmlkZ2V0IGZvciB2MSBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuZnVuY3Rpb24gdXBkYXRlSlF1ZXJ5KCAkICkge1xuICBpZiAoICEkIHx8ICggJCAmJiAkLmJyaWRnZXQgKSApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgJC5icmlkZ2V0ID0galF1ZXJ5QnJpZGdldDtcbn1cblxudXBkYXRlSlF1ZXJ5KCBqUXVlcnkgfHwgd2luZG93LmpRdWVyeSApO1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxucmV0dXJuIGpRdWVyeUJyaWRnZXQ7XG5cbn0pKTtcblxuLyoqXG4gKiBFdkVtaXR0ZXIgdjEuMC4zXG4gKiBMaWwnIGV2ZW50IGVtaXR0ZXJcbiAqIE1JVCBMaWNlbnNlXG4gKi9cblxuLyoganNoaW50IHVudXNlZDogdHJ1ZSwgdW5kZWY6IHRydWUsIHN0cmljdDogdHJ1ZSAqL1xuXG4oIGZ1bmN0aW9uKCBnbG9iYWwsIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqLyAvKiBnbG9iYWxzIGRlZmluZSwgbW9kdWxlLCB3aW5kb3cgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTUQgLSBSZXF1aXJlSlNcbiAgICBkZWZpbmUoICdldi1lbWl0dGVyL2V2LWVtaXR0ZXInLGZhY3RvcnkgKTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KUyAtIEJyb3dzZXJpZnksIFdlYnBhY2tcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBCcm93c2VyIGdsb2JhbHNcbiAgICBnbG9iYWwuRXZFbWl0dGVyID0gZmFjdG9yeSgpO1xuICB9XG5cbn0oIHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbigpIHtcblxuXG5cbmZ1bmN0aW9uIEV2RW1pdHRlcigpIHt9XG5cbnZhciBwcm90byA9IEV2RW1pdHRlci5wcm90b3R5cGU7XG5cbnByb3RvLm9uID0gZnVuY3Rpb24oIGV2ZW50TmFtZSwgbGlzdGVuZXIgKSB7XG4gIGlmICggIWV2ZW50TmFtZSB8fCAhbGlzdGVuZXIgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIHNldCBldmVudHMgaGFzaFxuICB2YXIgZXZlbnRzID0gdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICAvLyBzZXQgbGlzdGVuZXJzIGFycmF5XG4gIHZhciBsaXN0ZW5lcnMgPSBldmVudHNbIGV2ZW50TmFtZSBdID0gZXZlbnRzWyBldmVudE5hbWUgXSB8fCBbXTtcbiAgLy8gb25seSBhZGQgb25jZVxuICBpZiAoIGxpc3RlbmVycy5pbmRleE9mKCBsaXN0ZW5lciApID09IC0xICkge1xuICAgIGxpc3RlbmVycy5wdXNoKCBsaXN0ZW5lciApO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5wcm90by5vbmNlID0gZnVuY3Rpb24oIGV2ZW50TmFtZSwgbGlzdGVuZXIgKSB7XG4gIGlmICggIWV2ZW50TmFtZSB8fCAhbGlzdGVuZXIgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIGFkZCBldmVudFxuICB0aGlzLm9uKCBldmVudE5hbWUsIGxpc3RlbmVyICk7XG4gIC8vIHNldCBvbmNlIGZsYWdcbiAgLy8gc2V0IG9uY2VFdmVudHMgaGFzaFxuICB2YXIgb25jZUV2ZW50cyA9IHRoaXMuX29uY2VFdmVudHMgPSB0aGlzLl9vbmNlRXZlbnRzIHx8IHt9O1xuICAvLyBzZXQgb25jZUxpc3RlbmVycyBvYmplY3RcbiAgdmFyIG9uY2VMaXN0ZW5lcnMgPSBvbmNlRXZlbnRzWyBldmVudE5hbWUgXSA9IG9uY2VFdmVudHNbIGV2ZW50TmFtZSBdIHx8IHt9O1xuICAvLyBzZXQgZmxhZ1xuICBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdID0gdHJ1ZTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbnByb3RvLm9mZiA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzICYmIHRoaXMuX2V2ZW50c1sgZXZlbnROYW1lIF07XG4gIGlmICggIWxpc3RlbmVycyB8fCAhbGlzdGVuZXJzLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGluZGV4ID0gbGlzdGVuZXJzLmluZGV4T2YoIGxpc3RlbmVyICk7XG4gIGlmICggaW5kZXggIT0gLTEgKSB7XG4gICAgbGlzdGVuZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8uZW1pdEV2ZW50ID0gZnVuY3Rpb24oIGV2ZW50TmFtZSwgYXJncyApIHtcbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50cyAmJiB0aGlzLl9ldmVudHNbIGV2ZW50TmFtZSBdO1xuICBpZiAoICFsaXN0ZW5lcnMgfHwgIWxpc3RlbmVycy5sZW5ndGggKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpID0gMDtcbiAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICBhcmdzID0gYXJncyB8fCBbXTtcbiAgLy8gb25jZSBzdHVmZlxuICB2YXIgb25jZUxpc3RlbmVycyA9IHRoaXMuX29uY2VFdmVudHMgJiYgdGhpcy5fb25jZUV2ZW50c1sgZXZlbnROYW1lIF07XG5cbiAgd2hpbGUgKCBsaXN0ZW5lciApIHtcbiAgICB2YXIgaXNPbmNlID0gb25jZUxpc3RlbmVycyAmJiBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIGlmICggaXNPbmNlICkge1xuICAgICAgLy8gcmVtb3ZlIGxpc3RlbmVyXG4gICAgICAvLyByZW1vdmUgYmVmb3JlIHRyaWdnZXIgdG8gcHJldmVudCByZWN1cnNpb25cbiAgICAgIHRoaXMub2ZmKCBldmVudE5hbWUsIGxpc3RlbmVyICk7XG4gICAgICAvLyB1bnNldCBvbmNlIGZsYWdcbiAgICAgIGRlbGV0ZSBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIH1cbiAgICAvLyB0cmlnZ2VyIGxpc3RlbmVyXG4gICAgbGlzdGVuZXIuYXBwbHkoIHRoaXMsIGFyZ3MgKTtcbiAgICAvLyBnZXQgbmV4dCBsaXN0ZW5lclxuICAgIGkgKz0gaXNPbmNlID8gMCA6IDE7XG4gICAgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV07XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbnJldHVybiBFdkVtaXR0ZXI7XG5cbn0pKTtcblxuLyohXG4gKiBnZXRTaXplIHYyLjAuMlxuICogbWVhc3VyZSBzaXplIG9mIGVsZW1lbnRzXG4gKiBNSVQgbGljZW5zZVxuICovXG5cbi8qanNoaW50IGJyb3dzZXI6IHRydWUsIHN0cmljdDogdHJ1ZSwgdW5kZWY6IHRydWUsIHVudXNlZDogdHJ1ZSAqL1xuLypnbG9iYWwgZGVmaW5lOiBmYWxzZSwgbW9kdWxlOiBmYWxzZSwgY29uc29sZTogZmFsc2UgKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdnZXQtc2l6ZS9nZXQtc2l6ZScsW10sZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZmFjdG9yeSgpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICB3aW5kb3cuZ2V0U2l6ZSA9IGZhY3RvcnkoKTtcbiAgfVxuXG59KSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCkge1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBoZWxwZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbi8vIGdldCBhIG51bWJlciBmcm9tIGEgc3RyaW5nLCBub3QgYSBwZXJjZW50YWdlXG5mdW5jdGlvbiBnZXRTdHlsZVNpemUoIHZhbHVlICkge1xuICB2YXIgbnVtID0gcGFyc2VGbG9hdCggdmFsdWUgKTtcbiAgLy8gbm90IGEgcGVyY2VudCBsaWtlICcxMDAlJywgYW5kIGEgbnVtYmVyXG4gIHZhciBpc1ZhbGlkID0gdmFsdWUuaW5kZXhPZignJScpID09IC0xICYmICFpc05hTiggbnVtICk7XG4gIHJldHVybiBpc1ZhbGlkICYmIG51bTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnZhciBsb2dFcnJvciA9IHR5cGVvZiBjb25zb2xlID09ICd1bmRlZmluZWQnID8gbm9vcCA6XG4gIGZ1bmN0aW9uKCBtZXNzYWdlICkge1xuICAgIGNvbnNvbGUuZXJyb3IoIG1lc3NhZ2UgKTtcbiAgfTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gbWVhc3VyZW1lbnRzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbnZhciBtZWFzdXJlbWVudHMgPSBbXG4gICdwYWRkaW5nTGVmdCcsXG4gICdwYWRkaW5nUmlnaHQnLFxuICAncGFkZGluZ1RvcCcsXG4gICdwYWRkaW5nQm90dG9tJyxcbiAgJ21hcmdpbkxlZnQnLFxuICAnbWFyZ2luUmlnaHQnLFxuICAnbWFyZ2luVG9wJyxcbiAgJ21hcmdpbkJvdHRvbScsXG4gICdib3JkZXJMZWZ0V2lkdGgnLFxuICAnYm9yZGVyUmlnaHRXaWR0aCcsXG4gICdib3JkZXJUb3BXaWR0aCcsXG4gICdib3JkZXJCb3R0b21XaWR0aCdcbl07XG5cbnZhciBtZWFzdXJlbWVudHNMZW5ndGggPSBtZWFzdXJlbWVudHMubGVuZ3RoO1xuXG5mdW5jdGlvbiBnZXRaZXJvU2l6ZSgpIHtcbiAgdmFyIHNpemUgPSB7XG4gICAgd2lkdGg6IDAsXG4gICAgaGVpZ2h0OiAwLFxuICAgIGlubmVyV2lkdGg6IDAsXG4gICAgaW5uZXJIZWlnaHQ6IDAsXG4gICAgb3V0ZXJXaWR0aDogMCxcbiAgICBvdXRlckhlaWdodDogMFxuICB9O1xuICBmb3IgKCB2YXIgaT0wOyBpIDwgbWVhc3VyZW1lbnRzTGVuZ3RoOyBpKysgKSB7XG4gICAgdmFyIG1lYXN1cmVtZW50ID0gbWVhc3VyZW1lbnRzW2ldO1xuICAgIHNpemVbIG1lYXN1cmVtZW50IF0gPSAwO1xuICB9XG4gIHJldHVybiBzaXplO1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBnZXRTdHlsZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4vKipcbiAqIGdldFN0eWxlLCBnZXQgc3R5bGUgb2YgZWxlbWVudCwgY2hlY2sgZm9yIEZpcmVmb3ggYnVnXG4gKiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD01NDgzOTdcbiAqL1xuZnVuY3Rpb24gZ2V0U3R5bGUoIGVsZW0gKSB7XG4gIHZhciBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcbiAgaWYgKCAhc3R5bGUgKSB7XG4gICAgbG9nRXJyb3IoICdTdHlsZSByZXR1cm5lZCAnICsgc3R5bGUgK1xuICAgICAgJy4gQXJlIHlvdSBydW5uaW5nIHRoaXMgY29kZSBpbiBhIGhpZGRlbiBpZnJhbWUgb24gRmlyZWZveD8gJyArXG4gICAgICAnU2VlIGh0dHA6Ly9iaXQubHkvZ2V0c2l6ZWJ1ZzEnICk7XG4gIH1cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBzZXR1cCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG52YXIgaXNTZXR1cCA9IGZhbHNlO1xuXG52YXIgaXNCb3hTaXplT3V0ZXI7XG5cbi8qKlxuICogc2V0dXBcbiAqIGNoZWNrIGlzQm94U2l6ZXJPdXRlclxuICogZG8gb24gZmlyc3QgZ2V0U2l6ZSgpIHJhdGhlciB0aGFuIG9uIHBhZ2UgbG9hZCBmb3IgRmlyZWZveCBidWdcbiAqL1xuZnVuY3Rpb24gc2V0dXAoKSB7XG4gIC8vIHNldHVwIG9uY2VcbiAgaWYgKCBpc1NldHVwICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpc1NldHVwID0gdHJ1ZTtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBib3ggc2l6aW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbiAgLyoqXG4gICAqIFdlYktpdCBtZWFzdXJlcyB0aGUgb3V0ZXItd2lkdGggb24gc3R5bGUud2lkdGggb24gYm9yZGVyLWJveCBlbGVtc1xuICAgKiBJRSAmIEZpcmVmb3g8MjkgbWVhc3VyZXMgdGhlIGlubmVyLXdpZHRoXG4gICAqL1xuICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdi5zdHlsZS53aWR0aCA9ICcyMDBweCc7XG4gIGRpdi5zdHlsZS5wYWRkaW5nID0gJzFweCAycHggM3B4IDRweCc7XG4gIGRpdi5zdHlsZS5ib3JkZXJTdHlsZSA9ICdzb2xpZCc7XG4gIGRpdi5zdHlsZS5ib3JkZXJXaWR0aCA9ICcxcHggMnB4IDNweCA0cHgnO1xuICBkaXYuc3R5bGUuYm94U2l6aW5nID0gJ2JvcmRlci1ib3gnO1xuXG4gIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keSB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIGJvZHkuYXBwZW5kQ2hpbGQoIGRpdiApO1xuICB2YXIgc3R5bGUgPSBnZXRTdHlsZSggZGl2ICk7XG5cbiAgZ2V0U2l6ZS5pc0JveFNpemVPdXRlciA9IGlzQm94U2l6ZU91dGVyID0gZ2V0U3R5bGVTaXplKCBzdHlsZS53aWR0aCApID09IDIwMDtcbiAgYm9keS5yZW1vdmVDaGlsZCggZGl2ICk7XG5cbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gZ2V0U2l6ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG5mdW5jdGlvbiBnZXRTaXplKCBlbGVtICkge1xuICBzZXR1cCgpO1xuXG4gIC8vIHVzZSBxdWVyeVNlbGV0b3IgaWYgZWxlbSBpcyBzdHJpbmdcbiAgaWYgKCB0eXBlb2YgZWxlbSA9PSAnc3RyaW5nJyApIHtcbiAgICBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvciggZWxlbSApO1xuICB9XG5cbiAgLy8gZG8gbm90IHByb2NlZWQgb24gbm9uLW9iamVjdHNcbiAgaWYgKCAhZWxlbSB8fCB0eXBlb2YgZWxlbSAhPSAnb2JqZWN0JyB8fCAhZWxlbS5ub2RlVHlwZSApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgc3R5bGUgPSBnZXRTdHlsZSggZWxlbSApO1xuXG4gIC8vIGlmIGhpZGRlbiwgZXZlcnl0aGluZyBpcyAwXG4gIGlmICggc3R5bGUuZGlzcGxheSA9PSAnbm9uZScgKSB7XG4gICAgcmV0dXJuIGdldFplcm9TaXplKCk7XG4gIH1cblxuICB2YXIgc2l6ZSA9IHt9O1xuICBzaXplLndpZHRoID0gZWxlbS5vZmZzZXRXaWR0aDtcbiAgc2l6ZS5oZWlnaHQgPSBlbGVtLm9mZnNldEhlaWdodDtcblxuICB2YXIgaXNCb3JkZXJCb3ggPSBzaXplLmlzQm9yZGVyQm94ID0gc3R5bGUuYm94U2l6aW5nID09ICdib3JkZXItYm94JztcblxuICAvLyBnZXQgYWxsIG1lYXN1cmVtZW50c1xuICBmb3IgKCB2YXIgaT0wOyBpIDwgbWVhc3VyZW1lbnRzTGVuZ3RoOyBpKysgKSB7XG4gICAgdmFyIG1lYXN1cmVtZW50ID0gbWVhc3VyZW1lbnRzW2ldO1xuICAgIHZhciB2YWx1ZSA9IHN0eWxlWyBtZWFzdXJlbWVudCBdO1xuICAgIHZhciBudW0gPSBwYXJzZUZsb2F0KCB2YWx1ZSApO1xuICAgIC8vIGFueSAnYXV0bycsICdtZWRpdW0nIHZhbHVlIHdpbGwgYmUgMFxuICAgIHNpemVbIG1lYXN1cmVtZW50IF0gPSAhaXNOYU4oIG51bSApID8gbnVtIDogMDtcbiAgfVxuXG4gIHZhciBwYWRkaW5nV2lkdGggPSBzaXplLnBhZGRpbmdMZWZ0ICsgc2l6ZS5wYWRkaW5nUmlnaHQ7XG4gIHZhciBwYWRkaW5nSGVpZ2h0ID0gc2l6ZS5wYWRkaW5nVG9wICsgc2l6ZS5wYWRkaW5nQm90dG9tO1xuICB2YXIgbWFyZ2luV2lkdGggPSBzaXplLm1hcmdpbkxlZnQgKyBzaXplLm1hcmdpblJpZ2h0O1xuICB2YXIgbWFyZ2luSGVpZ2h0ID0gc2l6ZS5tYXJnaW5Ub3AgKyBzaXplLm1hcmdpbkJvdHRvbTtcbiAgdmFyIGJvcmRlcldpZHRoID0gc2l6ZS5ib3JkZXJMZWZ0V2lkdGggKyBzaXplLmJvcmRlclJpZ2h0V2lkdGg7XG4gIHZhciBib3JkZXJIZWlnaHQgPSBzaXplLmJvcmRlclRvcFdpZHRoICsgc2l6ZS5ib3JkZXJCb3R0b21XaWR0aDtcblxuICB2YXIgaXNCb3JkZXJCb3hTaXplT3V0ZXIgPSBpc0JvcmRlckJveCAmJiBpc0JveFNpemVPdXRlcjtcblxuICAvLyBvdmVyd3JpdGUgd2lkdGggYW5kIGhlaWdodCBpZiB3ZSBjYW4gZ2V0IGl0IGZyb20gc3R5bGVcbiAgdmFyIHN0eWxlV2lkdGggPSBnZXRTdHlsZVNpemUoIHN0eWxlLndpZHRoICk7XG4gIGlmICggc3R5bGVXaWR0aCAhPT0gZmFsc2UgKSB7XG4gICAgc2l6ZS53aWR0aCA9IHN0eWxlV2lkdGggK1xuICAgICAgLy8gYWRkIHBhZGRpbmcgYW5kIGJvcmRlciB1bmxlc3MgaXQncyBhbHJlYWR5IGluY2x1ZGluZyBpdFxuICAgICAgKCBpc0JvcmRlckJveFNpemVPdXRlciA/IDAgOiBwYWRkaW5nV2lkdGggKyBib3JkZXJXaWR0aCApO1xuICB9XG5cbiAgdmFyIHN0eWxlSGVpZ2h0ID0gZ2V0U3R5bGVTaXplKCBzdHlsZS5oZWlnaHQgKTtcbiAgaWYgKCBzdHlsZUhlaWdodCAhPT0gZmFsc2UgKSB7XG4gICAgc2l6ZS5oZWlnaHQgPSBzdHlsZUhlaWdodCArXG4gICAgICAvLyBhZGQgcGFkZGluZyBhbmQgYm9yZGVyIHVubGVzcyBpdCdzIGFscmVhZHkgaW5jbHVkaW5nIGl0XG4gICAgICAoIGlzQm9yZGVyQm94U2l6ZU91dGVyID8gMCA6IHBhZGRpbmdIZWlnaHQgKyBib3JkZXJIZWlnaHQgKTtcbiAgfVxuXG4gIHNpemUuaW5uZXJXaWR0aCA9IHNpemUud2lkdGggLSAoIHBhZGRpbmdXaWR0aCArIGJvcmRlcldpZHRoICk7XG4gIHNpemUuaW5uZXJIZWlnaHQgPSBzaXplLmhlaWdodCAtICggcGFkZGluZ0hlaWdodCArIGJvcmRlckhlaWdodCApO1xuXG4gIHNpemUub3V0ZXJXaWR0aCA9IHNpemUud2lkdGggKyBtYXJnaW5XaWR0aDtcbiAgc2l6ZS5vdXRlckhlaWdodCA9IHNpemUuaGVpZ2h0ICsgbWFyZ2luSGVpZ2h0O1xuXG4gIHJldHVybiBzaXplO1xufVxuXG5yZXR1cm4gZ2V0U2l6ZTtcblxufSk7XG5cbi8qKlxuICogbWF0Y2hlc1NlbGVjdG9yIHYyLjAuMlxuICogbWF0Y2hlc1NlbGVjdG9yKCBlbGVtZW50LCAnLnNlbGVjdG9yJyApXG4gKiBNSVQgbGljZW5zZVxuICovXG5cbi8qanNoaW50IGJyb3dzZXI6IHRydWUsIHN0cmljdDogdHJ1ZSwgdW5kZWY6IHRydWUsIHVudXNlZDogdHJ1ZSAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8qZ2xvYmFsIGRlZmluZTogZmFsc2UsIG1vZHVsZTogZmFsc2UgKi9cbiAgJ3VzZSBzdHJpY3QnO1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdkZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yL21hdGNoZXMtc2VsZWN0b3InLGZhY3RvcnkgKTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KU1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93Lm1hdGNoZXNTZWxlY3RvciA9IGZhY3RvcnkoKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICB2YXIgbWF0Y2hlc01ldGhvZCA9ICggZnVuY3Rpb24oKSB7XG4gICAgdmFyIEVsZW1Qcm90byA9IHdpbmRvdy5FbGVtZW50LnByb3RvdHlwZTtcbiAgICAvLyBjaGVjayBmb3IgdGhlIHN0YW5kYXJkIG1ldGhvZCBuYW1lIGZpcnN0XG4gICAgaWYgKCBFbGVtUHJvdG8ubWF0Y2hlcyApIHtcbiAgICAgIHJldHVybiAnbWF0Y2hlcyc7XG4gICAgfVxuICAgIC8vIGNoZWNrIHVuLXByZWZpeGVkXG4gICAgaWYgKCBFbGVtUHJvdG8ubWF0Y2hlc1NlbGVjdG9yICkge1xuICAgICAgcmV0dXJuICdtYXRjaGVzU2VsZWN0b3InO1xuICAgIH1cbiAgICAvLyBjaGVjayB2ZW5kb3IgcHJlZml4ZXNcbiAgICB2YXIgcHJlZml4ZXMgPSBbICd3ZWJraXQnLCAnbW96JywgJ21zJywgJ28nIF07XG5cbiAgICBmb3IgKCB2YXIgaT0wOyBpIDwgcHJlZml4ZXMubGVuZ3RoOyBpKysgKSB7XG4gICAgICB2YXIgcHJlZml4ID0gcHJlZml4ZXNbaV07XG4gICAgICB2YXIgbWV0aG9kID0gcHJlZml4ICsgJ01hdGNoZXNTZWxlY3Rvcic7XG4gICAgICBpZiAoIEVsZW1Qcm90b1sgbWV0aG9kIF0gKSB7XG4gICAgICAgIHJldHVybiBtZXRob2Q7XG4gICAgICB9XG4gICAgfVxuICB9KSgpO1xuXG4gIHJldHVybiBmdW5jdGlvbiBtYXRjaGVzU2VsZWN0b3IoIGVsZW0sIHNlbGVjdG9yICkge1xuICAgIHJldHVybiBlbGVtWyBtYXRjaGVzTWV0aG9kIF0oIHNlbGVjdG9yICk7XG4gIH07XG5cbn0pKTtcblxuLyoqXG4gKiBGaXp6eSBVSSB1dGlscyB2Mi4wLjVcbiAqIE1JVCBsaWNlbnNlXG4gKi9cblxuLypqc2hpbnQgYnJvd3NlcjogdHJ1ZSwgdW5kZWY6IHRydWUsIHVudXNlZDogdHJ1ZSwgc3RyaWN0OiB0cnVlICovXG5cbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qanNoaW50IHN0cmljdDogZmFsc2UgKi8gLypnbG9iYWxzIGRlZmluZSwgbW9kdWxlLCByZXF1aXJlICovXG5cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdmaXp6eS11aS11dGlscy91dGlscycsW1xuICAgICAgJ2Rlc2FuZHJvLW1hdGNoZXMtc2VsZWN0b3IvbWF0Y2hlcy1zZWxlY3RvcidcbiAgICBdLCBmdW5jdGlvbiggbWF0Y2hlc1NlbGVjdG9yICkge1xuICAgICAgcmV0dXJuIGZhY3RvcnkoIHdpbmRvdywgbWF0Y2hlc1NlbGVjdG9yICk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICByZXF1aXJlKCdkZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93LmZpenp5VUlVdGlscyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICB3aW5kb3cubWF0Y2hlc1NlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoIHdpbmRvdywgbWF0Y2hlc1NlbGVjdG9yICkge1xuXG5cblxudmFyIHV0aWxzID0ge307XG5cbi8vIC0tLS0tIGV4dGVuZCAtLS0tLSAvL1xuXG4vLyBleHRlbmRzIG9iamVjdHNcbnV0aWxzLmV4dGVuZCA9IGZ1bmN0aW9uKCBhLCBiICkge1xuICBmb3IgKCB2YXIgcHJvcCBpbiBiICkge1xuICAgIGFbIHByb3AgXSA9IGJbIHByb3AgXTtcbiAgfVxuICByZXR1cm4gYTtcbn07XG5cbi8vIC0tLS0tIG1vZHVsbyAtLS0tLSAvL1xuXG51dGlscy5tb2R1bG8gPSBmdW5jdGlvbiggbnVtLCBkaXYgKSB7XG4gIHJldHVybiAoICggbnVtICUgZGl2ICkgKyBkaXYgKSAlIGRpdjtcbn07XG5cbi8vIC0tLS0tIG1ha2VBcnJheSAtLS0tLSAvL1xuXG4vLyB0dXJuIGVsZW1lbnQgb3Igbm9kZUxpc3QgaW50byBhbiBhcnJheVxudXRpbHMubWFrZUFycmF5ID0gZnVuY3Rpb24oIG9iaiApIHtcbiAgdmFyIGFyeSA9IFtdO1xuICBpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xuICAgIC8vIHVzZSBvYmplY3QgaWYgYWxyZWFkeSBhbiBhcnJheVxuICAgIGFyeSA9IG9iajtcbiAgfSBlbHNlIGlmICggb2JqICYmIHR5cGVvZiBvYmogPT0gJ29iamVjdCcgJiZcbiAgICB0eXBlb2Ygb2JqLmxlbmd0aCA9PSAnbnVtYmVyJyApIHtcbiAgICAvLyBjb252ZXJ0IG5vZGVMaXN0IHRvIGFycmF5XG4gICAgZm9yICggdmFyIGk9MDsgaSA8IG9iai5sZW5ndGg7IGkrKyApIHtcbiAgICAgIGFyeS5wdXNoKCBvYmpbaV0gKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gYXJyYXkgb2Ygc2luZ2xlIGluZGV4XG4gICAgYXJ5LnB1c2goIG9iaiApO1xuICB9XG4gIHJldHVybiBhcnk7XG59O1xuXG4vLyAtLS0tLSByZW1vdmVGcm9tIC0tLS0tIC8vXG5cbnV0aWxzLnJlbW92ZUZyb20gPSBmdW5jdGlvbiggYXJ5LCBvYmogKSB7XG4gIHZhciBpbmRleCA9IGFyeS5pbmRleE9mKCBvYmogKTtcbiAgaWYgKCBpbmRleCAhPSAtMSApIHtcbiAgICBhcnkuc3BsaWNlKCBpbmRleCwgMSApO1xuICB9XG59O1xuXG4vLyAtLS0tLSBnZXRQYXJlbnQgLS0tLS0gLy9cblxudXRpbHMuZ2V0UGFyZW50ID0gZnVuY3Rpb24oIGVsZW0sIHNlbGVjdG9yICkge1xuICB3aGlsZSAoIGVsZW0ucGFyZW50Tm9kZSAmJiBlbGVtICE9IGRvY3VtZW50LmJvZHkgKSB7XG4gICAgZWxlbSA9IGVsZW0ucGFyZW50Tm9kZTtcbiAgICBpZiAoIG1hdGNoZXNTZWxlY3RvciggZWxlbSwgc2VsZWN0b3IgKSApIHtcbiAgICAgIHJldHVybiBlbGVtO1xuICAgIH1cbiAgfVxufTtcblxuLy8gLS0tLS0gZ2V0UXVlcnlFbGVtZW50IC0tLS0tIC8vXG5cbi8vIHVzZSBlbGVtZW50IGFzIHNlbGVjdG9yIHN0cmluZ1xudXRpbHMuZ2V0UXVlcnlFbGVtZW50ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG4gIGlmICggdHlwZW9mIGVsZW0gPT0gJ3N0cmluZycgKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIGVsZW0gKTtcbiAgfVxuICByZXR1cm4gZWxlbTtcbn07XG5cbi8vIC0tLS0tIGhhbmRsZUV2ZW50IC0tLS0tIC8vXG5cbi8vIGVuYWJsZSAub250eXBlIHRvIHRyaWdnZXIgZnJvbSAuYWRkRXZlbnRMaXN0ZW5lciggZWxlbSwgJ3R5cGUnIClcbnV0aWxzLmhhbmRsZUV2ZW50ID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB2YXIgbWV0aG9kID0gJ29uJyArIGV2ZW50LnR5cGU7XG4gIGlmICggdGhpc1sgbWV0aG9kIF0gKSB7XG4gICAgdGhpc1sgbWV0aG9kIF0oIGV2ZW50ICk7XG4gIH1cbn07XG5cbi8vIC0tLS0tIGZpbHRlckZpbmRFbGVtZW50cyAtLS0tLSAvL1xuXG51dGlscy5maWx0ZXJGaW5kRWxlbWVudHMgPSBmdW5jdGlvbiggZWxlbXMsIHNlbGVjdG9yICkge1xuICAvLyBtYWtlIGFycmF5IG9mIGVsZW1zXG4gIGVsZW1zID0gdXRpbHMubWFrZUFycmF5KCBlbGVtcyApO1xuICB2YXIgZmZFbGVtcyA9IFtdO1xuXG4gIGVsZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBlbGVtICkge1xuICAgIC8vIGNoZWNrIHRoYXQgZWxlbSBpcyBhbiBhY3R1YWwgZWxlbWVudFxuICAgIGlmICggISggZWxlbSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICkgKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGFkZCBlbGVtIGlmIG5vIHNlbGVjdG9yXG4gICAgaWYgKCAhc2VsZWN0b3IgKSB7XG4gICAgICBmZkVsZW1zLnB1c2goIGVsZW0gKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gZmlsdGVyICYgZmluZCBpdGVtcyBpZiB3ZSBoYXZlIGEgc2VsZWN0b3JcbiAgICAvLyBmaWx0ZXJcbiAgICBpZiAoIG1hdGNoZXNTZWxlY3RvciggZWxlbSwgc2VsZWN0b3IgKSApIHtcbiAgICAgIGZmRWxlbXMucHVzaCggZWxlbSApO1xuICAgIH1cbiAgICAvLyBmaW5kIGNoaWxkcmVuXG4gICAgdmFyIGNoaWxkRWxlbXMgPSBlbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoIHNlbGVjdG9yICk7XG4gICAgLy8gY29uY2F0IGNoaWxkRWxlbXMgdG8gZmlsdGVyRm91bmQgYXJyYXlcbiAgICBmb3IgKCB2YXIgaT0wOyBpIDwgY2hpbGRFbGVtcy5sZW5ndGg7IGkrKyApIHtcbiAgICAgIGZmRWxlbXMucHVzaCggY2hpbGRFbGVtc1tpXSApO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGZmRWxlbXM7XG59O1xuXG4vLyAtLS0tLSBkZWJvdW5jZU1ldGhvZCAtLS0tLSAvL1xuXG51dGlscy5kZWJvdW5jZU1ldGhvZCA9IGZ1bmN0aW9uKCBfY2xhc3MsIG1ldGhvZE5hbWUsIHRocmVzaG9sZCApIHtcbiAgLy8gb3JpZ2luYWwgbWV0aG9kXG4gIHZhciBtZXRob2QgPSBfY2xhc3MucHJvdG90eXBlWyBtZXRob2ROYW1lIF07XG4gIHZhciB0aW1lb3V0TmFtZSA9IG1ldGhvZE5hbWUgKyAnVGltZW91dCc7XG5cbiAgX2NsYXNzLnByb3RvdHlwZVsgbWV0aG9kTmFtZSBdID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHRpbWVvdXQgPSB0aGlzWyB0aW1lb3V0TmFtZSBdO1xuICAgIGlmICggdGltZW91dCApIHtcbiAgICAgIGNsZWFyVGltZW91dCggdGltZW91dCApO1xuICAgIH1cbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgdGhpc1sgdGltZW91dE5hbWUgXSA9IHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuICAgICAgbWV0aG9kLmFwcGx5KCBfdGhpcywgYXJncyApO1xuICAgICAgZGVsZXRlIF90aGlzWyB0aW1lb3V0TmFtZSBdO1xuICAgIH0sIHRocmVzaG9sZCB8fCAxMDAgKTtcbiAgfTtcbn07XG5cbi8vIC0tLS0tIGRvY1JlYWR5IC0tLS0tIC8vXG5cbnV0aWxzLmRvY1JlYWR5ID0gZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuICB2YXIgcmVhZHlTdGF0ZSA9IGRvY3VtZW50LnJlYWR5U3RhdGU7XG4gIGlmICggcmVhZHlTdGF0ZSA9PSAnY29tcGxldGUnIHx8IHJlYWR5U3RhdGUgPT0gJ2ludGVyYWN0aXZlJyApIHtcbiAgICAvLyBkbyBhc3luYyB0byBhbGxvdyBmb3Igb3RoZXIgc2NyaXB0cyB0byBydW4uIG1ldGFmaXp6eS9mbGlja2l0eSM0NDFcbiAgICBzZXRUaW1lb3V0KCBjYWxsYmFjayApO1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICdET01Db250ZW50TG9hZGVkJywgY2FsbGJhY2sgKTtcbiAgfVxufTtcblxuLy8gLS0tLS0gaHRtbEluaXQgLS0tLS0gLy9cblxuLy8gaHR0cDovL2phbWVzcm9iZXJ0cy5uYW1lL2Jsb2cvMjAxMC8wMi8yMi9zdHJpbmctZnVuY3Rpb25zLWZvci1qYXZhc2NyaXB0LXRyaW0tdG8tY2FtZWwtY2FzZS10by1kYXNoZWQtYW5kLXRvLXVuZGVyc2NvcmUvXG51dGlscy50b0Rhc2hlZCA9IGZ1bmN0aW9uKCBzdHIgKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSggLyguKShbQS1aXSkvZywgZnVuY3Rpb24oIG1hdGNoLCAkMSwgJDIgKSB7XG4gICAgcmV0dXJuICQxICsgJy0nICsgJDI7XG4gIH0pLnRvTG93ZXJDYXNlKCk7XG59O1xuXG52YXIgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlO1xuLyoqXG4gKiBhbGxvdyB1c2VyIHRvIGluaXRpYWxpemUgY2xhc3NlcyB2aWEgW2RhdGEtbmFtZXNwYWNlXSBvciAuanMtbmFtZXNwYWNlIGNsYXNzXG4gKiBodG1sSW5pdCggV2lkZ2V0LCAnd2lkZ2V0TmFtZScgKVxuICogb3B0aW9ucyBhcmUgcGFyc2VkIGZyb20gZGF0YS1uYW1lc3BhY2Utb3B0aW9uc1xuICovXG51dGlscy5odG1sSW5pdCA9IGZ1bmN0aW9uKCBXaWRnZXRDbGFzcywgbmFtZXNwYWNlICkge1xuICB1dGlscy5kb2NSZWFkeSggZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRhc2hlZE5hbWVzcGFjZSA9IHV0aWxzLnRvRGFzaGVkKCBuYW1lc3BhY2UgKTtcbiAgICB2YXIgZGF0YUF0dHIgPSAnZGF0YS0nICsgZGFzaGVkTmFtZXNwYWNlO1xuICAgIHZhciBkYXRhQXR0ckVsZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCggJ1snICsgZGF0YUF0dHIgKyAnXScgKTtcbiAgICB2YXIganNEYXNoRWxlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCAnLmpzLScgKyBkYXNoZWROYW1lc3BhY2UgKTtcbiAgICB2YXIgZWxlbXMgPSB1dGlscy5tYWtlQXJyYXkoIGRhdGFBdHRyRWxlbXMgKVxuICAgICAgLmNvbmNhdCggdXRpbHMubWFrZUFycmF5KCBqc0Rhc2hFbGVtcyApICk7XG4gICAgdmFyIGRhdGFPcHRpb25zQXR0ciA9IGRhdGFBdHRyICsgJy1vcHRpb25zJztcbiAgICB2YXIgalF1ZXJ5ID0gd2luZG93LmpRdWVyeTtcblxuICAgIGVsZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBlbGVtICkge1xuICAgICAgdmFyIGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZSggZGF0YUF0dHIgKSB8fFxuICAgICAgICBlbGVtLmdldEF0dHJpYnV0ZSggZGF0YU9wdGlvbnNBdHRyICk7XG4gICAgICB2YXIgb3B0aW9ucztcbiAgICAgIHRyeSB7XG4gICAgICAgIG9wdGlvbnMgPSBhdHRyICYmIEpTT04ucGFyc2UoIGF0dHIgKTtcbiAgICAgIH0gY2F0Y2ggKCBlcnJvciApIHtcbiAgICAgICAgLy8gbG9nIGVycm9yLCBkbyBub3QgaW5pdGlhbGl6ZVxuICAgICAgICBpZiAoIGNvbnNvbGUgKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvciggJ0Vycm9yIHBhcnNpbmcgJyArIGRhdGFBdHRyICsgJyBvbiAnICsgZWxlbS5jbGFzc05hbWUgK1xuICAgICAgICAgICc6ICcgKyBlcnJvciApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIGluaXRpYWxpemVcbiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBXaWRnZXRDbGFzcyggZWxlbSwgb3B0aW9ucyApO1xuICAgICAgLy8gbWFrZSBhdmFpbGFibGUgdmlhICQoKS5kYXRhKCduYW1lc3BhY2UnKVxuICAgICAgaWYgKCBqUXVlcnkgKSB7XG4gICAgICAgIGpRdWVyeS5kYXRhKCBlbGVtLCBuYW1lc3BhY2UsIGluc3RhbmNlICk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgfSk7XG59O1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxucmV0dXJuIHV0aWxzO1xuXG59KSk7XG5cbi8qKlxuICogT3V0bGF5ZXIgSXRlbVxuICovXG5cbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qIGdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTUQgLSBSZXF1aXJlSlNcbiAgICBkZWZpbmUoICdvdXRsYXllci9pdGVtJyxbXG4gICAgICAgICdldi1lbWl0dGVyL2V2LWVtaXR0ZXInLFxuICAgICAgICAnZ2V0LXNpemUvZ2V0LXNpemUnXG4gICAgICBdLFxuICAgICAgZmFjdG9yeVxuICAgICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlMgLSBCcm93c2VyaWZ5LCBXZWJwYWNrXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgcmVxdWlyZSgnZXYtZW1pdHRlcicpLFxuICAgICAgcmVxdWlyZSgnZ2V0LXNpemUnKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICB3aW5kb3cuT3V0bGF5ZXIgPSB7fTtcbiAgICB3aW5kb3cuT3V0bGF5ZXIuSXRlbSA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3cuRXZFbWl0dGVyLFxuICAgICAgd2luZG93LmdldFNpemVcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggRXZFbWl0dGVyLCBnZXRTaXplICkge1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLSBoZWxwZXJzIC0tLS0tIC8vXG5cbmZ1bmN0aW9uIGlzRW1wdHlPYmooIG9iaiApIHtcbiAgZm9yICggdmFyIHByb3AgaW4gb2JqICkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBwcm9wID0gbnVsbDtcbiAgcmV0dXJuIHRydWU7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIENTUzMgc3VwcG9ydCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG5cbnZhciBkb2NFbGVtU3R5bGUgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGU7XG5cbnZhciB0cmFuc2l0aW9uUHJvcGVydHkgPSB0eXBlb2YgZG9jRWxlbVN0eWxlLnRyYW5zaXRpb24gPT0gJ3N0cmluZycgP1xuICAndHJhbnNpdGlvbicgOiAnV2Via2l0VHJhbnNpdGlvbic7XG52YXIgdHJhbnNmb3JtUHJvcGVydHkgPSB0eXBlb2YgZG9jRWxlbVN0eWxlLnRyYW5zZm9ybSA9PSAnc3RyaW5nJyA/XG4gICd0cmFuc2Zvcm0nIDogJ1dlYmtpdFRyYW5zZm9ybSc7XG5cbnZhciB0cmFuc2l0aW9uRW5kRXZlbnQgPSB7XG4gIFdlYmtpdFRyYW5zaXRpb246ICd3ZWJraXRUcmFuc2l0aW9uRW5kJyxcbiAgdHJhbnNpdGlvbjogJ3RyYW5zaXRpb25lbmQnXG59WyB0cmFuc2l0aW9uUHJvcGVydHkgXTtcblxuLy8gY2FjaGUgYWxsIHZlbmRvciBwcm9wZXJ0aWVzIHRoYXQgY291bGQgaGF2ZSB2ZW5kb3IgcHJlZml4XG52YXIgdmVuZG9yUHJvcGVydGllcyA9IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2Zvcm1Qcm9wZXJ0eSxcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvblByb3BlcnR5LFxuICB0cmFuc2l0aW9uRHVyYXRpb246IHRyYW5zaXRpb25Qcm9wZXJ0eSArICdEdXJhdGlvbicsXG4gIHRyYW5zaXRpb25Qcm9wZXJ0eTogdHJhbnNpdGlvblByb3BlcnR5ICsgJ1Byb3BlcnR5JyxcbiAgdHJhbnNpdGlvbkRlbGF5OiB0cmFuc2l0aW9uUHJvcGVydHkgKyAnRGVsYXknXG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBJdGVtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbmZ1bmN0aW9uIEl0ZW0oIGVsZW1lbnQsIGxheW91dCApIHtcbiAgaWYgKCAhZWxlbWVudCApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAvLyBwYXJlbnQgbGF5b3V0IGNsYXNzLCBpLmUuIE1hc29ucnksIElzb3RvcGUsIG9yIFBhY2tlcnlcbiAgdGhpcy5sYXlvdXQgPSBsYXlvdXQ7XG4gIHRoaXMucG9zaXRpb24gPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG5cbiAgdGhpcy5fY3JlYXRlKCk7XG59XG5cbi8vIGluaGVyaXQgRXZFbWl0dGVyXG52YXIgcHJvdG8gPSBJdGVtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoIEV2RW1pdHRlci5wcm90b3R5cGUgKTtcbnByb3RvLmNvbnN0cnVjdG9yID0gSXRlbTtcblxucHJvdG8uX2NyZWF0ZSA9IGZ1bmN0aW9uKCkge1xuICAvLyB0cmFuc2l0aW9uIG9iamVjdHNcbiAgdGhpcy5fdHJhbnNuID0ge1xuICAgIGluZ1Byb3BlcnRpZXM6IHt9LFxuICAgIGNsZWFuOiB7fSxcbiAgICBvbkVuZDoge31cbiAgfTtcblxuICB0aGlzLmNzcyh7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZSdcbiAgfSk7XG59O1xuXG4vLyB0cmlnZ2VyIHNwZWNpZmllZCBoYW5kbGVyIGZvciBldmVudCB0eXBlXG5wcm90by5oYW5kbGVFdmVudCA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgdmFyIG1ldGhvZCA9ICdvbicgKyBldmVudC50eXBlO1xuICBpZiAoIHRoaXNbIG1ldGhvZCBdICkge1xuICAgIHRoaXNbIG1ldGhvZCBdKCBldmVudCApO1xuICB9XG59O1xuXG5wcm90by5nZXRTaXplID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2l6ZSA9IGdldFNpemUoIHRoaXMuZWxlbWVudCApO1xufTtcblxuLyoqXG4gKiBhcHBseSBDU1Mgc3R5bGVzIHRvIGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVxuICovXG5wcm90by5jc3MgPSBmdW5jdGlvbiggc3R5bGUgKSB7XG4gIHZhciBlbGVtU3R5bGUgPSB0aGlzLmVsZW1lbnQuc3R5bGU7XG5cbiAgZm9yICggdmFyIHByb3AgaW4gc3R5bGUgKSB7XG4gICAgLy8gdXNlIHZlbmRvciBwcm9wZXJ0eSBpZiBhdmFpbGFibGVcbiAgICB2YXIgc3VwcG9ydGVkUHJvcCA9IHZlbmRvclByb3BlcnRpZXNbIHByb3AgXSB8fCBwcm9wO1xuICAgIGVsZW1TdHlsZVsgc3VwcG9ydGVkUHJvcCBdID0gc3R5bGVbIHByb3AgXTtcbiAgfVxufTtcblxuIC8vIG1lYXN1cmUgcG9zaXRpb24sIGFuZCBzZXRzIGl0XG5wcm90by5nZXRQb3NpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICB2YXIgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKCB0aGlzLmVsZW1lbnQgKTtcbiAgdmFyIGlzT3JpZ2luTGVmdCA9IHRoaXMubGF5b3V0Ll9nZXRPcHRpb24oJ29yaWdpbkxlZnQnKTtcbiAgdmFyIGlzT3JpZ2luVG9wID0gdGhpcy5sYXlvdXQuX2dldE9wdGlvbignb3JpZ2luVG9wJyk7XG4gIHZhciB4VmFsdWUgPSBzdHlsZVsgaXNPcmlnaW5MZWZ0ID8gJ2xlZnQnIDogJ3JpZ2h0JyBdO1xuICB2YXIgeVZhbHVlID0gc3R5bGVbIGlzT3JpZ2luVG9wID8gJ3RvcCcgOiAnYm90dG9tJyBdO1xuICAvLyBjb252ZXJ0IHBlcmNlbnQgdG8gcGl4ZWxzXG4gIHZhciBsYXlvdXRTaXplID0gdGhpcy5sYXlvdXQuc2l6ZTtcbiAgdmFyIHggPSB4VmFsdWUuaW5kZXhPZignJScpICE9IC0xID9cbiAgICAoIHBhcnNlRmxvYXQoIHhWYWx1ZSApIC8gMTAwICkgKiBsYXlvdXRTaXplLndpZHRoIDogcGFyc2VJbnQoIHhWYWx1ZSwgMTAgKTtcbiAgdmFyIHkgPSB5VmFsdWUuaW5kZXhPZignJScpICE9IC0xID9cbiAgICAoIHBhcnNlRmxvYXQoIHlWYWx1ZSApIC8gMTAwICkgKiBsYXlvdXRTaXplLmhlaWdodCA6IHBhcnNlSW50KCB5VmFsdWUsIDEwICk7XG5cbiAgLy8gY2xlYW4gdXAgJ2F1dG8nIG9yIG90aGVyIG5vbi1pbnRlZ2VyIHZhbHVlc1xuICB4ID0gaXNOYU4oIHggKSA/IDAgOiB4O1xuICB5ID0gaXNOYU4oIHkgKSA/IDAgOiB5O1xuICAvLyByZW1vdmUgcGFkZGluZyBmcm9tIG1lYXN1cmVtZW50XG4gIHggLT0gaXNPcmlnaW5MZWZ0ID8gbGF5b3V0U2l6ZS5wYWRkaW5nTGVmdCA6IGxheW91dFNpemUucGFkZGluZ1JpZ2h0O1xuICB5IC09IGlzT3JpZ2luVG9wID8gbGF5b3V0U2l6ZS5wYWRkaW5nVG9wIDogbGF5b3V0U2l6ZS5wYWRkaW5nQm90dG9tO1xuXG4gIHRoaXMucG9zaXRpb24ueCA9IHg7XG4gIHRoaXMucG9zaXRpb24ueSA9IHk7XG59O1xuXG4vLyBzZXQgc2V0dGxlZCBwb3NpdGlvbiwgYXBwbHkgcGFkZGluZ1xucHJvdG8ubGF5b3V0UG9zaXRpb24gPSBmdW5jdGlvbigpIHtcbiAgdmFyIGxheW91dFNpemUgPSB0aGlzLmxheW91dC5zaXplO1xuICB2YXIgc3R5bGUgPSB7fTtcbiAgdmFyIGlzT3JpZ2luTGVmdCA9IHRoaXMubGF5b3V0Ll9nZXRPcHRpb24oJ29yaWdpbkxlZnQnKTtcbiAgdmFyIGlzT3JpZ2luVG9wID0gdGhpcy5sYXlvdXQuX2dldE9wdGlvbignb3JpZ2luVG9wJyk7XG5cbiAgLy8geFxuICB2YXIgeFBhZGRpbmcgPSBpc09yaWdpbkxlZnQgPyAncGFkZGluZ0xlZnQnIDogJ3BhZGRpbmdSaWdodCc7XG4gIHZhciB4UHJvcGVydHkgPSBpc09yaWdpbkxlZnQgPyAnbGVmdCcgOiAncmlnaHQnO1xuICB2YXIgeFJlc2V0UHJvcGVydHkgPSBpc09yaWdpbkxlZnQgPyAncmlnaHQnIDogJ2xlZnQnO1xuXG4gIHZhciB4ID0gdGhpcy5wb3NpdGlvbi54ICsgbGF5b3V0U2l6ZVsgeFBhZGRpbmcgXTtcbiAgLy8gc2V0IGluIHBlcmNlbnRhZ2Ugb3IgcGl4ZWxzXG4gIHN0eWxlWyB4UHJvcGVydHkgXSA9IHRoaXMuZ2V0WFZhbHVlKCB4ICk7XG4gIC8vIHJlc2V0IG90aGVyIHByb3BlcnR5XG4gIHN0eWxlWyB4UmVzZXRQcm9wZXJ0eSBdID0gJyc7XG5cbiAgLy8geVxuICB2YXIgeVBhZGRpbmcgPSBpc09yaWdpblRvcCA/ICdwYWRkaW5nVG9wJyA6ICdwYWRkaW5nQm90dG9tJztcbiAgdmFyIHlQcm9wZXJ0eSA9IGlzT3JpZ2luVG9wID8gJ3RvcCcgOiAnYm90dG9tJztcbiAgdmFyIHlSZXNldFByb3BlcnR5ID0gaXNPcmlnaW5Ub3AgPyAnYm90dG9tJyA6ICd0b3AnO1xuXG4gIHZhciB5ID0gdGhpcy5wb3NpdGlvbi55ICsgbGF5b3V0U2l6ZVsgeVBhZGRpbmcgXTtcbiAgLy8gc2V0IGluIHBlcmNlbnRhZ2Ugb3IgcGl4ZWxzXG4gIHN0eWxlWyB5UHJvcGVydHkgXSA9IHRoaXMuZ2V0WVZhbHVlKCB5ICk7XG4gIC8vIHJlc2V0IG90aGVyIHByb3BlcnR5XG4gIHN0eWxlWyB5UmVzZXRQcm9wZXJ0eSBdID0gJyc7XG5cbiAgdGhpcy5jc3MoIHN0eWxlICk7XG4gIHRoaXMuZW1pdEV2ZW50KCAnbGF5b3V0JywgWyB0aGlzIF0gKTtcbn07XG5cbnByb3RvLmdldFhWYWx1ZSA9IGZ1bmN0aW9uKCB4ICkge1xuICB2YXIgaXNIb3Jpem9udGFsID0gdGhpcy5sYXlvdXQuX2dldE9wdGlvbignaG9yaXpvbnRhbCcpO1xuICByZXR1cm4gdGhpcy5sYXlvdXQub3B0aW9ucy5wZXJjZW50UG9zaXRpb24gJiYgIWlzSG9yaXpvbnRhbCA/XG4gICAgKCAoIHggLyB0aGlzLmxheW91dC5zaXplLndpZHRoICkgKiAxMDAgKSArICclJyA6IHggKyAncHgnO1xufTtcblxucHJvdG8uZ2V0WVZhbHVlID0gZnVuY3Rpb24oIHkgKSB7XG4gIHZhciBpc0hvcml6b250YWwgPSB0aGlzLmxheW91dC5fZ2V0T3B0aW9uKCdob3Jpem9udGFsJyk7XG4gIHJldHVybiB0aGlzLmxheW91dC5vcHRpb25zLnBlcmNlbnRQb3NpdGlvbiAmJiBpc0hvcml6b250YWwgP1xuICAgICggKCB5IC8gdGhpcy5sYXlvdXQuc2l6ZS5oZWlnaHQgKSAqIDEwMCApICsgJyUnIDogeSArICdweCc7XG59O1xuXG5wcm90by5fdHJhbnNpdGlvblRvID0gZnVuY3Rpb24oIHgsIHkgKSB7XG4gIHRoaXMuZ2V0UG9zaXRpb24oKTtcbiAgLy8gZ2V0IGN1cnJlbnQgeCAmIHkgZnJvbSB0b3AvbGVmdFxuICB2YXIgY3VyWCA9IHRoaXMucG9zaXRpb24ueDtcbiAgdmFyIGN1clkgPSB0aGlzLnBvc2l0aW9uLnk7XG5cbiAgdmFyIGNvbXBhcmVYID0gcGFyc2VJbnQoIHgsIDEwICk7XG4gIHZhciBjb21wYXJlWSA9IHBhcnNlSW50KCB5LCAxMCApO1xuICB2YXIgZGlkTm90TW92ZSA9IGNvbXBhcmVYID09PSB0aGlzLnBvc2l0aW9uLnggJiYgY29tcGFyZVkgPT09IHRoaXMucG9zaXRpb24ueTtcblxuICAvLyBzYXZlIGVuZCBwb3NpdGlvblxuICB0aGlzLnNldFBvc2l0aW9uKCB4LCB5ICk7XG5cbiAgLy8gaWYgZGlkIG5vdCBtb3ZlIGFuZCBub3QgdHJhbnNpdGlvbmluZywganVzdCBnbyB0byBsYXlvdXRcbiAgaWYgKCBkaWROb3RNb3ZlICYmICF0aGlzLmlzVHJhbnNpdGlvbmluZyApIHtcbiAgICB0aGlzLmxheW91dFBvc2l0aW9uKCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHRyYW5zWCA9IHggLSBjdXJYO1xuICB2YXIgdHJhbnNZID0geSAtIGN1clk7XG4gIHZhciB0cmFuc2l0aW9uU3R5bGUgPSB7fTtcbiAgdHJhbnNpdGlvblN0eWxlLnRyYW5zZm9ybSA9IHRoaXMuZ2V0VHJhbnNsYXRlKCB0cmFuc1gsIHRyYW5zWSApO1xuXG4gIHRoaXMudHJhbnNpdGlvbih7XG4gICAgdG86IHRyYW5zaXRpb25TdHlsZSxcbiAgICBvblRyYW5zaXRpb25FbmQ6IHtcbiAgICAgIHRyYW5zZm9ybTogdGhpcy5sYXlvdXRQb3NpdGlvblxuICAgIH0sXG4gICAgaXNDbGVhbmluZzogdHJ1ZVxuICB9KTtcbn07XG5cbnByb3RvLmdldFRyYW5zbGF0ZSA9IGZ1bmN0aW9uKCB4LCB5ICkge1xuICAvLyBmbGlwIGNvb3JpZGluYXRlcyBpZiBvcmlnaW4gb24gcmlnaHQgb3IgYm90dG9tXG4gIHZhciBpc09yaWdpbkxlZnQgPSB0aGlzLmxheW91dC5fZ2V0T3B0aW9uKCdvcmlnaW5MZWZ0Jyk7XG4gIHZhciBpc09yaWdpblRvcCA9IHRoaXMubGF5b3V0Ll9nZXRPcHRpb24oJ29yaWdpblRvcCcpO1xuICB4ID0gaXNPcmlnaW5MZWZ0ID8geCA6IC14O1xuICB5ID0gaXNPcmlnaW5Ub3AgPyB5IDogLXk7XG4gIHJldHVybiAndHJhbnNsYXRlM2QoJyArIHggKyAncHgsICcgKyB5ICsgJ3B4LCAwKSc7XG59O1xuXG4vLyBub24gdHJhbnNpdGlvbiArIHRyYW5zZm9ybSBzdXBwb3J0XG5wcm90by5nb1RvID0gZnVuY3Rpb24oIHgsIHkgKSB7XG4gIHRoaXMuc2V0UG9zaXRpb24oIHgsIHkgKTtcbiAgdGhpcy5sYXlvdXRQb3NpdGlvbigpO1xufTtcblxucHJvdG8ubW92ZVRvID0gcHJvdG8uX3RyYW5zaXRpb25UbztcblxucHJvdG8uc2V0UG9zaXRpb24gPSBmdW5jdGlvbiggeCwgeSApIHtcbiAgdGhpcy5wb3NpdGlvbi54ID0gcGFyc2VJbnQoIHgsIDEwICk7XG4gIHRoaXMucG9zaXRpb24ueSA9IHBhcnNlSW50KCB5LCAxMCApO1xufTtcblxuLy8gLS0tLS0gdHJhbnNpdGlvbiAtLS0tLSAvL1xuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZSAtIENTU1xuICogQHBhcmFtIHtGdW5jdGlvbn0gb25UcmFuc2l0aW9uRW5kXG4gKi9cblxuLy8gbm9uIHRyYW5zaXRpb24sIGp1c3QgdHJpZ2dlciBjYWxsYmFja1xucHJvdG8uX25vblRyYW5zaXRpb24gPSBmdW5jdGlvbiggYXJncyApIHtcbiAgdGhpcy5jc3MoIGFyZ3MudG8gKTtcbiAgaWYgKCBhcmdzLmlzQ2xlYW5pbmcgKSB7XG4gICAgdGhpcy5fcmVtb3ZlU3R5bGVzKCBhcmdzLnRvICk7XG4gIH1cbiAgZm9yICggdmFyIHByb3AgaW4gYXJncy5vblRyYW5zaXRpb25FbmQgKSB7XG4gICAgYXJncy5vblRyYW5zaXRpb25FbmRbIHByb3AgXS5jYWxsKCB0aGlzICk7XG4gIH1cbn07XG5cbi8qKlxuICogcHJvcGVyIHRyYW5zaXRpb25cbiAqIEBwYXJhbSB7T2JqZWN0fSBhcmdzIC0gYXJndW1lbnRzXG4gKiAgIEBwYXJhbSB7T2JqZWN0fSB0byAtIHN0eWxlIHRvIHRyYW5zaXRpb24gdG9cbiAqICAgQHBhcmFtIHtPYmplY3R9IGZyb20gLSBzdHlsZSB0byBzdGFydCB0cmFuc2l0aW9uIGZyb21cbiAqICAgQHBhcmFtIHtCb29sZWFufSBpc0NsZWFuaW5nIC0gcmVtb3ZlcyB0cmFuc2l0aW9uIHN0eWxlcyBhZnRlciB0cmFuc2l0aW9uXG4gKiAgIEBwYXJhbSB7RnVuY3Rpb259IG9uVHJhbnNpdGlvbkVuZCAtIGNhbGxiYWNrXG4gKi9cbnByb3RvLnRyYW5zaXRpb24gPSBmdW5jdGlvbiggYXJncyApIHtcbiAgLy8gcmVkaXJlY3QgdG8gbm9uVHJhbnNpdGlvbiBpZiBubyB0cmFuc2l0aW9uIGR1cmF0aW9uXG4gIGlmICggIXBhcnNlRmxvYXQoIHRoaXMubGF5b3V0Lm9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uICkgKSB7XG4gICAgdGhpcy5fbm9uVHJhbnNpdGlvbiggYXJncyApO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBfdHJhbnNpdGlvbiA9IHRoaXMuX3RyYW5zbjtcbiAgLy8ga2VlcCB0cmFjayBvZiBvblRyYW5zaXRpb25FbmQgY2FsbGJhY2sgYnkgY3NzIHByb3BlcnR5XG4gIGZvciAoIHZhciBwcm9wIGluIGFyZ3Mub25UcmFuc2l0aW9uRW5kICkge1xuICAgIF90cmFuc2l0aW9uLm9uRW5kWyBwcm9wIF0gPSBhcmdzLm9uVHJhbnNpdGlvbkVuZFsgcHJvcCBdO1xuICB9XG4gIC8vIGtlZXAgdHJhY2sgb2YgcHJvcGVydGllcyB0aGF0IGFyZSB0cmFuc2l0aW9uaW5nXG4gIGZvciAoIHByb3AgaW4gYXJncy50byApIHtcbiAgICBfdHJhbnNpdGlvbi5pbmdQcm9wZXJ0aWVzWyBwcm9wIF0gPSB0cnVlO1xuICAgIC8vIGtlZXAgdHJhY2sgb2YgcHJvcGVydGllcyB0byBjbGVhbiB1cCB3aGVuIHRyYW5zaXRpb24gaXMgZG9uZVxuICAgIGlmICggYXJncy5pc0NsZWFuaW5nICkge1xuICAgICAgX3RyYW5zaXRpb24uY2xlYW5bIHByb3AgXSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgLy8gc2V0IGZyb20gc3R5bGVzXG4gIGlmICggYXJncy5mcm9tICkge1xuICAgIHRoaXMuY3NzKCBhcmdzLmZyb20gKTtcbiAgICAvLyBmb3JjZSByZWRyYXcuIGh0dHA6Ly9ibG9nLmFsZXhtYWNjYXcuY29tL2Nzcy10cmFuc2l0aW9uc1xuICAgIHZhciBoID0gdGhpcy5lbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgICAvLyBoYWNrIGZvciBKU0hpbnQgdG8gaHVzaCBhYm91dCB1bnVzZWQgdmFyXG4gICAgaCA9IG51bGw7XG4gIH1cbiAgLy8gZW5hYmxlIHRyYW5zaXRpb25cbiAgdGhpcy5lbmFibGVUcmFuc2l0aW9uKCBhcmdzLnRvICk7XG4gIC8vIHNldCBzdHlsZXMgdGhhdCBhcmUgdHJhbnNpdGlvbmluZ1xuICB0aGlzLmNzcyggYXJncy50byApO1xuXG4gIHRoaXMuaXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTtcblxufTtcblxuLy8gZGFzaCBiZWZvcmUgYWxsIGNhcCBsZXR0ZXJzLCBpbmNsdWRpbmcgZmlyc3QgZm9yXG4vLyBXZWJraXRUcmFuc2Zvcm0gPT4gLXdlYmtpdC10cmFuc2Zvcm1cbmZ1bmN0aW9uIHRvRGFzaGVkQWxsKCBzdHIgKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSggLyhbQS1aXSkvZywgZnVuY3Rpb24oICQxICkge1xuICAgIHJldHVybiAnLScgKyAkMS50b0xvd2VyQ2FzZSgpO1xuICB9KTtcbn1cblxudmFyIHRyYW5zaXRpb25Qcm9wcyA9ICdvcGFjaXR5LCcgKyB0b0Rhc2hlZEFsbCggdHJhbnNmb3JtUHJvcGVydHkgKTtcblxucHJvdG8uZW5hYmxlVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKC8qIHN0eWxlICovKSB7XG4gIC8vIEhBQ0sgY2hhbmdpbmcgdHJhbnNpdGlvblByb3BlcnR5IGR1cmluZyBhIHRyYW5zaXRpb25cbiAgLy8gd2lsbCBjYXVzZSB0cmFuc2l0aW9uIHRvIGp1bXBcbiAgaWYgKCB0aGlzLmlzVHJhbnNpdGlvbmluZyApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBtYWtlIGB0cmFuc2l0aW9uOiBmb28sIGJhciwgYmF6YCBmcm9tIHN0eWxlIG9iamVjdFxuICAvLyBIQUNLIHVuLWNvbW1lbnQgdGhpcyB3aGVuIGVuYWJsZVRyYW5zaXRpb24gY2FuIHdvcmtcbiAgLy8gd2hpbGUgYSB0cmFuc2l0aW9uIGlzIGhhcHBlbmluZ1xuICAvLyB2YXIgdHJhbnNpdGlvblZhbHVlcyA9IFtdO1xuICAvLyBmb3IgKCB2YXIgcHJvcCBpbiBzdHlsZSApIHtcbiAgLy8gICAvLyBkYXNoLWlmeSBjYW1lbENhc2VkIHByb3BlcnRpZXMgbGlrZSBXZWJraXRUcmFuc2l0aW9uXG4gIC8vICAgcHJvcCA9IHZlbmRvclByb3BlcnRpZXNbIHByb3AgXSB8fCBwcm9wO1xuICAvLyAgIHRyYW5zaXRpb25WYWx1ZXMucHVzaCggdG9EYXNoZWRBbGwoIHByb3AgKSApO1xuICAvLyB9XG4gIC8vIG11bmdlIG51bWJlciB0byBtaWxsaXNlY29uZCwgdG8gbWF0Y2ggc3RhZ2dlclxuICB2YXIgZHVyYXRpb24gPSB0aGlzLmxheW91dC5vcHRpb25zLnRyYW5zaXRpb25EdXJhdGlvbjtcbiAgZHVyYXRpb24gPSB0eXBlb2YgZHVyYXRpb24gPT0gJ251bWJlcicgPyBkdXJhdGlvbiArICdtcycgOiBkdXJhdGlvbjtcbiAgLy8gZW5hYmxlIHRyYW5zaXRpb24gc3R5bGVzXG4gIHRoaXMuY3NzKHtcbiAgICB0cmFuc2l0aW9uUHJvcGVydHk6IHRyYW5zaXRpb25Qcm9wcyxcbiAgICB0cmFuc2l0aW9uRHVyYXRpb246IGR1cmF0aW9uLFxuICAgIHRyYW5zaXRpb25EZWxheTogdGhpcy5zdGFnZ2VyRGVsYXkgfHwgMFxuICB9KTtcbiAgLy8gbGlzdGVuIGZvciB0cmFuc2l0aW9uIGVuZCBldmVudFxuICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggdHJhbnNpdGlvbkVuZEV2ZW50LCB0aGlzLCBmYWxzZSApO1xufTtcblxuLy8gLS0tLS0gZXZlbnRzIC0tLS0tIC8vXG5cbnByb3RvLm9ud2Via2l0VHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgdGhpcy5vbnRyYW5zaXRpb25lbmQoIGV2ZW50ICk7XG59O1xuXG5wcm90by5vbm90cmFuc2l0aW9uZW5kID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB0aGlzLm9udHJhbnNpdGlvbmVuZCggZXZlbnQgKTtcbn07XG5cbi8vIHByb3BlcnRpZXMgdGhhdCBJIG11bmdlIHRvIG1ha2UgbXkgbGlmZSBlYXNpZXJcbnZhciBkYXNoZWRWZW5kb3JQcm9wZXJ0aWVzID0ge1xuICAnLXdlYmtpdC10cmFuc2Zvcm0nOiAndHJhbnNmb3JtJ1xufTtcblxucHJvdG8ub250cmFuc2l0aW9uZW5kID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICAvLyBkaXNyZWdhcmQgYnViYmxlZCBldmVudHMgZnJvbSBjaGlsZHJlblxuICBpZiAoIGV2ZW50LnRhcmdldCAhPT0gdGhpcy5lbGVtZW50ICkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgX3RyYW5zaXRpb24gPSB0aGlzLl90cmFuc247XG4gIC8vIGdldCBwcm9wZXJ0eSBuYW1lIG9mIHRyYW5zaXRpb25lZCBwcm9wZXJ0eSwgY29udmVydCB0byBwcmVmaXgtZnJlZVxuICB2YXIgcHJvcGVydHlOYW1lID0gZGFzaGVkVmVuZG9yUHJvcGVydGllc1sgZXZlbnQucHJvcGVydHlOYW1lIF0gfHwgZXZlbnQucHJvcGVydHlOYW1lO1xuXG4gIC8vIHJlbW92ZSBwcm9wZXJ0eSB0aGF0IGhhcyBjb21wbGV0ZWQgdHJhbnNpdGlvbmluZ1xuICBkZWxldGUgX3RyYW5zaXRpb24uaW5nUHJvcGVydGllc1sgcHJvcGVydHlOYW1lIF07XG4gIC8vIGNoZWNrIGlmIGFueSBwcm9wZXJ0aWVzIGFyZSBzdGlsbCB0cmFuc2l0aW9uaW5nXG4gIGlmICggaXNFbXB0eU9iaiggX3RyYW5zaXRpb24uaW5nUHJvcGVydGllcyApICkge1xuICAgIC8vIGFsbCBwcm9wZXJ0aWVzIGhhdmUgY29tcGxldGVkIHRyYW5zaXRpb25pbmdcbiAgICB0aGlzLmRpc2FibGVUcmFuc2l0aW9uKCk7XG4gIH1cbiAgLy8gY2xlYW4gc3R5bGVcbiAgaWYgKCBwcm9wZXJ0eU5hbWUgaW4gX3RyYW5zaXRpb24uY2xlYW4gKSB7XG4gICAgLy8gY2xlYW4gdXAgc3R5bGVcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGVbIGV2ZW50LnByb3BlcnR5TmFtZSBdID0gJyc7XG4gICAgZGVsZXRlIF90cmFuc2l0aW9uLmNsZWFuWyBwcm9wZXJ0eU5hbWUgXTtcbiAgfVxuICAvLyB0cmlnZ2VyIG9uVHJhbnNpdGlvbkVuZCBjYWxsYmFja1xuICBpZiAoIHByb3BlcnR5TmFtZSBpbiBfdHJhbnNpdGlvbi5vbkVuZCApIHtcbiAgICB2YXIgb25UcmFuc2l0aW9uRW5kID0gX3RyYW5zaXRpb24ub25FbmRbIHByb3BlcnR5TmFtZSBdO1xuICAgIG9uVHJhbnNpdGlvbkVuZC5jYWxsKCB0aGlzICk7XG4gICAgZGVsZXRlIF90cmFuc2l0aW9uLm9uRW5kWyBwcm9wZXJ0eU5hbWUgXTtcbiAgfVxuXG4gIHRoaXMuZW1pdEV2ZW50KCAndHJhbnNpdGlvbkVuZCcsIFsgdGhpcyBdICk7XG59O1xuXG5wcm90by5kaXNhYmxlVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJlbW92ZVRyYW5zaXRpb25TdHlsZXMoKTtcbiAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIHRyYW5zaXRpb25FbmRFdmVudCwgdGhpcywgZmFsc2UgKTtcbiAgdGhpcy5pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTtcbn07XG5cbi8qKlxuICogcmVtb3ZlcyBzdHlsZSBwcm9wZXJ0eSBmcm9tIGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVxuKiovXG5wcm90by5fcmVtb3ZlU3R5bGVzID0gZnVuY3Rpb24oIHN0eWxlICkge1xuICAvLyBjbGVhbiB1cCB0cmFuc2l0aW9uIHN0eWxlc1xuICB2YXIgY2xlYW5TdHlsZSA9IHt9O1xuICBmb3IgKCB2YXIgcHJvcCBpbiBzdHlsZSApIHtcbiAgICBjbGVhblN0eWxlWyBwcm9wIF0gPSAnJztcbiAgfVxuICB0aGlzLmNzcyggY2xlYW5TdHlsZSApO1xufTtcblxudmFyIGNsZWFuVHJhbnNpdGlvblN0eWxlID0ge1xuICB0cmFuc2l0aW9uUHJvcGVydHk6ICcnLFxuICB0cmFuc2l0aW9uRHVyYXRpb246ICcnLFxuICB0cmFuc2l0aW9uRGVsYXk6ICcnXG59O1xuXG5wcm90by5yZW1vdmVUcmFuc2l0aW9uU3R5bGVzID0gZnVuY3Rpb24oKSB7XG4gIC8vIHJlbW92ZSB0cmFuc2l0aW9uXG4gIHRoaXMuY3NzKCBjbGVhblRyYW5zaXRpb25TdHlsZSApO1xufTtcblxuLy8gLS0tLS0gc3RhZ2dlciAtLS0tLSAvL1xuXG5wcm90by5zdGFnZ2VyID0gZnVuY3Rpb24oIGRlbGF5ICkge1xuICBkZWxheSA9IGlzTmFOKCBkZWxheSApID8gMCA6IGRlbGF5O1xuICB0aGlzLnN0YWdnZXJEZWxheSA9IGRlbGF5ICsgJ21zJztcbn07XG5cbi8vIC0tLS0tIHNob3cvaGlkZS9yZW1vdmUgLS0tLS0gLy9cblxuLy8gcmVtb3ZlIGVsZW1lbnQgZnJvbSBET01cbnByb3RvLnJlbW92ZUVsZW0gPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRoaXMuZWxlbWVudCApO1xuICAvLyByZW1vdmUgZGlzcGxheTogbm9uZVxuICB0aGlzLmNzcyh7IGRpc3BsYXk6ICcnIH0pO1xuICB0aGlzLmVtaXRFdmVudCggJ3JlbW92ZScsIFsgdGhpcyBdICk7XG59O1xuXG5wcm90by5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgLy8ganVzdCByZW1vdmUgZWxlbWVudCBpZiBubyB0cmFuc2l0aW9uIHN1cHBvcnQgb3Igbm8gdHJhbnNpdGlvblxuICBpZiAoICF0cmFuc2l0aW9uUHJvcGVydHkgfHwgIXBhcnNlRmxvYXQoIHRoaXMubGF5b3V0Lm9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uICkgKSB7XG4gICAgdGhpcy5yZW1vdmVFbGVtKCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gc3RhcnQgdHJhbnNpdGlvblxuICB0aGlzLm9uY2UoICd0cmFuc2l0aW9uRW5kJywgZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVFbGVtKCk7XG4gIH0pO1xuICB0aGlzLmhpZGUoKTtcbn07XG5cbnByb3RvLnJldmVhbCA9IGZ1bmN0aW9uKCkge1xuICBkZWxldGUgdGhpcy5pc0hpZGRlbjtcbiAgLy8gcmVtb3ZlIGRpc3BsYXk6IG5vbmVcbiAgdGhpcy5jc3MoeyBkaXNwbGF5OiAnJyB9KTtcblxuICB2YXIgb3B0aW9ucyA9IHRoaXMubGF5b3V0Lm9wdGlvbnM7XG5cbiAgdmFyIG9uVHJhbnNpdGlvbkVuZCA9IHt9O1xuICB2YXIgdHJhbnNpdGlvbkVuZFByb3BlcnR5ID0gdGhpcy5nZXRIaWRlUmV2ZWFsVHJhbnNpdGlvbkVuZFByb3BlcnR5KCd2aXNpYmxlU3R5bGUnKTtcbiAgb25UcmFuc2l0aW9uRW5kWyB0cmFuc2l0aW9uRW5kUHJvcGVydHkgXSA9IHRoaXMub25SZXZlYWxUcmFuc2l0aW9uRW5kO1xuXG4gIHRoaXMudHJhbnNpdGlvbih7XG4gICAgZnJvbTogb3B0aW9ucy5oaWRkZW5TdHlsZSxcbiAgICB0bzogb3B0aW9ucy52aXNpYmxlU3R5bGUsXG4gICAgaXNDbGVhbmluZzogdHJ1ZSxcbiAgICBvblRyYW5zaXRpb25FbmQ6IG9uVHJhbnNpdGlvbkVuZFxuICB9KTtcbn07XG5cbnByb3RvLm9uUmV2ZWFsVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uKCkge1xuICAvLyBjaGVjayBpZiBzdGlsbCB2aXNpYmxlXG4gIC8vIGR1cmluZyB0cmFuc2l0aW9uLCBpdGVtIG1heSBoYXZlIGJlZW4gaGlkZGVuXG4gIGlmICggIXRoaXMuaXNIaWRkZW4gKSB7XG4gICAgdGhpcy5lbWl0RXZlbnQoJ3JldmVhbCcpO1xuICB9XG59O1xuXG4vKipcbiAqIGdldCBzdHlsZSBwcm9wZXJ0eSB1c2UgZm9yIGhpZGUvcmV2ZWFsIHRyYW5zaXRpb24gZW5kXG4gKiBAcGFyYW0ge1N0cmluZ30gc3R5bGVQcm9wZXJ0eSAtIGhpZGRlblN0eWxlL3Zpc2libGVTdHlsZVxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xucHJvdG8uZ2V0SGlkZVJldmVhbFRyYW5zaXRpb25FbmRQcm9wZXJ0eSA9IGZ1bmN0aW9uKCBzdHlsZVByb3BlcnR5ICkge1xuICB2YXIgb3B0aW9uU3R5bGUgPSB0aGlzLmxheW91dC5vcHRpb25zWyBzdHlsZVByb3BlcnR5IF07XG4gIC8vIHVzZSBvcGFjaXR5XG4gIGlmICggb3B0aW9uU3R5bGUub3BhY2l0eSApIHtcbiAgICByZXR1cm4gJ29wYWNpdHknO1xuICB9XG4gIC8vIGdldCBmaXJzdCBwcm9wZXJ0eVxuICBmb3IgKCB2YXIgcHJvcCBpbiBvcHRpb25TdHlsZSApIHtcbiAgICByZXR1cm4gcHJvcDtcbiAgfVxufTtcblxucHJvdG8uaGlkZSA9IGZ1bmN0aW9uKCkge1xuICAvLyBzZXQgZmxhZ1xuICB0aGlzLmlzSGlkZGVuID0gdHJ1ZTtcbiAgLy8gcmVtb3ZlIGRpc3BsYXk6IG5vbmVcbiAgdGhpcy5jc3MoeyBkaXNwbGF5OiAnJyB9KTtcblxuICB2YXIgb3B0aW9ucyA9IHRoaXMubGF5b3V0Lm9wdGlvbnM7XG5cbiAgdmFyIG9uVHJhbnNpdGlvbkVuZCA9IHt9O1xuICB2YXIgdHJhbnNpdGlvbkVuZFByb3BlcnR5ID0gdGhpcy5nZXRIaWRlUmV2ZWFsVHJhbnNpdGlvbkVuZFByb3BlcnR5KCdoaWRkZW5TdHlsZScpO1xuICBvblRyYW5zaXRpb25FbmRbIHRyYW5zaXRpb25FbmRQcm9wZXJ0eSBdID0gdGhpcy5vbkhpZGVUcmFuc2l0aW9uRW5kO1xuXG4gIHRoaXMudHJhbnNpdGlvbih7XG4gICAgZnJvbTogb3B0aW9ucy52aXNpYmxlU3R5bGUsXG4gICAgdG86IG9wdGlvbnMuaGlkZGVuU3R5bGUsXG4gICAgLy8ga2VlcCBoaWRkZW4gc3R1ZmYgaGlkZGVuXG4gICAgaXNDbGVhbmluZzogdHJ1ZSxcbiAgICBvblRyYW5zaXRpb25FbmQ6IG9uVHJhbnNpdGlvbkVuZFxuICB9KTtcbn07XG5cbnByb3RvLm9uSGlkZVRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbigpIHtcbiAgLy8gY2hlY2sgaWYgc3RpbGwgaGlkZGVuXG4gIC8vIGR1cmluZyB0cmFuc2l0aW9uLCBpdGVtIG1heSBoYXZlIGJlZW4gdW4taGlkZGVuXG4gIGlmICggdGhpcy5pc0hpZGRlbiApIHtcbiAgICB0aGlzLmNzcyh7IGRpc3BsYXk6ICdub25lJyB9KTtcbiAgICB0aGlzLmVtaXRFdmVudCgnaGlkZScpO1xuICB9XG59O1xuXG5wcm90by5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuY3NzKHtcbiAgICBwb3NpdGlvbjogJycsXG4gICAgbGVmdDogJycsXG4gICAgcmlnaHQ6ICcnLFxuICAgIHRvcDogJycsXG4gICAgYm90dG9tOiAnJyxcbiAgICB0cmFuc2l0aW9uOiAnJyxcbiAgICB0cmFuc2Zvcm06ICcnXG4gIH0pO1xufTtcblxucmV0dXJuIEl0ZW07XG5cbn0pKTtcblxuLyohXG4gKiBPdXRsYXllciB2Mi4xLjBcbiAqIHRoZSBicmFpbnMgYW5kIGd1dHMgb2YgYSBsYXlvdXQgbGlicmFyeVxuICogTUlUIGxpY2Vuc2VcbiAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qIGdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTUQgLSBSZXF1aXJlSlNcbiAgICBkZWZpbmUoICdvdXRsYXllci9vdXRsYXllcicsW1xuICAgICAgICAnZXYtZW1pdHRlci9ldi1lbWl0dGVyJyxcbiAgICAgICAgJ2dldC1zaXplL2dldC1zaXplJyxcbiAgICAgICAgJ2Zpenp5LXVpLXV0aWxzL3V0aWxzJyxcbiAgICAgICAgJy4vaXRlbSdcbiAgICAgIF0sXG4gICAgICBmdW5jdGlvbiggRXZFbWl0dGVyLCBnZXRTaXplLCB1dGlscywgSXRlbSApIHtcbiAgICAgICAgcmV0dXJuIGZhY3RvcnkoIHdpbmRvdywgRXZFbWl0dGVyLCBnZXRTaXplLCB1dGlscywgSXRlbSk7XG4gICAgICB9XG4gICAgKTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KUyAtIEJyb3dzZXJpZnksIFdlYnBhY2tcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICByZXF1aXJlKCdldi1lbWl0dGVyJyksXG4gICAgICByZXF1aXJlKCdnZXQtc2l6ZScpLFxuICAgICAgcmVxdWlyZSgnZml6enktdWktdXRpbHMnKSxcbiAgICAgIHJlcXVpcmUoJy4vaXRlbScpXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIHdpbmRvdy5PdXRsYXllciA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICB3aW5kb3cuRXZFbWl0dGVyLFxuICAgICAgd2luZG93LmdldFNpemUsXG4gICAgICB3aW5kb3cuZml6enlVSVV0aWxzLFxuICAgICAgd2luZG93Lk91dGxheWVyLkl0ZW1cbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggd2luZG93LCBFdkVtaXR0ZXIsIGdldFNpemUsIHV0aWxzLCBJdGVtICkge1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLSB2YXJzIC0tLS0tIC8vXG5cbnZhciBjb25zb2xlID0gd2luZG93LmNvbnNvbGU7XG52YXIgalF1ZXJ5ID0gd2luZG93LmpRdWVyeTtcbnZhciBub29wID0gZnVuY3Rpb24oKSB7fTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gT3V0bGF5ZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuLy8gZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXJzXG52YXIgR1VJRCA9IDA7XG4vLyBpbnRlcm5hbCBzdG9yZSBvZiBhbGwgT3V0bGF5ZXIgaW50YW5jZXNcbnZhciBpbnN0YW5jZXMgPSB7fTtcblxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudCwgU3RyaW5nfSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIE91dGxheWVyKCBlbGVtZW50LCBvcHRpb25zICkge1xuICB2YXIgcXVlcnlFbGVtZW50ID0gdXRpbHMuZ2V0UXVlcnlFbGVtZW50KCBlbGVtZW50ICk7XG4gIGlmICggIXF1ZXJ5RWxlbWVudCApIHtcbiAgICBpZiAoIGNvbnNvbGUgKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCAnQmFkIGVsZW1lbnQgZm9yICcgKyB0aGlzLmNvbnN0cnVjdG9yLm5hbWVzcGFjZSArXG4gICAgICAgICc6ICcgKyAoIHF1ZXJ5RWxlbWVudCB8fCBlbGVtZW50ICkgKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMuZWxlbWVudCA9IHF1ZXJ5RWxlbWVudDtcbiAgLy8gYWRkIGpRdWVyeVxuICBpZiAoIGpRdWVyeSApIHtcbiAgICB0aGlzLiRlbGVtZW50ID0galF1ZXJ5KCB0aGlzLmVsZW1lbnQgKTtcbiAgfVxuXG4gIC8vIG9wdGlvbnNcbiAgdGhpcy5vcHRpb25zID0gdXRpbHMuZXh0ZW5kKCB7fSwgdGhpcy5jb25zdHJ1Y3Rvci5kZWZhdWx0cyApO1xuICB0aGlzLm9wdGlvbiggb3B0aW9ucyApO1xuXG4gIC8vIGFkZCBpZCBmb3IgT3V0bGF5ZXIuZ2V0RnJvbUVsZW1lbnRcbiAgdmFyIGlkID0gKytHVUlEO1xuICB0aGlzLmVsZW1lbnQub3V0bGF5ZXJHVUlEID0gaWQ7IC8vIGV4cGFuZG9cbiAgaW5zdGFuY2VzWyBpZCBdID0gdGhpczsgLy8gYXNzb2NpYXRlIHZpYSBpZFxuXG4gIC8vIGtpY2sgaXQgb2ZmXG4gIHRoaXMuX2NyZWF0ZSgpO1xuXG4gIHZhciBpc0luaXRMYXlvdXQgPSB0aGlzLl9nZXRPcHRpb24oJ2luaXRMYXlvdXQnKTtcbiAgaWYgKCBpc0luaXRMYXlvdXQgKSB7XG4gICAgdGhpcy5sYXlvdXQoKTtcbiAgfVxufVxuXG4vLyBzZXR0aW5ncyBhcmUgZm9yIGludGVybmFsIHVzZSBvbmx5XG5PdXRsYXllci5uYW1lc3BhY2UgPSAnb3V0bGF5ZXInO1xuT3V0bGF5ZXIuSXRlbSA9IEl0ZW07XG5cbi8vIGRlZmF1bHQgb3B0aW9uc1xuT3V0bGF5ZXIuZGVmYXVsdHMgPSB7XG4gIGNvbnRhaW5lclN0eWxlOiB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbiAgfSxcbiAgaW5pdExheW91dDogdHJ1ZSxcbiAgb3JpZ2luTGVmdDogdHJ1ZSxcbiAgb3JpZ2luVG9wOiB0cnVlLFxuICByZXNpemU6IHRydWUsXG4gIHJlc2l6ZUNvbnRhaW5lcjogdHJ1ZSxcbiAgLy8gaXRlbSBvcHRpb25zXG4gIHRyYW5zaXRpb25EdXJhdGlvbjogJzAuNHMnLFxuICBoaWRkZW5TdHlsZToge1xuICAgIG9wYWNpdHk6IDAsXG4gICAgdHJhbnNmb3JtOiAnc2NhbGUoMC4wMDEpJ1xuICB9LFxuICB2aXNpYmxlU3R5bGU6IHtcbiAgICBvcGFjaXR5OiAxLFxuICAgIHRyYW5zZm9ybTogJ3NjYWxlKDEpJ1xuICB9XG59O1xuXG52YXIgcHJvdG8gPSBPdXRsYXllci5wcm90b3R5cGU7XG4vLyBpbmhlcml0IEV2RW1pdHRlclxudXRpbHMuZXh0ZW5kKCBwcm90bywgRXZFbWl0dGVyLnByb3RvdHlwZSApO1xuXG4vKipcbiAqIHNldCBvcHRpb25zXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICovXG5wcm90by5vcHRpb24gPSBmdW5jdGlvbiggb3B0cyApIHtcbiAgdXRpbHMuZXh0ZW5kKCB0aGlzLm9wdGlvbnMsIG9wdHMgKTtcbn07XG5cbi8qKlxuICogZ2V0IGJhY2t3YXJkcyBjb21wYXRpYmxlIG9wdGlvbiB2YWx1ZSwgY2hlY2sgb2xkIG5hbWVcbiAqL1xucHJvdG8uX2dldE9wdGlvbiA9IGZ1bmN0aW9uKCBvcHRpb24gKSB7XG4gIHZhciBvbGRPcHRpb24gPSB0aGlzLmNvbnN0cnVjdG9yLmNvbXBhdE9wdGlvbnNbIG9wdGlvbiBdO1xuICByZXR1cm4gb2xkT3B0aW9uICYmIHRoaXMub3B0aW9uc1sgb2xkT3B0aW9uIF0gIT09IHVuZGVmaW5lZCA/XG4gICAgdGhpcy5vcHRpb25zWyBvbGRPcHRpb24gXSA6IHRoaXMub3B0aW9uc1sgb3B0aW9uIF07XG59O1xuXG5PdXRsYXllci5jb21wYXRPcHRpb25zID0ge1xuICAvLyBjdXJyZW50TmFtZTogb2xkTmFtZVxuICBpbml0TGF5b3V0OiAnaXNJbml0TGF5b3V0JyxcbiAgaG9yaXpvbnRhbDogJ2lzSG9yaXpvbnRhbCcsXG4gIGxheW91dEluc3RhbnQ6ICdpc0xheW91dEluc3RhbnQnLFxuICBvcmlnaW5MZWZ0OiAnaXNPcmlnaW5MZWZ0JyxcbiAgb3JpZ2luVG9wOiAnaXNPcmlnaW5Ub3AnLFxuICByZXNpemU6ICdpc1Jlc2l6ZUJvdW5kJyxcbiAgcmVzaXplQ29udGFpbmVyOiAnaXNSZXNpemluZ0NvbnRhaW5lcidcbn07XG5cbnByb3RvLl9jcmVhdGUgPSBmdW5jdGlvbigpIHtcbiAgLy8gZ2V0IGl0ZW1zIGZyb20gY2hpbGRyZW5cbiAgdGhpcy5yZWxvYWRJdGVtcygpO1xuICAvLyBlbGVtZW50cyB0aGF0IGFmZmVjdCBsYXlvdXQsIGJ1dCBhcmUgbm90IGxhaWQgb3V0XG4gIHRoaXMuc3RhbXBzID0gW107XG4gIHRoaXMuc3RhbXAoIHRoaXMub3B0aW9ucy5zdGFtcCApO1xuICAvLyBzZXQgY29udGFpbmVyIHN0eWxlXG4gIHV0aWxzLmV4dGVuZCggdGhpcy5lbGVtZW50LnN0eWxlLCB0aGlzLm9wdGlvbnMuY29udGFpbmVyU3R5bGUgKTtcblxuICAvLyBiaW5kIHJlc2l6ZSBtZXRob2RcbiAgdmFyIGNhbkJpbmRSZXNpemUgPSB0aGlzLl9nZXRPcHRpb24oJ3Jlc2l6ZScpO1xuICBpZiAoIGNhbkJpbmRSZXNpemUgKSB7XG4gICAgdGhpcy5iaW5kUmVzaXplKCk7XG4gIH1cbn07XG5cbi8vIGdvZXMgdGhyb3VnaCBhbGwgY2hpbGRyZW4gYWdhaW4gYW5kIGdldHMgYnJpY2tzIGluIHByb3BlciBvcmRlclxucHJvdG8ucmVsb2FkSXRlbXMgPSBmdW5jdGlvbigpIHtcbiAgLy8gY29sbGVjdGlvbiBvZiBpdGVtIGVsZW1lbnRzXG4gIHRoaXMuaXRlbXMgPSB0aGlzLl9pdGVtaXplKCB0aGlzLmVsZW1lbnQuY2hpbGRyZW4gKTtcbn07XG5cblxuLyoqXG4gKiB0dXJuIGVsZW1lbnRzIGludG8gT3V0bGF5ZXIuSXRlbXMgdG8gYmUgdXNlZCBpbiBsYXlvdXRcbiAqIEBwYXJhbSB7QXJyYXkgb3IgTm9kZUxpc3Qgb3IgSFRNTEVsZW1lbnR9IGVsZW1zXG4gKiBAcmV0dXJucyB7QXJyYXl9IGl0ZW1zIC0gY29sbGVjdGlvbiBvZiBuZXcgT3V0bGF5ZXIgSXRlbXNcbiAqL1xucHJvdG8uX2l0ZW1pemUgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG5cbiAgdmFyIGl0ZW1FbGVtcyA9IHRoaXMuX2ZpbHRlckZpbmRJdGVtRWxlbWVudHMoIGVsZW1zICk7XG4gIHZhciBJdGVtID0gdGhpcy5jb25zdHJ1Y3Rvci5JdGVtO1xuXG4gIC8vIGNyZWF0ZSBuZXcgT3V0bGF5ZXIgSXRlbXMgZm9yIGNvbGxlY3Rpb25cbiAgdmFyIGl0ZW1zID0gW107XG4gIGZvciAoIHZhciBpPTA7IGkgPCBpdGVtRWxlbXMubGVuZ3RoOyBpKysgKSB7XG4gICAgdmFyIGVsZW0gPSBpdGVtRWxlbXNbaV07XG4gICAgdmFyIGl0ZW0gPSBuZXcgSXRlbSggZWxlbSwgdGhpcyApO1xuICAgIGl0ZW1zLnB1c2goIGl0ZW0gKTtcbiAgfVxuXG4gIHJldHVybiBpdGVtcztcbn07XG5cbi8qKlxuICogZ2V0IGl0ZW0gZWxlbWVudHMgdG8gYmUgdXNlZCBpbiBsYXlvdXRcbiAqIEBwYXJhbSB7QXJyYXkgb3IgTm9kZUxpc3Qgb3IgSFRNTEVsZW1lbnR9IGVsZW1zXG4gKiBAcmV0dXJucyB7QXJyYXl9IGl0ZW1zIC0gaXRlbSBlbGVtZW50c1xuICovXG5wcm90by5fZmlsdGVyRmluZEl0ZW1FbGVtZW50cyA9IGZ1bmN0aW9uKCBlbGVtcyApIHtcbiAgcmV0dXJuIHV0aWxzLmZpbHRlckZpbmRFbGVtZW50cyggZWxlbXMsIHRoaXMub3B0aW9ucy5pdGVtU2VsZWN0b3IgKTtcbn07XG5cbi8qKlxuICogZ2V0dGVyIG1ldGhvZCBmb3IgZ2V0dGluZyBpdGVtIGVsZW1lbnRzXG4gKiBAcmV0dXJucyB7QXJyYXl9IGVsZW1zIC0gY29sbGVjdGlvbiBvZiBpdGVtIGVsZW1lbnRzXG4gKi9cbnByb3RvLmdldEl0ZW1FbGVtZW50cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5pdGVtcy5tYXAoIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgIHJldHVybiBpdGVtLmVsZW1lbnQ7XG4gIH0pO1xufTtcblxuLy8gLS0tLS0gaW5pdCAmIGxheW91dCAtLS0tLSAvL1xuXG4vKipcbiAqIGxheXMgb3V0IGFsbCBpdGVtc1xuICovXG5wcm90by5sYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fcmVzZXRMYXlvdXQoKTtcbiAgdGhpcy5fbWFuYWdlU3RhbXBzKCk7XG5cbiAgLy8gZG9uJ3QgYW5pbWF0ZSBmaXJzdCBsYXlvdXRcbiAgdmFyIGxheW91dEluc3RhbnQgPSB0aGlzLl9nZXRPcHRpb24oJ2xheW91dEluc3RhbnQnKTtcbiAgdmFyIGlzSW5zdGFudCA9IGxheW91dEluc3RhbnQgIT09IHVuZGVmaW5lZCA/XG4gICAgbGF5b3V0SW5zdGFudCA6ICF0aGlzLl9pc0xheW91dEluaXRlZDtcbiAgdGhpcy5sYXlvdXRJdGVtcyggdGhpcy5pdGVtcywgaXNJbnN0YW50ICk7XG5cbiAgLy8gZmxhZyBmb3IgaW5pdGFsaXplZFxuICB0aGlzLl9pc0xheW91dEluaXRlZCA9IHRydWU7XG59O1xuXG4vLyBfaW5pdCBpcyBhbGlhcyBmb3IgbGF5b3V0XG5wcm90by5faW5pdCA9IHByb3RvLmxheW91dDtcblxuLyoqXG4gKiBsb2dpYyBiZWZvcmUgYW55IG5ldyBsYXlvdXRcbiAqL1xucHJvdG8uX3Jlc2V0TGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZ2V0U2l6ZSgpO1xufTtcblxuXG5wcm90by5nZXRTaXplID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2l6ZSA9IGdldFNpemUoIHRoaXMuZWxlbWVudCApO1xufTtcblxuLyoqXG4gKiBnZXQgbWVhc3VyZW1lbnQgZnJvbSBvcHRpb24sIGZvciBjb2x1bW5XaWR0aCwgcm93SGVpZ2h0LCBndXR0ZXJcbiAqIGlmIG9wdGlvbiBpcyBTdHJpbmcgLT4gZ2V0IGVsZW1lbnQgZnJvbSBzZWxlY3RvciBzdHJpbmcsICYgZ2V0IHNpemUgb2YgZWxlbWVudFxuICogaWYgb3B0aW9uIGlzIEVsZW1lbnQgLT4gZ2V0IHNpemUgb2YgZWxlbWVudFxuICogZWxzZSB1c2Ugb3B0aW9uIGFzIGEgbnVtYmVyXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lYXN1cmVtZW50XG4gKiBAcGFyYW0ge1N0cmluZ30gc2l6ZSAtIHdpZHRoIG9yIGhlaWdodFxuICogQHByaXZhdGVcbiAqL1xucHJvdG8uX2dldE1lYXN1cmVtZW50ID0gZnVuY3Rpb24oIG1lYXN1cmVtZW50LCBzaXplICkge1xuICB2YXIgb3B0aW9uID0gdGhpcy5vcHRpb25zWyBtZWFzdXJlbWVudCBdO1xuICB2YXIgZWxlbTtcbiAgaWYgKCAhb3B0aW9uICkge1xuICAgIC8vIGRlZmF1bHQgdG8gMFxuICAgIHRoaXNbIG1lYXN1cmVtZW50IF0gPSAwO1xuICB9IGVsc2Uge1xuICAgIC8vIHVzZSBvcHRpb24gYXMgYW4gZWxlbWVudFxuICAgIGlmICggdHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyApIHtcbiAgICAgIGVsZW0gPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3Rvciggb3B0aW9uICk7XG4gICAgfSBlbHNlIGlmICggb3B0aW9uIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgKSB7XG4gICAgICBlbGVtID0gb3B0aW9uO1xuICAgIH1cbiAgICAvLyB1c2Ugc2l6ZSBvZiBlbGVtZW50LCBpZiBlbGVtZW50XG4gICAgdGhpc1sgbWVhc3VyZW1lbnQgXSA9IGVsZW0gPyBnZXRTaXplKCBlbGVtIClbIHNpemUgXSA6IG9wdGlvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBsYXlvdXQgYSBjb2xsZWN0aW9uIG9mIGl0ZW0gZWxlbWVudHNcbiAqIEBhcGkgcHVibGljXG4gKi9cbnByb3RvLmxheW91dEl0ZW1zID0gZnVuY3Rpb24oIGl0ZW1zLCBpc0luc3RhbnQgKSB7XG4gIGl0ZW1zID0gdGhpcy5fZ2V0SXRlbXNGb3JMYXlvdXQoIGl0ZW1zICk7XG5cbiAgdGhpcy5fbGF5b3V0SXRlbXMoIGl0ZW1zLCBpc0luc3RhbnQgKTtcblxuICB0aGlzLl9wb3N0TGF5b3V0KCk7XG59O1xuXG4vKipcbiAqIGdldCB0aGUgaXRlbXMgdG8gYmUgbGFpZCBvdXRcbiAqIHlvdSBtYXkgd2FudCB0byBza2lwIG92ZXIgc29tZSBpdGVtc1xuICogQHBhcmFtIHtBcnJheX0gaXRlbXNcbiAqIEByZXR1cm5zIHtBcnJheX0gaXRlbXNcbiAqL1xucHJvdG8uX2dldEl0ZW1zRm9yTGF5b3V0ID0gZnVuY3Rpb24oIGl0ZW1zICkge1xuICByZXR1cm4gaXRlbXMuZmlsdGVyKCBmdW5jdGlvbiggaXRlbSApIHtcbiAgICByZXR1cm4gIWl0ZW0uaXNJZ25vcmVkO1xuICB9KTtcbn07XG5cbi8qKlxuICogbGF5b3V0IGl0ZW1zXG4gKiBAcGFyYW0ge0FycmF5fSBpdGVtc1xuICogQHBhcmFtIHtCb29sZWFufSBpc0luc3RhbnRcbiAqL1xucHJvdG8uX2xheW91dEl0ZW1zID0gZnVuY3Rpb24oIGl0ZW1zLCBpc0luc3RhbnQgKSB7XG4gIHRoaXMuX2VtaXRDb21wbGV0ZU9uSXRlbXMoICdsYXlvdXQnLCBpdGVtcyApO1xuXG4gIGlmICggIWl0ZW1zIHx8ICFpdGVtcy5sZW5ndGggKSB7XG4gICAgLy8gbm8gaXRlbXMsIGVtaXQgZXZlbnQgd2l0aCBlbXB0eSBhcnJheVxuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBxdWV1ZSA9IFtdO1xuXG4gIGl0ZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgIC8vIGdldCB4L3kgb2JqZWN0IGZyb20gbWV0aG9kXG4gICAgdmFyIHBvc2l0aW9uID0gdGhpcy5fZ2V0SXRlbUxheW91dFBvc2l0aW9uKCBpdGVtICk7XG4gICAgLy8gZW5xdWV1ZVxuICAgIHBvc2l0aW9uLml0ZW0gPSBpdGVtO1xuICAgIHBvc2l0aW9uLmlzSW5zdGFudCA9IGlzSW5zdGFudCB8fCBpdGVtLmlzTGF5b3V0SW5zdGFudDtcbiAgICBxdWV1ZS5wdXNoKCBwb3NpdGlvbiApO1xuICB9LCB0aGlzICk7XG5cbiAgdGhpcy5fcHJvY2Vzc0xheW91dFF1ZXVlKCBxdWV1ZSApO1xufTtcblxuLyoqXG4gKiBnZXQgaXRlbSBsYXlvdXQgcG9zaXRpb25cbiAqIEBwYXJhbSB7T3V0bGF5ZXIuSXRlbX0gaXRlbVxuICogQHJldHVybnMge09iamVjdH0geCBhbmQgeSBwb3NpdGlvblxuICovXG5wcm90by5fZ2V0SXRlbUxheW91dFBvc2l0aW9uID0gZnVuY3Rpb24oIC8qIGl0ZW0gKi8gKSB7XG4gIHJldHVybiB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG59O1xuXG4vKipcbiAqIGl0ZXJhdGUgb3ZlciBhcnJheSBhbmQgcG9zaXRpb24gZWFjaCBpdGVtXG4gKiBSZWFzb24gYmVpbmcgLSBzZXBhcmF0aW5nIHRoaXMgbG9naWMgcHJldmVudHMgJ2xheW91dCBpbnZhbGlkYXRpb24nXG4gKiB0aHggQHBhdWxfaXJpc2hcbiAqIEBwYXJhbSB7QXJyYXl9IHF1ZXVlXG4gKi9cbnByb3RvLl9wcm9jZXNzTGF5b3V0UXVldWUgPSBmdW5jdGlvbiggcXVldWUgKSB7XG4gIHRoaXMudXBkYXRlU3RhZ2dlcigpO1xuICBxdWV1ZS5mb3JFYWNoKCBmdW5jdGlvbiggb2JqLCBpICkge1xuICAgIHRoaXMuX3Bvc2l0aW9uSXRlbSggb2JqLml0ZW0sIG9iai54LCBvYmoueSwgb2JqLmlzSW5zdGFudCwgaSApO1xuICB9LCB0aGlzICk7XG59O1xuXG4vLyBzZXQgc3RhZ2dlciBmcm9tIG9wdGlvbiBpbiBtaWxsaXNlY29uZHMgbnVtYmVyXG5wcm90by51cGRhdGVTdGFnZ2VyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzdGFnZ2VyID0gdGhpcy5vcHRpb25zLnN0YWdnZXI7XG4gIGlmICggc3RhZ2dlciA9PT0gbnVsbCB8fCBzdGFnZ2VyID09PSB1bmRlZmluZWQgKSB7XG4gICAgdGhpcy5zdGFnZ2VyID0gMDtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5zdGFnZ2VyID0gZ2V0TWlsbGlzZWNvbmRzKCBzdGFnZ2VyICk7XG4gIHJldHVybiB0aGlzLnN0YWdnZXI7XG59O1xuXG4vKipcbiAqIFNldHMgcG9zaXRpb24gb2YgaXRlbSBpbiBET01cbiAqIEBwYXJhbSB7T3V0bGF5ZXIuSXRlbX0gaXRlbVxuICogQHBhcmFtIHtOdW1iZXJ9IHggLSBob3Jpem9udGFsIHBvc2l0aW9uXG4gKiBAcGFyYW0ge051bWJlcn0geSAtIHZlcnRpY2FsIHBvc2l0aW9uXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzSW5zdGFudCAtIGRpc2FibGVzIHRyYW5zaXRpb25zXG4gKi9cbnByb3RvLl9wb3NpdGlvbkl0ZW0gPSBmdW5jdGlvbiggaXRlbSwgeCwgeSwgaXNJbnN0YW50LCBpICkge1xuICBpZiAoIGlzSW5zdGFudCApIHtcbiAgICAvLyBpZiBub3QgdHJhbnNpdGlvbiwganVzdCBzZXQgQ1NTXG4gICAgaXRlbS5nb1RvKCB4LCB5ICk7XG4gIH0gZWxzZSB7XG4gICAgaXRlbS5zdGFnZ2VyKCBpICogdGhpcy5zdGFnZ2VyICk7XG4gICAgaXRlbS5tb3ZlVG8oIHgsIHkgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBBbnkgbG9naWMgeW91IHdhbnQgdG8gZG8gYWZ0ZXIgZWFjaCBsYXlvdXQsXG4gKiBpLmUuIHNpemUgdGhlIGNvbnRhaW5lclxuICovXG5wcm90by5fcG9zdExheW91dCA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJlc2l6ZUNvbnRhaW5lcigpO1xufTtcblxucHJvdG8ucmVzaXplQ29udGFpbmVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpc1Jlc2l6aW5nQ29udGFpbmVyID0gdGhpcy5fZ2V0T3B0aW9uKCdyZXNpemVDb250YWluZXInKTtcbiAgaWYgKCAhaXNSZXNpemluZ0NvbnRhaW5lciApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIHNpemUgPSB0aGlzLl9nZXRDb250YWluZXJTaXplKCk7XG4gIGlmICggc2l6ZSApIHtcbiAgICB0aGlzLl9zZXRDb250YWluZXJNZWFzdXJlKCBzaXplLndpZHRoLCB0cnVlICk7XG4gICAgdGhpcy5fc2V0Q29udGFpbmVyTWVhc3VyZSggc2l6ZS5oZWlnaHQsIGZhbHNlICk7XG4gIH1cbn07XG5cbi8qKlxuICogU2V0cyB3aWR0aCBvciBoZWlnaHQgb2YgY29udGFpbmVyIGlmIHJldHVybmVkXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBzaXplXG4gKiAgIEBwYXJhbSB7TnVtYmVyfSB3aWR0aFxuICogICBAcGFyYW0ge051bWJlcn0gaGVpZ2h0XG4gKi9cbnByb3RvLl9nZXRDb250YWluZXJTaXplID0gbm9vcDtcblxuLyoqXG4gKiBAcGFyYW0ge051bWJlcn0gbWVhc3VyZSAtIHNpemUgb2Ygd2lkdGggb3IgaGVpZ2h0XG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzV2lkdGhcbiAqL1xucHJvdG8uX3NldENvbnRhaW5lck1lYXN1cmUgPSBmdW5jdGlvbiggbWVhc3VyZSwgaXNXaWR0aCApIHtcbiAgaWYgKCBtZWFzdXJlID09PSB1bmRlZmluZWQgKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGVsZW1TaXplID0gdGhpcy5zaXplO1xuICAvLyBhZGQgcGFkZGluZyBhbmQgYm9yZGVyIHdpZHRoIGlmIGJvcmRlciBib3hcbiAgaWYgKCBlbGVtU2l6ZS5pc0JvcmRlckJveCApIHtcbiAgICBtZWFzdXJlICs9IGlzV2lkdGggPyBlbGVtU2l6ZS5wYWRkaW5nTGVmdCArIGVsZW1TaXplLnBhZGRpbmdSaWdodCArXG4gICAgICBlbGVtU2l6ZS5ib3JkZXJMZWZ0V2lkdGggKyBlbGVtU2l6ZS5ib3JkZXJSaWdodFdpZHRoIDpcbiAgICAgIGVsZW1TaXplLnBhZGRpbmdCb3R0b20gKyBlbGVtU2l6ZS5wYWRkaW5nVG9wICtcbiAgICAgIGVsZW1TaXplLmJvcmRlclRvcFdpZHRoICsgZWxlbVNpemUuYm9yZGVyQm90dG9tV2lkdGg7XG4gIH1cblxuICBtZWFzdXJlID0gTWF0aC5tYXgoIG1lYXN1cmUsIDAgKTtcbiAgdGhpcy5lbGVtZW50LnN0eWxlWyBpc1dpZHRoID8gJ3dpZHRoJyA6ICdoZWlnaHQnIF0gPSBtZWFzdXJlICsgJ3B4Jztcbn07XG5cbi8qKlxuICogZW1pdCBldmVudENvbXBsZXRlIG9uIGEgY29sbGVjdGlvbiBvZiBpdGVtcyBldmVudHNcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudE5hbWVcbiAqIEBwYXJhbSB7QXJyYXl9IGl0ZW1zIC0gT3V0bGF5ZXIuSXRlbXNcbiAqL1xucHJvdG8uX2VtaXRDb21wbGV0ZU9uSXRlbXMgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBpdGVtcyApIHtcbiAgdmFyIF90aGlzID0gdGhpcztcbiAgZnVuY3Rpb24gb25Db21wbGV0ZSgpIHtcbiAgICBfdGhpcy5kaXNwYXRjaEV2ZW50KCBldmVudE5hbWUgKyAnQ29tcGxldGUnLCBudWxsLCBbIGl0ZW1zIF0gKTtcbiAgfVxuXG4gIHZhciBjb3VudCA9IGl0ZW1zLmxlbmd0aDtcbiAgaWYgKCAhaXRlbXMgfHwgIWNvdW50ICkge1xuICAgIG9uQ29tcGxldGUoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgZG9uZUNvdW50ID0gMDtcbiAgZnVuY3Rpb24gdGljaygpIHtcbiAgICBkb25lQ291bnQrKztcbiAgICBpZiAoIGRvbmVDb3VudCA9PSBjb3VudCApIHtcbiAgICAgIG9uQ29tcGxldGUoKTtcbiAgICB9XG4gIH1cblxuICAvLyBiaW5kIGNhbGxiYWNrXG4gIGl0ZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgIGl0ZW0ub25jZSggZXZlbnROYW1lLCB0aWNrICk7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBlbWl0cyBldmVudHMgdmlhIEV2RW1pdHRlciBhbmQgalF1ZXJ5IGV2ZW50c1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgLSBuYW1lIG9mIGV2ZW50XG4gKiBAcGFyYW0ge0V2ZW50fSBldmVudCAtIG9yaWdpbmFsIGV2ZW50XG4gKiBAcGFyYW0ge0FycmF5fSBhcmdzIC0gZXh0cmEgYXJndW1lbnRzXG4gKi9cbnByb3RvLmRpc3BhdGNoRXZlbnQgPSBmdW5jdGlvbiggdHlwZSwgZXZlbnQsIGFyZ3MgKSB7XG4gIC8vIGFkZCBvcmlnaW5hbCBldmVudCB0byBhcmd1bWVudHNcbiAgdmFyIGVtaXRBcmdzID0gZXZlbnQgPyBbIGV2ZW50IF0uY29uY2F0KCBhcmdzICkgOiBhcmdzO1xuICB0aGlzLmVtaXRFdmVudCggdHlwZSwgZW1pdEFyZ3MgKTtcblxuICBpZiAoIGpRdWVyeSApIHtcbiAgICAvLyBzZXQgdGhpcy4kZWxlbWVudFxuICAgIHRoaXMuJGVsZW1lbnQgPSB0aGlzLiRlbGVtZW50IHx8IGpRdWVyeSggdGhpcy5lbGVtZW50ICk7XG4gICAgaWYgKCBldmVudCApIHtcbiAgICAgIC8vIGNyZWF0ZSBqUXVlcnkgZXZlbnRcbiAgICAgIHZhciAkZXZlbnQgPSBqUXVlcnkuRXZlbnQoIGV2ZW50ICk7XG4gICAgICAkZXZlbnQudHlwZSA9IHR5cGU7XG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoICRldmVudCwgYXJncyApO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBqdXN0IHRyaWdnZXIgd2l0aCB0eXBlIGlmIG5vIGV2ZW50IGF2YWlsYWJsZVxuICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKCB0eXBlLCBhcmdzICk7XG4gICAgfVxuICB9XG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBpZ25vcmUgJiBzdGFtcHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuXG4vKipcbiAqIGtlZXAgaXRlbSBpbiBjb2xsZWN0aW9uLCBidXQgZG8gbm90IGxheSBpdCBvdXRcbiAqIGlnbm9yZWQgaXRlbXMgZG8gbm90IGdldCBza2lwcGVkIGluIGxheW91dFxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtXG4gKi9cbnByb3RvLmlnbm9yZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuICB2YXIgaXRlbSA9IHRoaXMuZ2V0SXRlbSggZWxlbSApO1xuICBpZiAoIGl0ZW0gKSB7XG4gICAgaXRlbS5pc0lnbm9yZWQgPSB0cnVlO1xuICB9XG59O1xuXG4vKipcbiAqIHJldHVybiBpdGVtIHRvIGxheW91dCBjb2xsZWN0aW9uXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1cbiAqL1xucHJvdG8udW5pZ25vcmUgPSBmdW5jdGlvbiggZWxlbSApIHtcbiAgdmFyIGl0ZW0gPSB0aGlzLmdldEl0ZW0oIGVsZW0gKTtcbiAgaWYgKCBpdGVtICkge1xuICAgIGRlbGV0ZSBpdGVtLmlzSWdub3JlZDtcbiAgfVxufTtcblxuLyoqXG4gKiBhZGRzIGVsZW1lbnRzIHRvIHN0YW1wc1xuICogQHBhcmFtIHtOb2RlTGlzdCwgQXJyYXksIEVsZW1lbnQsIG9yIFN0cmluZ30gZWxlbXNcbiAqL1xucHJvdG8uc3RhbXAgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIGVsZW1zID0gdGhpcy5fZmluZCggZWxlbXMgKTtcbiAgaWYgKCAhZWxlbXMgKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5zdGFtcHMgPSB0aGlzLnN0YW1wcy5jb25jYXQoIGVsZW1zICk7XG4gIC8vIGlnbm9yZVxuICBlbGVtcy5mb3JFYWNoKCB0aGlzLmlnbm9yZSwgdGhpcyApO1xufTtcblxuLyoqXG4gKiByZW1vdmVzIGVsZW1lbnRzIHRvIHN0YW1wc1xuICogQHBhcmFtIHtOb2RlTGlzdCwgQXJyYXksIG9yIEVsZW1lbnR9IGVsZW1zXG4gKi9cbnByb3RvLnVuc3RhbXAgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIGVsZW1zID0gdGhpcy5fZmluZCggZWxlbXMgKTtcbiAgaWYgKCAhZWxlbXMgKXtcbiAgICByZXR1cm47XG4gIH1cblxuICBlbGVtcy5mb3JFYWNoKCBmdW5jdGlvbiggZWxlbSApIHtcbiAgICAvLyBmaWx0ZXIgb3V0IHJlbW92ZWQgc3RhbXAgZWxlbWVudHNcbiAgICB1dGlscy5yZW1vdmVGcm9tKCB0aGlzLnN0YW1wcywgZWxlbSApO1xuICAgIHRoaXMudW5pZ25vcmUoIGVsZW0gKTtcbiAgfSwgdGhpcyApO1xufTtcblxuLyoqXG4gKiBmaW5kcyBjaGlsZCBlbGVtZW50c1xuICogQHBhcmFtIHtOb2RlTGlzdCwgQXJyYXksIEVsZW1lbnQsIG9yIFN0cmluZ30gZWxlbXNcbiAqIEByZXR1cm5zIHtBcnJheX0gZWxlbXNcbiAqL1xucHJvdG8uX2ZpbmQgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIGlmICggIWVsZW1zICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBpZiBzdHJpbmcsIHVzZSBhcmd1bWVudCBhcyBzZWxlY3RvciBzdHJpbmdcbiAgaWYgKCB0eXBlb2YgZWxlbXMgPT0gJ3N0cmluZycgKSB7XG4gICAgZWxlbXMgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCggZWxlbXMgKTtcbiAgfVxuICBlbGVtcyA9IHV0aWxzLm1ha2VBcnJheSggZWxlbXMgKTtcbiAgcmV0dXJuIGVsZW1zO1xufTtcblxucHJvdG8uX21hbmFnZVN0YW1wcyA9IGZ1bmN0aW9uKCkge1xuICBpZiAoICF0aGlzLnN0YW1wcyB8fCAhdGhpcy5zdGFtcHMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuX2dldEJvdW5kaW5nUmVjdCgpO1xuXG4gIHRoaXMuc3RhbXBzLmZvckVhY2goIHRoaXMuX21hbmFnZVN0YW1wLCB0aGlzICk7XG59O1xuXG4vLyB1cGRhdGUgYm91bmRpbmdMZWZ0IC8gVG9wXG5wcm90by5fZ2V0Qm91bmRpbmdSZWN0ID0gZnVuY3Rpb24oKSB7XG4gIC8vIGdldCBib3VuZGluZyByZWN0IGZvciBjb250YWluZXIgZWxlbWVudFxuICB2YXIgYm91bmRpbmdSZWN0ID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgc2l6ZSA9IHRoaXMuc2l6ZTtcbiAgdGhpcy5fYm91bmRpbmdSZWN0ID0ge1xuICAgIGxlZnQ6IGJvdW5kaW5nUmVjdC5sZWZ0ICsgc2l6ZS5wYWRkaW5nTGVmdCArIHNpemUuYm9yZGVyTGVmdFdpZHRoLFxuICAgIHRvcDogYm91bmRpbmdSZWN0LnRvcCArIHNpemUucGFkZGluZ1RvcCArIHNpemUuYm9yZGVyVG9wV2lkdGgsXG4gICAgcmlnaHQ6IGJvdW5kaW5nUmVjdC5yaWdodCAtICggc2l6ZS5wYWRkaW5nUmlnaHQgKyBzaXplLmJvcmRlclJpZ2h0V2lkdGggKSxcbiAgICBib3R0b206IGJvdW5kaW5nUmVjdC5ib3R0b20gLSAoIHNpemUucGFkZGluZ0JvdHRvbSArIHNpemUuYm9yZGVyQm90dG9tV2lkdGggKVxuICB9O1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IHN0YW1wXG4qKi9cbnByb3RvLl9tYW5hZ2VTdGFtcCA9IG5vb3A7XG5cbi8qKlxuICogZ2V0IHgveSBwb3NpdGlvbiBvZiBlbGVtZW50IHJlbGF0aXZlIHRvIGNvbnRhaW5lciBlbGVtZW50XG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1cbiAqIEByZXR1cm5zIHtPYmplY3R9IG9mZnNldCAtIGhhcyBsZWZ0LCB0b3AsIHJpZ2h0LCBib3R0b21cbiAqL1xucHJvdG8uX2dldEVsZW1lbnRPZmZzZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcbiAgdmFyIGJvdW5kaW5nUmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciB0aGlzUmVjdCA9IHRoaXMuX2JvdW5kaW5nUmVjdDtcbiAgdmFyIHNpemUgPSBnZXRTaXplKCBlbGVtICk7XG4gIHZhciBvZmZzZXQgPSB7XG4gICAgbGVmdDogYm91bmRpbmdSZWN0LmxlZnQgLSB0aGlzUmVjdC5sZWZ0IC0gc2l6ZS5tYXJnaW5MZWZ0LFxuICAgIHRvcDogYm91bmRpbmdSZWN0LnRvcCAtIHRoaXNSZWN0LnRvcCAtIHNpemUubWFyZ2luVG9wLFxuICAgIHJpZ2h0OiB0aGlzUmVjdC5yaWdodCAtIGJvdW5kaW5nUmVjdC5yaWdodCAtIHNpemUubWFyZ2luUmlnaHQsXG4gICAgYm90dG9tOiB0aGlzUmVjdC5ib3R0b20gLSBib3VuZGluZ1JlY3QuYm90dG9tIC0gc2l6ZS5tYXJnaW5Cb3R0b21cbiAgfTtcbiAgcmV0dXJuIG9mZnNldDtcbn07XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHJlc2l6ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4vLyBlbmFibGUgZXZlbnQgaGFuZGxlcnMgZm9yIGxpc3RlbmVyc1xuLy8gaS5lLiByZXNpemUgLT4gb25yZXNpemVcbnByb3RvLmhhbmRsZUV2ZW50ID0gdXRpbHMuaGFuZGxlRXZlbnQ7XG5cbi8qKlxuICogQmluZCBsYXlvdXQgdG8gd2luZG93IHJlc2l6aW5nXG4gKi9cbnByb3RvLmJpbmRSZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoICdyZXNpemUnLCB0aGlzICk7XG4gIHRoaXMuaXNSZXNpemVCb3VuZCA9IHRydWU7XG59O1xuXG4vKipcbiAqIFVuYmluZCBsYXlvdXQgdG8gd2luZG93IHJlc2l6aW5nXG4gKi9cbnByb3RvLnVuYmluZFJlc2l6ZSA9IGZ1bmN0aW9uKCkge1xuICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggJ3Jlc2l6ZScsIHRoaXMgKTtcbiAgdGhpcy5pc1Jlc2l6ZUJvdW5kID0gZmFsc2U7XG59O1xuXG5wcm90by5vbnJlc2l6ZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJlc2l6ZSgpO1xufTtcblxudXRpbHMuZGVib3VuY2VNZXRob2QoIE91dGxheWVyLCAnb25yZXNpemUnLCAxMDAgKTtcblxucHJvdG8ucmVzaXplID0gZnVuY3Rpb24oKSB7XG4gIC8vIGRvbid0IHRyaWdnZXIgaWYgc2l6ZSBkaWQgbm90IGNoYW5nZVxuICAvLyBvciBpZiByZXNpemUgd2FzIHVuYm91bmQuIFNlZSAjOVxuICBpZiAoICF0aGlzLmlzUmVzaXplQm91bmQgfHwgIXRoaXMubmVlZHNSZXNpemVMYXlvdXQoKSApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLmxheW91dCgpO1xufTtcblxuLyoqXG4gKiBjaGVjayBpZiBsYXlvdXQgaXMgbmVlZGVkIHBvc3QgbGF5b3V0XG4gKiBAcmV0dXJucyBCb29sZWFuXG4gKi9cbnByb3RvLm5lZWRzUmVzaXplTGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzaXplID0gZ2V0U2l6ZSggdGhpcy5lbGVtZW50ICk7XG4gIC8vIGNoZWNrIHRoYXQgdGhpcy5zaXplIGFuZCBzaXplIGFyZSB0aGVyZVxuICAvLyBJRTggdHJpZ2dlcnMgcmVzaXplIG9uIGJvZHkgc2l6ZSBjaGFuZ2UsIHNvIHRoZXkgbWlnaHQgbm90IGJlXG4gIHZhciBoYXNTaXplcyA9IHRoaXMuc2l6ZSAmJiBzaXplO1xuICByZXR1cm4gaGFzU2l6ZXMgJiYgc2l6ZS5pbm5lcldpZHRoICE9PSB0aGlzLnNpemUuaW5uZXJXaWR0aDtcbn07XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIG1ldGhvZHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuLyoqXG4gKiBhZGQgaXRlbXMgdG8gT3V0bGF5ZXIgaW5zdGFuY2VcbiAqIEBwYXJhbSB7QXJyYXkgb3IgTm9kZUxpc3Qgb3IgRWxlbWVudH0gZWxlbXNcbiAqIEByZXR1cm5zIHtBcnJheX0gaXRlbXMgLSBPdXRsYXllci5JdGVtc1xuKiovXG5wcm90by5hZGRJdGVtcyA9IGZ1bmN0aW9uKCBlbGVtcyApIHtcbiAgdmFyIGl0ZW1zID0gdGhpcy5faXRlbWl6ZSggZWxlbXMgKTtcbiAgLy8gYWRkIGl0ZW1zIHRvIGNvbGxlY3Rpb25cbiAgaWYgKCBpdGVtcy5sZW5ndGggKSB7XG4gICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMuY29uY2F0KCBpdGVtcyApO1xuICB9XG4gIHJldHVybiBpdGVtcztcbn07XG5cbi8qKlxuICogTGF5b3V0IG5ld2x5LWFwcGVuZGVkIGl0ZW0gZWxlbWVudHNcbiAqIEBwYXJhbSB7QXJyYXkgb3IgTm9kZUxpc3Qgb3IgRWxlbWVudH0gZWxlbXNcbiAqL1xucHJvdG8uYXBwZW5kZWQgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIHZhciBpdGVtcyA9IHRoaXMuYWRkSXRlbXMoIGVsZW1zICk7XG4gIGlmICggIWl0ZW1zLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gbGF5b3V0IGFuZCByZXZlYWwganVzdCB0aGUgbmV3IGl0ZW1zXG4gIHRoaXMubGF5b3V0SXRlbXMoIGl0ZW1zLCB0cnVlICk7XG4gIHRoaXMucmV2ZWFsKCBpdGVtcyApO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgcHJlcGVuZGVkIGVsZW1lbnRzXG4gKiBAcGFyYW0ge0FycmF5IG9yIE5vZGVMaXN0IG9yIEVsZW1lbnR9IGVsZW1zXG4gKi9cbnByb3RvLnByZXBlbmRlZCA9IGZ1bmN0aW9uKCBlbGVtcyApIHtcbiAgdmFyIGl0ZW1zID0gdGhpcy5faXRlbWl6ZSggZWxlbXMgKTtcbiAgaWYgKCAhaXRlbXMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBhZGQgaXRlbXMgdG8gYmVnaW5uaW5nIG9mIGNvbGxlY3Rpb25cbiAgdmFyIHByZXZpb3VzSXRlbXMgPSB0aGlzLml0ZW1zLnNsaWNlKDApO1xuICB0aGlzLml0ZW1zID0gaXRlbXMuY29uY2F0KCBwcmV2aW91c0l0ZW1zICk7XG4gIC8vIHN0YXJ0IG5ldyBsYXlvdXRcbiAgdGhpcy5fcmVzZXRMYXlvdXQoKTtcbiAgdGhpcy5fbWFuYWdlU3RhbXBzKCk7XG4gIC8vIGxheW91dCBuZXcgc3R1ZmYgd2l0aG91dCB0cmFuc2l0aW9uXG4gIHRoaXMubGF5b3V0SXRlbXMoIGl0ZW1zLCB0cnVlICk7XG4gIHRoaXMucmV2ZWFsKCBpdGVtcyApO1xuICAvLyBsYXlvdXQgcHJldmlvdXMgaXRlbXNcbiAgdGhpcy5sYXlvdXRJdGVtcyggcHJldmlvdXNJdGVtcyApO1xufTtcblxuLyoqXG4gKiByZXZlYWwgYSBjb2xsZWN0aW9uIG9mIGl0ZW1zXG4gKiBAcGFyYW0ge0FycmF5IG9mIE91dGxheWVyLkl0ZW1zfSBpdGVtc1xuICovXG5wcm90by5yZXZlYWwgPSBmdW5jdGlvbiggaXRlbXMgKSB7XG4gIHRoaXMuX2VtaXRDb21wbGV0ZU9uSXRlbXMoICdyZXZlYWwnLCBpdGVtcyApO1xuICBpZiAoICFpdGVtcyB8fCAhaXRlbXMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgc3RhZ2dlciA9IHRoaXMudXBkYXRlU3RhZ2dlcigpO1xuICBpdGVtcy5mb3JFYWNoKCBmdW5jdGlvbiggaXRlbSwgaSApIHtcbiAgICBpdGVtLnN0YWdnZXIoIGkgKiBzdGFnZ2VyICk7XG4gICAgaXRlbS5yZXZlYWwoKTtcbiAgfSk7XG59O1xuXG4vKipcbiAqIGhpZGUgYSBjb2xsZWN0aW9uIG9mIGl0ZW1zXG4gKiBAcGFyYW0ge0FycmF5IG9mIE91dGxheWVyLkl0ZW1zfSBpdGVtc1xuICovXG5wcm90by5oaWRlID0gZnVuY3Rpb24oIGl0ZW1zICkge1xuICB0aGlzLl9lbWl0Q29tcGxldGVPbkl0ZW1zKCAnaGlkZScsIGl0ZW1zICk7XG4gIGlmICggIWl0ZW1zIHx8ICFpdGVtcy5sZW5ndGggKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBzdGFnZ2VyID0gdGhpcy51cGRhdGVTdGFnZ2VyKCk7XG4gIGl0ZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBpdGVtLCBpICkge1xuICAgIGl0ZW0uc3RhZ2dlciggaSAqIHN0YWdnZXIgKTtcbiAgICBpdGVtLmhpZGUoKTtcbiAgfSk7XG59O1xuXG4vKipcbiAqIHJldmVhbCBpdGVtIGVsZW1lbnRzXG4gKiBAcGFyYW0ge0FycmF5fSwge0VsZW1lbnR9LCB7Tm9kZUxpc3R9IGl0ZW1zXG4gKi9cbnByb3RvLnJldmVhbEl0ZW1FbGVtZW50cyA9IGZ1bmN0aW9uKCBlbGVtcyApIHtcbiAgdmFyIGl0ZW1zID0gdGhpcy5nZXRJdGVtcyggZWxlbXMgKTtcbiAgdGhpcy5yZXZlYWwoIGl0ZW1zICk7XG59O1xuXG4vKipcbiAqIGhpZGUgaXRlbSBlbGVtZW50c1xuICogQHBhcmFtIHtBcnJheX0sIHtFbGVtZW50fSwge05vZGVMaXN0fSBpdGVtc1xuICovXG5wcm90by5oaWRlSXRlbUVsZW1lbnRzID0gZnVuY3Rpb24oIGVsZW1zICkge1xuICB2YXIgaXRlbXMgPSB0aGlzLmdldEl0ZW1zKCBlbGVtcyApO1xuICB0aGlzLmhpZGUoIGl0ZW1zICk7XG59O1xuXG4vKipcbiAqIGdldCBPdXRsYXllci5JdGVtLCBnaXZlbiBhbiBFbGVtZW50XG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7T3V0bGF5ZXIuSXRlbX0gaXRlbVxuICovXG5wcm90by5nZXRJdGVtID0gZnVuY3Rpb24oIGVsZW0gKSB7XG4gIC8vIGxvb3AgdGhyb3VnaCBpdGVtcyB0byBnZXQgdGhlIG9uZSB0aGF0IG1hdGNoZXNcbiAgZm9yICggdmFyIGk9MDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKysgKSB7XG4gICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2ldO1xuICAgIGlmICggaXRlbS5lbGVtZW50ID09IGVsZW0gKSB7XG4gICAgICAvLyByZXR1cm4gaXRlbVxuICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIGdldCBjb2xsZWN0aW9uIG9mIE91dGxheWVyLkl0ZW1zLCBnaXZlbiBFbGVtZW50c1xuICogQHBhcmFtIHtBcnJheX0gZWxlbXNcbiAqIEByZXR1cm5zIHtBcnJheX0gaXRlbXMgLSBPdXRsYXllci5JdGVtc1xuICovXG5wcm90by5nZXRJdGVtcyA9IGZ1bmN0aW9uKCBlbGVtcyApIHtcbiAgZWxlbXMgPSB1dGlscy5tYWtlQXJyYXkoIGVsZW1zICk7XG4gIHZhciBpdGVtcyA9IFtdO1xuICBlbGVtcy5mb3JFYWNoKCBmdW5jdGlvbiggZWxlbSApIHtcbiAgICB2YXIgaXRlbSA9IHRoaXMuZ2V0SXRlbSggZWxlbSApO1xuICAgIGlmICggaXRlbSApIHtcbiAgICAgIGl0ZW1zLnB1c2goIGl0ZW0gKTtcbiAgICB9XG4gIH0sIHRoaXMgKTtcblxuICByZXR1cm4gaXRlbXM7XG59O1xuXG4vKipcbiAqIHJlbW92ZSBlbGVtZW50KHMpIGZyb20gaW5zdGFuY2UgYW5kIERPTVxuICogQHBhcmFtIHtBcnJheSBvciBOb2RlTGlzdCBvciBFbGVtZW50fSBlbGVtc1xuICovXG5wcm90by5yZW1vdmUgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIHZhciByZW1vdmVJdGVtcyA9IHRoaXMuZ2V0SXRlbXMoIGVsZW1zICk7XG5cbiAgdGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyggJ3JlbW92ZScsIHJlbW92ZUl0ZW1zICk7XG5cbiAgLy8gYmFpbCBpZiBubyBpdGVtcyB0byByZW1vdmVcbiAgaWYgKCAhcmVtb3ZlSXRlbXMgfHwgIXJlbW92ZUl0ZW1zLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZW1vdmVJdGVtcy5mb3JFYWNoKCBmdW5jdGlvbiggaXRlbSApIHtcbiAgICBpdGVtLnJlbW92ZSgpO1xuICAgIC8vIHJlbW92ZSBpdGVtIGZyb20gY29sbGVjdGlvblxuICAgIHV0aWxzLnJlbW92ZUZyb20oIHRoaXMuaXRlbXMsIGl0ZW0gKTtcbiAgfSwgdGhpcyApO1xufTtcblxuLy8gLS0tLS0gZGVzdHJveSAtLS0tLSAvL1xuXG4vLyByZW1vdmUgYW5kIGRpc2FibGUgT3V0bGF5ZXIgaW5zdGFuY2VcbnByb3RvLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgLy8gY2xlYW4gdXAgZHluYW1pYyBzdHlsZXNcbiAgdmFyIHN0eWxlID0gdGhpcy5lbGVtZW50LnN0eWxlO1xuICBzdHlsZS5oZWlnaHQgPSAnJztcbiAgc3R5bGUucG9zaXRpb24gPSAnJztcbiAgc3R5bGUud2lkdGggPSAnJztcbiAgLy8gZGVzdHJveSBpdGVtc1xuICB0aGlzLml0ZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgIGl0ZW0uZGVzdHJveSgpO1xuICB9KTtcblxuICB0aGlzLnVuYmluZFJlc2l6ZSgpO1xuXG4gIHZhciBpZCA9IHRoaXMuZWxlbWVudC5vdXRsYXllckdVSUQ7XG4gIGRlbGV0ZSBpbnN0YW5jZXNbIGlkIF07IC8vIHJlbW92ZSByZWZlcmVuY2UgdG8gaW5zdGFuY2UgYnkgaWRcbiAgZGVsZXRlIHRoaXMuZWxlbWVudC5vdXRsYXllckdVSUQ7XG4gIC8vIHJlbW92ZSBkYXRhIGZvciBqUXVlcnlcbiAgaWYgKCBqUXVlcnkgKSB7XG4gICAgalF1ZXJ5LnJlbW92ZURhdGEoIHRoaXMuZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5uYW1lc3BhY2UgKTtcbiAgfVxuXG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBkYXRhIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbi8qKlxuICogZ2V0IE91dGxheWVyIGluc3RhbmNlIGZyb20gZWxlbWVudFxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtXG4gKiBAcmV0dXJucyB7T3V0bGF5ZXJ9XG4gKi9cbk91dGxheWVyLmRhdGEgPSBmdW5jdGlvbiggZWxlbSApIHtcbiAgZWxlbSA9IHV0aWxzLmdldFF1ZXJ5RWxlbWVudCggZWxlbSApO1xuICB2YXIgaWQgPSBlbGVtICYmIGVsZW0ub3V0bGF5ZXJHVUlEO1xuICByZXR1cm4gaWQgJiYgaW5zdGFuY2VzWyBpZCBdO1xufTtcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBjcmVhdGUgT3V0bGF5ZXIgY2xhc3MgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuLyoqXG4gKiBjcmVhdGUgYSBsYXlvdXQgY2xhc3NcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqL1xuT3V0bGF5ZXIuY3JlYXRlID0gZnVuY3Rpb24oIG5hbWVzcGFjZSwgb3B0aW9ucyApIHtcbiAgLy8gc3ViLWNsYXNzIE91dGxheWVyXG4gIHZhciBMYXlvdXQgPSBzdWJjbGFzcyggT3V0bGF5ZXIgKTtcbiAgLy8gYXBwbHkgbmV3IG9wdGlvbnMgYW5kIGNvbXBhdE9wdGlvbnNcbiAgTGF5b3V0LmRlZmF1bHRzID0gdXRpbHMuZXh0ZW5kKCB7fSwgT3V0bGF5ZXIuZGVmYXVsdHMgKTtcbiAgdXRpbHMuZXh0ZW5kKCBMYXlvdXQuZGVmYXVsdHMsIG9wdGlvbnMgKTtcbiAgTGF5b3V0LmNvbXBhdE9wdGlvbnMgPSB1dGlscy5leHRlbmQoIHt9LCBPdXRsYXllci5jb21wYXRPcHRpb25zICApO1xuXG4gIExheW91dC5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG5cbiAgTGF5b3V0LmRhdGEgPSBPdXRsYXllci5kYXRhO1xuXG4gIC8vIHN1Yi1jbGFzcyBJdGVtXG4gIExheW91dC5JdGVtID0gc3ViY2xhc3MoIEl0ZW0gKTtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBkZWNsYXJhdGl2ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gIHV0aWxzLmh0bWxJbml0KCBMYXlvdXQsIG5hbWVzcGFjZSApO1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGpRdWVyeSBicmlkZ2UgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAvLyBtYWtlIGludG8galF1ZXJ5IHBsdWdpblxuICBpZiAoIGpRdWVyeSAmJiBqUXVlcnkuYnJpZGdldCApIHtcbiAgICBqUXVlcnkuYnJpZGdldCggbmFtZXNwYWNlLCBMYXlvdXQgKTtcbiAgfVxuXG4gIHJldHVybiBMYXlvdXQ7XG59O1xuXG5mdW5jdGlvbiBzdWJjbGFzcyggUGFyZW50ICkge1xuICBmdW5jdGlvbiBTdWJDbGFzcygpIHtcbiAgICBQYXJlbnQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuICB9XG5cbiAgU3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZSggUGFyZW50LnByb3RvdHlwZSApO1xuICBTdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTdWJDbGFzcztcblxuICByZXR1cm4gU3ViQ2xhc3M7XG59XG5cbi8vIC0tLS0tIGhlbHBlcnMgLS0tLS0gLy9cblxuLy8gaG93IG1hbnkgbWlsbGlzZWNvbmRzIGFyZSBpbiBlYWNoIHVuaXRcbnZhciBtc1VuaXRzID0ge1xuICBtczogMSxcbiAgczogMTAwMFxufTtcblxuLy8gbXVuZ2UgdGltZS1saWtlIHBhcmFtZXRlciBpbnRvIG1pbGxpc2Vjb25kIG51bWJlclxuLy8gJzAuNHMnIC0+IDQwXG5mdW5jdGlvbiBnZXRNaWxsaXNlY29uZHMoIHRpbWUgKSB7XG4gIGlmICggdHlwZW9mIHRpbWUgPT0gJ251bWJlcicgKSB7XG4gICAgcmV0dXJuIHRpbWU7XG4gIH1cbiAgdmFyIG1hdGNoZXMgPSB0aW1lLm1hdGNoKCAvKF5cXGQqXFwuP1xcZCopKFxcdyopLyApO1xuICB2YXIgbnVtID0gbWF0Y2hlcyAmJiBtYXRjaGVzWzFdO1xuICB2YXIgdW5pdCA9IG1hdGNoZXMgJiYgbWF0Y2hlc1syXTtcbiAgaWYgKCAhbnVtLmxlbmd0aCApIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBudW0gPSBwYXJzZUZsb2F0KCBudW0gKTtcbiAgdmFyIG11bHQgPSBtc1VuaXRzWyB1bml0IF0gfHwgMTtcbiAgcmV0dXJuIG51bSAqIG11bHQ7XG59XG5cbi8vIC0tLS0tIGZpbiAtLS0tLSAvL1xuXG4vLyBiYWNrIGluIGdsb2JhbFxuT3V0bGF5ZXIuSXRlbSA9IEl0ZW07XG5cbnJldHVybiBPdXRsYXllcjtcblxufSkpO1xuXG4vKipcbiAqIElzb3RvcGUgSXRlbVxuKiovXG5cbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qZ2xvYmFscyBkZWZpbmUsIG1vZHVsZSwgcmVxdWlyZSAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRFxuICAgIGRlZmluZSggJ2lzb3RvcGUvanMvaXRlbScsW1xuICAgICAgICAnb3V0bGF5ZXIvb3V0bGF5ZXInXG4gICAgICBdLFxuICAgICAgZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgcmVxdWlyZSgnb3V0bGF5ZXInKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICB3aW5kb3cuSXNvdG9wZSA9IHdpbmRvdy5Jc290b3BlIHx8IHt9O1xuICAgIHdpbmRvdy5Jc290b3BlLkl0ZW0gPSBmYWN0b3J5KFxuICAgICAgd2luZG93Lk91dGxheWVyXG4gICAgKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoIE91dGxheWVyICkge1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBJdGVtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbi8vIHN1Yi1jbGFzcyBPdXRsYXllciBJdGVtXG5mdW5jdGlvbiBJdGVtKCkge1xuICBPdXRsYXllci5JdGVtLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcbn1cblxudmFyIHByb3RvID0gSXRlbS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCBPdXRsYXllci5JdGVtLnByb3RvdHlwZSApO1xuXG52YXIgX2NyZWF0ZSA9IHByb3RvLl9jcmVhdGU7XG5wcm90by5fY3JlYXRlID0gZnVuY3Rpb24oKSB7XG4gIC8vIGFzc2lnbiBpZCwgdXNlZCBmb3Igb3JpZ2luYWwtb3JkZXIgc29ydGluZ1xuICB0aGlzLmlkID0gdGhpcy5sYXlvdXQuaXRlbUdVSUQrKztcbiAgX2NyZWF0ZS5jYWxsKCB0aGlzICk7XG4gIHRoaXMuc29ydERhdGEgPSB7fTtcbn07XG5cbnByb3RvLnVwZGF0ZVNvcnREYXRhID0gZnVuY3Rpb24oKSB7XG4gIGlmICggdGhpcy5pc0lnbm9yZWQgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIGRlZmF1bHQgc29ydGVyc1xuICB0aGlzLnNvcnREYXRhLmlkID0gdGhpcy5pZDtcbiAgLy8gZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbiAgdGhpcy5zb3J0RGF0YVsnb3JpZ2luYWwtb3JkZXInXSA9IHRoaXMuaWQ7XG4gIHRoaXMuc29ydERhdGEucmFuZG9tID0gTWF0aC5yYW5kb20oKTtcbiAgLy8gZ28gdGhydSBnZXRTb3J0RGF0YSBvYmogYW5kIGFwcGx5IHRoZSBzb3J0ZXJzXG4gIHZhciBnZXRTb3J0RGF0YSA9IHRoaXMubGF5b3V0Lm9wdGlvbnMuZ2V0U29ydERhdGE7XG4gIHZhciBzb3J0ZXJzID0gdGhpcy5sYXlvdXQuX3NvcnRlcnM7XG4gIGZvciAoIHZhciBrZXkgaW4gZ2V0U29ydERhdGEgKSB7XG4gICAgdmFyIHNvcnRlciA9IHNvcnRlcnNbIGtleSBdO1xuICAgIHRoaXMuc29ydERhdGFbIGtleSBdID0gc29ydGVyKCB0aGlzLmVsZW1lbnQsIHRoaXMgKTtcbiAgfVxufTtcblxudmFyIF9kZXN0cm95ID0gcHJvdG8uZGVzdHJveTtcbnByb3RvLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgLy8gY2FsbCBzdXBlclxuICBfZGVzdHJveS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG4gIC8vIHJlc2V0IGRpc3BsYXksICM3NDFcbiAgdGhpcy5jc3Moe1xuICAgIGRpc3BsYXk6ICcnXG4gIH0pO1xufTtcblxucmV0dXJuIEl0ZW07XG5cbn0pKTtcblxuLyoqXG4gKiBJc290b3BlIExheW91dE1vZGVcbiAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqLyAvKmdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdpc290b3BlL2pzL2xheW91dC1tb2RlJyxbXG4gICAgICAgICdnZXQtc2l6ZS9nZXQtc2l6ZScsXG4gICAgICAgICdvdXRsYXllci9vdXRsYXllcidcbiAgICAgIF0sXG4gICAgICBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICByZXF1aXJlKCdnZXQtc2l6ZScpLFxuICAgICAgcmVxdWlyZSgnb3V0bGF5ZXInKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICB3aW5kb3cuSXNvdG9wZSA9IHdpbmRvdy5Jc290b3BlIHx8IHt9O1xuICAgIHdpbmRvdy5Jc290b3BlLkxheW91dE1vZGUgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LmdldFNpemUsXG4gICAgICB3aW5kb3cuT3V0bGF5ZXJcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggZ2V0U2l6ZSwgT3V0bGF5ZXIgKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBsYXlvdXQgbW9kZSBjbGFzc1xuICBmdW5jdGlvbiBMYXlvdXRNb2RlKCBpc290b3BlICkge1xuICAgIHRoaXMuaXNvdG9wZSA9IGlzb3RvcGU7XG4gICAgLy8gbGluayBwcm9wZXJ0aWVzXG4gICAgaWYgKCBpc290b3BlICkge1xuICAgICAgdGhpcy5vcHRpb25zID0gaXNvdG9wZS5vcHRpb25zWyB0aGlzLm5hbWVzcGFjZSBdO1xuICAgICAgdGhpcy5lbGVtZW50ID0gaXNvdG9wZS5lbGVtZW50O1xuICAgICAgdGhpcy5pdGVtcyA9IGlzb3RvcGUuZmlsdGVyZWRJdGVtcztcbiAgICAgIHRoaXMuc2l6ZSA9IGlzb3RvcGUuc2l6ZTtcbiAgICB9XG4gIH1cblxuICB2YXIgcHJvdG8gPSBMYXlvdXRNb2RlLnByb3RvdHlwZTtcblxuICAvKipcbiAgICogc29tZSBtZXRob2RzIHNob3VsZCBqdXN0IGRlZmVyIHRvIGRlZmF1bHQgT3V0bGF5ZXIgbWV0aG9kXG4gICAqIGFuZCByZWZlcmVuY2UgdGhlIElzb3RvcGUgaW5zdGFuY2UgYXMgYHRoaXNgXG4gICoqL1xuICB2YXIgZmFjYWRlTWV0aG9kcyA9IFtcbiAgICAnX3Jlc2V0TGF5b3V0JyxcbiAgICAnX2dldEl0ZW1MYXlvdXRQb3NpdGlvbicsXG4gICAgJ19tYW5hZ2VTdGFtcCcsXG4gICAgJ19nZXRDb250YWluZXJTaXplJyxcbiAgICAnX2dldEVsZW1lbnRPZmZzZXQnLFxuICAgICduZWVkc1Jlc2l6ZUxheW91dCcsXG4gICAgJ19nZXRPcHRpb24nXG4gIF07XG5cbiAgZmFjYWRlTWV0aG9kcy5mb3JFYWNoKCBmdW5jdGlvbiggbWV0aG9kTmFtZSApIHtcbiAgICBwcm90b1sgbWV0aG9kTmFtZSBdID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT3V0bGF5ZXIucHJvdG90eXBlWyBtZXRob2ROYW1lIF0uYXBwbHkoIHRoaXMuaXNvdG9wZSwgYXJndW1lbnRzICk7XG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gLS0tLS0gIC0tLS0tIC8vXG5cbiAgLy8gZm9yIGhvcml6b250YWwgbGF5b3V0IG1vZGVzLCBjaGVjayB2ZXJ0aWNhbCBzaXplXG4gIHByb3RvLm5lZWRzVmVydGljYWxSZXNpemVMYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAvLyBkb24ndCB0cmlnZ2VyIGlmIHNpemUgZGlkIG5vdCBjaGFuZ2VcbiAgICB2YXIgc2l6ZSA9IGdldFNpemUoIHRoaXMuaXNvdG9wZS5lbGVtZW50ICk7XG4gICAgLy8gY2hlY2sgdGhhdCB0aGlzLnNpemUgYW5kIHNpemUgYXJlIHRoZXJlXG4gICAgLy8gSUU4IHRyaWdnZXJzIHJlc2l6ZSBvbiBib2R5IHNpemUgY2hhbmdlLCBzbyB0aGV5IG1pZ2h0IG5vdCBiZVxuICAgIHZhciBoYXNTaXplcyA9IHRoaXMuaXNvdG9wZS5zaXplICYmIHNpemU7XG4gICAgcmV0dXJuIGhhc1NpemVzICYmIHNpemUuaW5uZXJIZWlnaHQgIT0gdGhpcy5pc290b3BlLnNpemUuaW5uZXJIZWlnaHQ7XG4gIH07XG5cbiAgLy8gLS0tLS0gbWVhc3VyZW1lbnRzIC0tLS0tIC8vXG5cbiAgcHJvdG8uX2dldE1lYXN1cmVtZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5pc290b3BlLl9nZXRNZWFzdXJlbWVudC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG4gIH07XG5cbiAgcHJvdG8uZ2V0Q29sdW1uV2lkdGggPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmdldFNlZ21lbnRTaXplKCAnY29sdW1uJywgJ1dpZHRoJyApO1xuICB9O1xuXG4gIHByb3RvLmdldFJvd0hlaWdodCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuZ2V0U2VnbWVudFNpemUoICdyb3cnLCAnSGVpZ2h0JyApO1xuICB9O1xuXG4gIC8qKlxuICAgKiBnZXQgY29sdW1uV2lkdGggb3Igcm93SGVpZ2h0XG4gICAqIHNlZ21lbnQ6ICdjb2x1bW4nIG9yICdyb3cnXG4gICAqIHNpemUgJ1dpZHRoJyBvciAnSGVpZ2h0J1xuICAqKi9cbiAgcHJvdG8uZ2V0U2VnbWVudFNpemUgPSBmdW5jdGlvbiggc2VnbWVudCwgc2l6ZSApIHtcbiAgICB2YXIgc2VnbWVudE5hbWUgPSBzZWdtZW50ICsgc2l6ZTtcbiAgICB2YXIgb3V0ZXJTaXplID0gJ291dGVyJyArIHNpemU7XG4gICAgLy8gY29sdW1uV2lkdGggLyBvdXRlcldpZHRoIC8vIHJvd0hlaWdodCAvIG91dGVySGVpZ2h0XG4gICAgdGhpcy5fZ2V0TWVhc3VyZW1lbnQoIHNlZ21lbnROYW1lLCBvdXRlclNpemUgKTtcbiAgICAvLyBnb3Qgcm93SGVpZ2h0IG9yIGNvbHVtbldpZHRoLCB3ZSBjYW4gY2hpbGxcbiAgICBpZiAoIHRoaXNbIHNlZ21lbnROYW1lIF0gKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGZhbGwgYmFjayB0byBpdGVtIG9mIGZpcnN0IGVsZW1lbnRcbiAgICB2YXIgZmlyc3RJdGVtU2l6ZSA9IHRoaXMuZ2V0Rmlyc3RJdGVtU2l6ZSgpO1xuICAgIHRoaXNbIHNlZ21lbnROYW1lIF0gPSBmaXJzdEl0ZW1TaXplICYmIGZpcnN0SXRlbVNpemVbIG91dGVyU2l6ZSBdIHx8XG4gICAgICAvLyBvciBzaXplIG9mIGNvbnRhaW5lclxuICAgICAgdGhpcy5pc290b3BlLnNpemVbICdpbm5lcicgKyBzaXplIF07XG4gIH07XG5cbiAgcHJvdG8uZ2V0Rmlyc3RJdGVtU2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBmaXJzdEl0ZW0gPSB0aGlzLmlzb3RvcGUuZmlsdGVyZWRJdGVtc1swXTtcbiAgICByZXR1cm4gZmlyc3RJdGVtICYmIGZpcnN0SXRlbS5lbGVtZW50ICYmIGdldFNpemUoIGZpcnN0SXRlbS5lbGVtZW50ICk7XG4gIH07XG5cbiAgLy8gLS0tLS0gbWV0aG9kcyB0aGF0IHNob3VsZCByZWZlcmVuY2UgaXNvdG9wZSAtLS0tLSAvL1xuXG4gIHByb3RvLmxheW91dCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaXNvdG9wZS5sYXlvdXQuYXBwbHkoIHRoaXMuaXNvdG9wZSwgYXJndW1lbnRzICk7XG4gIH07XG5cbiAgcHJvdG8uZ2V0U2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaXNvdG9wZS5nZXRTaXplKCk7XG4gICAgdGhpcy5zaXplID0gdGhpcy5pc290b3BlLnNpemU7XG4gIH07XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gY3JlYXRlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbiAgTGF5b3V0TW9kZS5tb2RlcyA9IHt9O1xuXG4gIExheW91dE1vZGUuY3JlYXRlID0gZnVuY3Rpb24oIG5hbWVzcGFjZSwgb3B0aW9ucyApIHtcblxuICAgIGZ1bmN0aW9uIE1vZGUoKSB7XG4gICAgICBMYXlvdXRNb2RlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcbiAgICB9XG5cbiAgICBNb2RlLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoIHByb3RvICk7XG4gICAgTW9kZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBNb2RlO1xuXG4gICAgLy8gZGVmYXVsdCBvcHRpb25zXG4gICAgaWYgKCBvcHRpb25zICkge1xuICAgICAgTW9kZS5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG5cbiAgICBNb2RlLnByb3RvdHlwZS5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gICAgLy8gcmVnaXN0ZXIgaW4gSXNvdG9wZVxuICAgIExheW91dE1vZGUubW9kZXNbIG5hbWVzcGFjZSBdID0gTW9kZTtcblxuICAgIHJldHVybiBNb2RlO1xuICB9O1xuXG4gIHJldHVybiBMYXlvdXRNb2RlO1xuXG59KSk7XG5cbi8qIVxuICogTWFzb25yeSB2NC4yLjBcbiAqIENhc2NhZGluZyBncmlkIGxheW91dCBsaWJyYXJ5XG4gKiBodHRwOi8vbWFzb25yeS5kZXNhbmRyby5jb21cbiAqIE1JVCBMaWNlbnNlXG4gKiBieSBEYXZpZCBEZVNhbmRyb1xuICovXG5cbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qZ2xvYmFscyBkZWZpbmUsIG1vZHVsZSwgcmVxdWlyZSAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRFxuICAgIGRlZmluZSggJ21hc29ucnkvbWFzb25yeScsW1xuICAgICAgICAnb3V0bGF5ZXIvb3V0bGF5ZXInLFxuICAgICAgICAnZ2V0LXNpemUvZ2V0LXNpemUnXG4gICAgICBdLFxuICAgICAgZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgcmVxdWlyZSgnb3V0bGF5ZXInKSxcbiAgICAgIHJlcXVpcmUoJ2dldC1zaXplJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93Lk1hc29ucnkgPSBmYWN0b3J5KFxuICAgICAgd2luZG93Lk91dGxheWVyLFxuICAgICAgd2luZG93LmdldFNpemVcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggT3V0bGF5ZXIsIGdldFNpemUgKSB7XG5cblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBtYXNvbnJ5RGVmaW5pdGlvbiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gIC8vIGNyZWF0ZSBhbiBPdXRsYXllciBsYXlvdXQgY2xhc3NcbiAgdmFyIE1hc29ucnkgPSBPdXRsYXllci5jcmVhdGUoJ21hc29ucnknKTtcbiAgLy8gaXNGaXRXaWR0aCAtPiBmaXRXaWR0aFxuICBNYXNvbnJ5LmNvbXBhdE9wdGlvbnMuZml0V2lkdGggPSAnaXNGaXRXaWR0aCc7XG5cbiAgdmFyIHByb3RvID0gTWFzb25yeS5wcm90b3R5cGU7XG5cbiAgcHJvdG8uX3Jlc2V0TGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5nZXRTaXplKCk7XG4gICAgdGhpcy5fZ2V0TWVhc3VyZW1lbnQoICdjb2x1bW5XaWR0aCcsICdvdXRlcldpZHRoJyApO1xuICAgIHRoaXMuX2dldE1lYXN1cmVtZW50KCAnZ3V0dGVyJywgJ291dGVyV2lkdGgnICk7XG4gICAgdGhpcy5tZWFzdXJlQ29sdW1ucygpO1xuXG4gICAgLy8gcmVzZXQgY29sdW1uIFlcbiAgICB0aGlzLmNvbFlzID0gW107XG4gICAgZm9yICggdmFyIGk9MDsgaSA8IHRoaXMuY29sczsgaSsrICkge1xuICAgICAgdGhpcy5jb2xZcy5wdXNoKCAwICk7XG4gICAgfVxuXG4gICAgdGhpcy5tYXhZID0gMDtcbiAgICB0aGlzLmhvcml6b250YWxDb2xJbmRleCA9IDA7XG4gIH07XG5cbiAgcHJvdG8ubWVhc3VyZUNvbHVtbnMgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmdldENvbnRhaW5lcldpZHRoKCk7XG4gICAgLy8gaWYgY29sdW1uV2lkdGggaXMgMCwgZGVmYXVsdCB0byBvdXRlcldpZHRoIG9mIGZpcnN0IGl0ZW1cbiAgICBpZiAoICF0aGlzLmNvbHVtbldpZHRoICkge1xuICAgICAgdmFyIGZpcnN0SXRlbSA9IHRoaXMuaXRlbXNbMF07XG4gICAgICB2YXIgZmlyc3RJdGVtRWxlbSA9IGZpcnN0SXRlbSAmJiBmaXJzdEl0ZW0uZWxlbWVudDtcbiAgICAgIC8vIGNvbHVtbldpZHRoIGZhbGwgYmFjayB0byBpdGVtIG9mIGZpcnN0IGVsZW1lbnRcbiAgICAgIHRoaXMuY29sdW1uV2lkdGggPSBmaXJzdEl0ZW1FbGVtICYmIGdldFNpemUoIGZpcnN0SXRlbUVsZW0gKS5vdXRlcldpZHRoIHx8XG4gICAgICAgIC8vIGlmIGZpcnN0IGVsZW0gaGFzIG5vIHdpZHRoLCBkZWZhdWx0IHRvIHNpemUgb2YgY29udGFpbmVyXG4gICAgICAgIHRoaXMuY29udGFpbmVyV2lkdGg7XG4gICAgfVxuXG4gICAgdmFyIGNvbHVtbldpZHRoID0gdGhpcy5jb2x1bW5XaWR0aCArPSB0aGlzLmd1dHRlcjtcblxuICAgIC8vIGNhbGN1bGF0ZSBjb2x1bW5zXG4gICAgdmFyIGNvbnRhaW5lcldpZHRoID0gdGhpcy5jb250YWluZXJXaWR0aCArIHRoaXMuZ3V0dGVyO1xuICAgIHZhciBjb2xzID0gY29udGFpbmVyV2lkdGggLyBjb2x1bW5XaWR0aDtcbiAgICAvLyBmaXggcm91bmRpbmcgZXJyb3JzLCB0eXBpY2FsbHkgd2l0aCBndXR0ZXJzXG4gICAgdmFyIGV4Y2VzcyA9IGNvbHVtbldpZHRoIC0gY29udGFpbmVyV2lkdGggJSBjb2x1bW5XaWR0aDtcbiAgICAvLyBpZiBvdmVyc2hvb3QgaXMgbGVzcyB0aGFuIGEgcGl4ZWwsIHJvdW5kIHVwLCBvdGhlcndpc2UgZmxvb3IgaXRcbiAgICB2YXIgbWF0aE1ldGhvZCA9IGV4Y2VzcyAmJiBleGNlc3MgPCAxID8gJ3JvdW5kJyA6ICdmbG9vcic7XG4gICAgY29scyA9IE1hdGhbIG1hdGhNZXRob2QgXSggY29scyApO1xuICAgIHRoaXMuY29scyA9IE1hdGgubWF4KCBjb2xzLCAxICk7XG4gIH07XG5cbiAgcHJvdG8uZ2V0Q29udGFpbmVyV2lkdGggPSBmdW5jdGlvbigpIHtcbiAgICAvLyBjb250YWluZXIgaXMgcGFyZW50IGlmIGZpdCB3aWR0aFxuICAgIHZhciBpc0ZpdFdpZHRoID0gdGhpcy5fZ2V0T3B0aW9uKCdmaXRXaWR0aCcpO1xuICAgIHZhciBjb250YWluZXIgPSBpc0ZpdFdpZHRoID8gdGhpcy5lbGVtZW50LnBhcmVudE5vZGUgOiB0aGlzLmVsZW1lbnQ7XG4gICAgLy8gY2hlY2sgdGhhdCB0aGlzLnNpemUgYW5kIHNpemUgYXJlIHRoZXJlXG4gICAgLy8gSUU4IHRyaWdnZXJzIHJlc2l6ZSBvbiBib2R5IHNpemUgY2hhbmdlLCBzbyB0aGV5IG1pZ2h0IG5vdCBiZVxuICAgIHZhciBzaXplID0gZ2V0U2l6ZSggY29udGFpbmVyICk7XG4gICAgdGhpcy5jb250YWluZXJXaWR0aCA9IHNpemUgJiYgc2l6ZS5pbm5lcldpZHRoO1xuICB9O1xuXG4gIHByb3RvLl9nZXRJdGVtTGF5b3V0UG9zaXRpb24gPSBmdW5jdGlvbiggaXRlbSApIHtcbiAgICBpdGVtLmdldFNpemUoKTtcbiAgICAvLyBob3cgbWFueSBjb2x1bW5zIGRvZXMgdGhpcyBicmljayBzcGFuXG4gICAgdmFyIHJlbWFpbmRlciA9IGl0ZW0uc2l6ZS5vdXRlcldpZHRoICUgdGhpcy5jb2x1bW5XaWR0aDtcbiAgICB2YXIgbWF0aE1ldGhvZCA9IHJlbWFpbmRlciAmJiByZW1haW5kZXIgPCAxID8gJ3JvdW5kJyA6ICdjZWlsJztcbiAgICAvLyByb3VuZCBpZiBvZmYgYnkgMSBwaXhlbCwgb3RoZXJ3aXNlIHVzZSBjZWlsXG4gICAgdmFyIGNvbFNwYW4gPSBNYXRoWyBtYXRoTWV0aG9kIF0oIGl0ZW0uc2l6ZS5vdXRlcldpZHRoIC8gdGhpcy5jb2x1bW5XaWR0aCApO1xuICAgIGNvbFNwYW4gPSBNYXRoLm1pbiggY29sU3BhbiwgdGhpcy5jb2xzICk7XG4gICAgLy8gdXNlIGhvcml6b250YWwgb3IgdG9wIGNvbHVtbiBwb3NpdGlvblxuICAgIHZhciBjb2xQb3NNZXRob2QgPSB0aGlzLm9wdGlvbnMuaG9yaXpvbnRhbE9yZGVyID9cbiAgICAgICdfZ2V0SG9yaXpvbnRhbENvbFBvc2l0aW9uJyA6ICdfZ2V0VG9wQ29sUG9zaXRpb24nO1xuICAgIHZhciBjb2xQb3NpdGlvbiA9IHRoaXNbIGNvbFBvc01ldGhvZCBdKCBjb2xTcGFuLCBpdGVtICk7XG4gICAgLy8gcG9zaXRpb24gdGhlIGJyaWNrXG4gICAgdmFyIHBvc2l0aW9uID0ge1xuICAgICAgeDogdGhpcy5jb2x1bW5XaWR0aCAqIGNvbFBvc2l0aW9uLmNvbCxcbiAgICAgIHk6IGNvbFBvc2l0aW9uLnlcbiAgICB9O1xuICAgIC8vIGFwcGx5IHNldEhlaWdodCB0byBuZWNlc3NhcnkgY29sdW1uc1xuICAgIHZhciBzZXRIZWlnaHQgPSBjb2xQb3NpdGlvbi55ICsgaXRlbS5zaXplLm91dGVySGVpZ2h0O1xuICAgIHZhciBzZXRNYXggPSBjb2xTcGFuICsgY29sUG9zaXRpb24uY29sO1xuICAgIGZvciAoIHZhciBpID0gY29sUG9zaXRpb24uY29sOyBpIDwgc2V0TWF4OyBpKysgKSB7XG4gICAgICB0aGlzLmNvbFlzW2ldID0gc2V0SGVpZ2h0O1xuICAgIH1cblxuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfTtcblxuICBwcm90by5fZ2V0VG9wQ29sUG9zaXRpb24gPSBmdW5jdGlvbiggY29sU3BhbiApIHtcbiAgICB2YXIgY29sR3JvdXAgPSB0aGlzLl9nZXRUb3BDb2xHcm91cCggY29sU3BhbiApO1xuICAgIC8vIGdldCB0aGUgbWluaW11bSBZIHZhbHVlIGZyb20gdGhlIGNvbHVtbnNcbiAgICB2YXIgbWluaW11bVkgPSBNYXRoLm1pbi5hcHBseSggTWF0aCwgY29sR3JvdXAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICBjb2w6IGNvbEdyb3VwLmluZGV4T2YoIG1pbmltdW1ZICksXG4gICAgICB5OiBtaW5pbXVtWSxcbiAgICB9O1xuICB9O1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gY29sU3BhbiAtIG51bWJlciBvZiBjb2x1bW5zIHRoZSBlbGVtZW50IHNwYW5zXG4gICAqIEByZXR1cm5zIHtBcnJheX0gY29sR3JvdXBcbiAgICovXG4gIHByb3RvLl9nZXRUb3BDb2xHcm91cCA9IGZ1bmN0aW9uKCBjb2xTcGFuICkge1xuICAgIGlmICggY29sU3BhbiA8IDIgKSB7XG4gICAgICAvLyBpZiBicmljayBzcGFucyBvbmx5IG9uZSBjb2x1bW4sIHVzZSBhbGwgdGhlIGNvbHVtbiBZc1xuICAgICAgcmV0dXJuIHRoaXMuY29sWXM7XG4gICAgfVxuXG4gICAgdmFyIGNvbEdyb3VwID0gW107XG4gICAgLy8gaG93IG1hbnkgZGlmZmVyZW50IHBsYWNlcyBjb3VsZCB0aGlzIGJyaWNrIGZpdCBob3Jpem9udGFsbHlcbiAgICB2YXIgZ3JvdXBDb3VudCA9IHRoaXMuY29scyArIDEgLSBjb2xTcGFuO1xuICAgIC8vIGZvciBlYWNoIGdyb3VwIHBvdGVudGlhbCBob3Jpem9udGFsIHBvc2l0aW9uXG4gICAgZm9yICggdmFyIGkgPSAwOyBpIDwgZ3JvdXBDb3VudDsgaSsrICkge1xuICAgICAgY29sR3JvdXBbaV0gPSB0aGlzLl9nZXRDb2xHcm91cFkoIGksIGNvbFNwYW4gKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbEdyb3VwO1xuICB9O1xuXG4gIHByb3RvLl9nZXRDb2xHcm91cFkgPSBmdW5jdGlvbiggY29sLCBjb2xTcGFuICkge1xuICAgIGlmICggY29sU3BhbiA8IDIgKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb2xZc1sgY29sIF07XG4gICAgfVxuICAgIC8vIG1ha2UgYW4gYXJyYXkgb2YgY29sWSB2YWx1ZXMgZm9yIHRoYXQgb25lIGdyb3VwXG4gICAgdmFyIGdyb3VwQ29sWXMgPSB0aGlzLmNvbFlzLnNsaWNlKCBjb2wsIGNvbCArIGNvbFNwYW4gKTtcbiAgICAvLyBhbmQgZ2V0IHRoZSBtYXggdmFsdWUgb2YgdGhlIGFycmF5XG4gICAgcmV0dXJuIE1hdGgubWF4LmFwcGx5KCBNYXRoLCBncm91cENvbFlzICk7XG4gIH07XG5cbiAgLy8gZ2V0IGNvbHVtbiBwb3NpdGlvbiBiYXNlZCBvbiBob3Jpem9udGFsIGluZGV4LiAjODczXG4gIHByb3RvLl9nZXRIb3Jpem9udGFsQ29sUG9zaXRpb24gPSBmdW5jdGlvbiggY29sU3BhbiwgaXRlbSApIHtcbiAgICB2YXIgY29sID0gdGhpcy5ob3Jpem9udGFsQ29sSW5kZXggJSB0aGlzLmNvbHM7XG4gICAgdmFyIGlzT3ZlciA9IGNvbFNwYW4gPiAxICYmIGNvbCArIGNvbFNwYW4gPiB0aGlzLmNvbHM7XG4gICAgLy8gc2hpZnQgdG8gbmV4dCByb3cgaWYgaXRlbSBjYW4ndCBmaXQgb24gY3VycmVudCByb3dcbiAgICBjb2wgPSBpc092ZXIgPyAwIDogY29sO1xuICAgIC8vIGRvbid0IGxldCB6ZXJvLXNpemUgaXRlbXMgdGFrZSB1cCBzcGFjZVxuICAgIHZhciBoYXNTaXplID0gaXRlbS5zaXplLm91dGVyV2lkdGggJiYgaXRlbS5zaXplLm91dGVySGVpZ2h0O1xuICAgIHRoaXMuaG9yaXpvbnRhbENvbEluZGV4ID0gaGFzU2l6ZSA/IGNvbCArIGNvbFNwYW4gOiB0aGlzLmhvcml6b250YWxDb2xJbmRleDtcblxuICAgIHJldHVybiB7XG4gICAgICBjb2w6IGNvbCxcbiAgICAgIHk6IHRoaXMuX2dldENvbEdyb3VwWSggY29sLCBjb2xTcGFuICksXG4gICAgfTtcbiAgfTtcblxuICBwcm90by5fbWFuYWdlU3RhbXAgPSBmdW5jdGlvbiggc3RhbXAgKSB7XG4gICAgdmFyIHN0YW1wU2l6ZSA9IGdldFNpemUoIHN0YW1wICk7XG4gICAgdmFyIG9mZnNldCA9IHRoaXMuX2dldEVsZW1lbnRPZmZzZXQoIHN0YW1wICk7XG4gICAgLy8gZ2V0IHRoZSBjb2x1bW5zIHRoYXQgdGhpcyBzdGFtcCBhZmZlY3RzXG4gICAgdmFyIGlzT3JpZ2luTGVmdCA9IHRoaXMuX2dldE9wdGlvbignb3JpZ2luTGVmdCcpO1xuICAgIHZhciBmaXJzdFggPSBpc09yaWdpbkxlZnQgPyBvZmZzZXQubGVmdCA6IG9mZnNldC5yaWdodDtcbiAgICB2YXIgbGFzdFggPSBmaXJzdFggKyBzdGFtcFNpemUub3V0ZXJXaWR0aDtcbiAgICB2YXIgZmlyc3RDb2wgPSBNYXRoLmZsb29yKCBmaXJzdFggLyB0aGlzLmNvbHVtbldpZHRoICk7XG4gICAgZmlyc3RDb2wgPSBNYXRoLm1heCggMCwgZmlyc3RDb2wgKTtcbiAgICB2YXIgbGFzdENvbCA9IE1hdGguZmxvb3IoIGxhc3RYIC8gdGhpcy5jb2x1bW5XaWR0aCApO1xuICAgIC8vIGxhc3RDb2wgc2hvdWxkIG5vdCBnbyBvdmVyIGlmIG11bHRpcGxlIG9mIGNvbHVtbldpZHRoICM0MjVcbiAgICBsYXN0Q29sIC09IGxhc3RYICUgdGhpcy5jb2x1bW5XaWR0aCA/IDAgOiAxO1xuICAgIGxhc3RDb2wgPSBNYXRoLm1pbiggdGhpcy5jb2xzIC0gMSwgbGFzdENvbCApO1xuICAgIC8vIHNldCBjb2xZcyB0byBib3R0b20gb2YgdGhlIHN0YW1wXG5cbiAgICB2YXIgaXNPcmlnaW5Ub3AgPSB0aGlzLl9nZXRPcHRpb24oJ29yaWdpblRvcCcpO1xuICAgIHZhciBzdGFtcE1heFkgPSAoIGlzT3JpZ2luVG9wID8gb2Zmc2V0LnRvcCA6IG9mZnNldC5ib3R0b20gKSArXG4gICAgICBzdGFtcFNpemUub3V0ZXJIZWlnaHQ7XG4gICAgZm9yICggdmFyIGkgPSBmaXJzdENvbDsgaSA8PSBsYXN0Q29sOyBpKysgKSB7XG4gICAgICB0aGlzLmNvbFlzW2ldID0gTWF0aC5tYXgoIHN0YW1wTWF4WSwgdGhpcy5jb2xZc1tpXSApO1xuICAgIH1cbiAgfTtcblxuICBwcm90by5fZ2V0Q29udGFpbmVyU2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMubWF4WSA9IE1hdGgubWF4LmFwcGx5KCBNYXRoLCB0aGlzLmNvbFlzICk7XG4gICAgdmFyIHNpemUgPSB7XG4gICAgICBoZWlnaHQ6IHRoaXMubWF4WVxuICAgIH07XG5cbiAgICBpZiAoIHRoaXMuX2dldE9wdGlvbignZml0V2lkdGgnKSApIHtcbiAgICAgIHNpemUud2lkdGggPSB0aGlzLl9nZXRDb250YWluZXJGaXRXaWR0aCgpO1xuICAgIH1cblxuICAgIHJldHVybiBzaXplO1xuICB9O1xuXG4gIHByb3RvLl9nZXRDb250YWluZXJGaXRXaWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB1bnVzZWRDb2xzID0gMDtcbiAgICAvLyBjb3VudCB1bnVzZWQgY29sdW1uc1xuICAgIHZhciBpID0gdGhpcy5jb2xzO1xuICAgIHdoaWxlICggLS1pICkge1xuICAgICAgaWYgKCB0aGlzLmNvbFlzW2ldICE9PSAwICkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHVudXNlZENvbHMrKztcbiAgICB9XG4gICAgLy8gZml0IGNvbnRhaW5lciB0byBjb2x1bW5zIHRoYXQgaGF2ZSBiZWVuIHVzZWRcbiAgICByZXR1cm4gKCB0aGlzLmNvbHMgLSB1bnVzZWRDb2xzICkgKiB0aGlzLmNvbHVtbldpZHRoIC0gdGhpcy5ndXR0ZXI7XG4gIH07XG5cbiAgcHJvdG8ubmVlZHNSZXNpemVMYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgcHJldmlvdXNXaWR0aCA9IHRoaXMuY29udGFpbmVyV2lkdGg7XG4gICAgdGhpcy5nZXRDb250YWluZXJXaWR0aCgpO1xuICAgIHJldHVybiBwcmV2aW91c1dpZHRoICE9IHRoaXMuY29udGFpbmVyV2lkdGg7XG4gIH07XG5cbiAgcmV0dXJuIE1hc29ucnk7XG5cbn0pKTtcblxuLyohXG4gKiBNYXNvbnJ5IGxheW91dCBtb2RlXG4gKiBzdWItY2xhc3NlcyBNYXNvbnJ5XG4gKiBodHRwOi8vbWFzb25yeS5kZXNhbmRyby5jb21cbiAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqLyAvKmdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdpc290b3BlL2pzL2xheW91dC1tb2Rlcy9tYXNvbnJ5JyxbXG4gICAgICAgICcuLi9sYXlvdXQtbW9kZScsXG4gICAgICAgICdtYXNvbnJ5L21hc29ucnknXG4gICAgICBdLFxuICAgICAgZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgcmVxdWlyZSgnLi4vbGF5b3V0LW1vZGUnKSxcbiAgICAgIHJlcXVpcmUoJ21hc29ucnktbGF5b3V0JylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgZmFjdG9yeShcbiAgICAgIHdpbmRvdy5Jc290b3BlLkxheW91dE1vZGUsXG4gICAgICB3aW5kb3cuTWFzb25yeVxuICAgICk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCBMYXlvdXRNb2RlLCBNYXNvbnJ5ICkge1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBtYXNvbnJ5RGVmaW5pdGlvbiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gIC8vIGNyZWF0ZSBhbiBPdXRsYXllciBsYXlvdXQgY2xhc3NcbiAgdmFyIE1hc29ucnlNb2RlID0gTGF5b3V0TW9kZS5jcmVhdGUoJ21hc29ucnknKTtcblxuICB2YXIgcHJvdG8gPSBNYXNvbnJ5TW9kZS5wcm90b3R5cGU7XG5cbiAgdmFyIGtlZXBNb2RlTWV0aG9kcyA9IHtcbiAgICBfZ2V0RWxlbWVudE9mZnNldDogdHJ1ZSxcbiAgICBsYXlvdXQ6IHRydWUsXG4gICAgX2dldE1lYXN1cmVtZW50OiB0cnVlXG4gIH07XG5cbiAgLy8gaW5oZXJpdCBNYXNvbnJ5IHByb3RvdHlwZVxuICBmb3IgKCB2YXIgbWV0aG9kIGluIE1hc29ucnkucHJvdG90eXBlICkge1xuICAgIC8vIGRvIG5vdCBpbmhlcml0IG1vZGUgbWV0aG9kc1xuICAgIGlmICggIWtlZXBNb2RlTWV0aG9kc1sgbWV0aG9kIF0gKSB7XG4gICAgICBwcm90b1sgbWV0aG9kIF0gPSBNYXNvbnJ5LnByb3RvdHlwZVsgbWV0aG9kIF07XG4gICAgfVxuICB9XG5cbiAgdmFyIG1lYXN1cmVDb2x1bW5zID0gcHJvdG8ubWVhc3VyZUNvbHVtbnM7XG4gIHByb3RvLm1lYXN1cmVDb2x1bW5zID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gc2V0IGl0ZW1zLCB1c2VkIGlmIG1lYXN1cmluZyBmaXJzdCBpdGVtXG4gICAgdGhpcy5pdGVtcyA9IHRoaXMuaXNvdG9wZS5maWx0ZXJlZEl0ZW1zO1xuICAgIG1lYXN1cmVDb2x1bW5zLmNhbGwoIHRoaXMgKTtcbiAgfTtcblxuICAvLyBwb2ludCB0byBtb2RlIG9wdGlvbnMgZm9yIGZpdFdpZHRoXG4gIHZhciBfZ2V0T3B0aW9uID0gcHJvdG8uX2dldE9wdGlvbjtcbiAgcHJvdG8uX2dldE9wdGlvbiA9IGZ1bmN0aW9uKCBvcHRpb24gKSB7XG4gICAgaWYgKCBvcHRpb24gPT0gJ2ZpdFdpZHRoJyApIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaXNGaXRXaWR0aCAhPT0gdW5kZWZpbmVkID9cbiAgICAgICAgdGhpcy5vcHRpb25zLmlzRml0V2lkdGggOiB0aGlzLm9wdGlvbnMuZml0V2lkdGg7XG4gICAgfVxuICAgIHJldHVybiBfZ2V0T3B0aW9uLmFwcGx5KCB0aGlzLmlzb3RvcGUsIGFyZ3VtZW50cyApO1xuICB9O1xuXG4gIHJldHVybiBNYXNvbnJ5TW9kZTtcblxufSkpO1xuXG4vKipcbiAqIGZpdFJvd3MgbGF5b3V0IG1vZGVcbiAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqLyAvKmdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdpc290b3BlL2pzL2xheW91dC1tb2Rlcy9maXQtcm93cycsW1xuICAgICAgICAnLi4vbGF5b3V0LW1vZGUnXG4gICAgICBdLFxuICAgICAgZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgZXhwb3J0cyA9PSAnb2JqZWN0JyApIHtcbiAgICAvLyBDb21tb25KU1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShcbiAgICAgIHJlcXVpcmUoJy4uL2xheW91dC1tb2RlJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgZmFjdG9yeShcbiAgICAgIHdpbmRvdy5Jc290b3BlLkxheW91dE1vZGVcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggTGF5b3V0TW9kZSApIHtcbid1c2Ugc3RyaWN0JztcblxudmFyIEZpdFJvd3MgPSBMYXlvdXRNb2RlLmNyZWF0ZSgnZml0Um93cycpO1xuXG52YXIgcHJvdG8gPSBGaXRSb3dzLnByb3RvdHlwZTtcblxucHJvdG8uX3Jlc2V0TGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMueCA9IDA7XG4gIHRoaXMueSA9IDA7XG4gIHRoaXMubWF4WSA9IDA7XG4gIHRoaXMuX2dldE1lYXN1cmVtZW50KCAnZ3V0dGVyJywgJ291dGVyV2lkdGgnICk7XG59O1xuXG5wcm90by5fZ2V0SXRlbUxheW91dFBvc2l0aW9uID0gZnVuY3Rpb24oIGl0ZW0gKSB7XG4gIGl0ZW0uZ2V0U2l6ZSgpO1xuXG4gIHZhciBpdGVtV2lkdGggPSBpdGVtLnNpemUub3V0ZXJXaWR0aCArIHRoaXMuZ3V0dGVyO1xuICAvLyBpZiB0aGlzIGVsZW1lbnQgY2Fubm90IGZpdCBpbiB0aGUgY3VycmVudCByb3dcbiAgdmFyIGNvbnRhaW5lcldpZHRoID0gdGhpcy5pc290b3BlLnNpemUuaW5uZXJXaWR0aCArIHRoaXMuZ3V0dGVyO1xuICBpZiAoIHRoaXMueCAhPT0gMCAmJiBpdGVtV2lkdGggKyB0aGlzLnggPiBjb250YWluZXJXaWR0aCApIHtcbiAgICB0aGlzLnggPSAwO1xuICAgIHRoaXMueSA9IHRoaXMubWF4WTtcbiAgfVxuXG4gIHZhciBwb3NpdGlvbiA9IHtcbiAgICB4OiB0aGlzLngsXG4gICAgeTogdGhpcy55XG4gIH07XG5cbiAgdGhpcy5tYXhZID0gTWF0aC5tYXgoIHRoaXMubWF4WSwgdGhpcy55ICsgaXRlbS5zaXplLm91dGVySGVpZ2h0ICk7XG4gIHRoaXMueCArPSBpdGVtV2lkdGg7XG5cbiAgcmV0dXJuIHBvc2l0aW9uO1xufTtcblxucHJvdG8uX2dldENvbnRhaW5lclNpemUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHsgaGVpZ2h0OiB0aGlzLm1heFkgfTtcbn07XG5cbnJldHVybiBGaXRSb3dzO1xuXG59KSk7XG5cbi8qKlxuICogdmVydGljYWwgbGF5b3V0IG1vZGVcbiAqL1xuXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqLyAvKmdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoICdpc290b3BlL2pzL2xheW91dC1tb2Rlcy92ZXJ0aWNhbCcsW1xuICAgICAgICAnLi4vbGF5b3V0LW1vZGUnXG4gICAgICBdLFxuICAgICAgZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgcmVxdWlyZSgnLi4vbGF5b3V0LW1vZGUnKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICBmYWN0b3J5KFxuICAgICAgd2luZG93Lklzb3RvcGUuTGF5b3V0TW9kZVxuICAgICk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCBMYXlvdXRNb2RlICkge1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVmVydGljYWwgPSBMYXlvdXRNb2RlLmNyZWF0ZSggJ3ZlcnRpY2FsJywge1xuICBob3Jpem9udGFsQWxpZ25tZW50OiAwXG59KTtcblxudmFyIHByb3RvID0gVmVydGljYWwucHJvdG90eXBlO1xuXG5wcm90by5fcmVzZXRMYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy55ID0gMDtcbn07XG5cbnByb3RvLl9nZXRJdGVtTGF5b3V0UG9zaXRpb24gPSBmdW5jdGlvbiggaXRlbSApIHtcbiAgaXRlbS5nZXRTaXplKCk7XG4gIHZhciB4ID0gKCB0aGlzLmlzb3RvcGUuc2l6ZS5pbm5lcldpZHRoIC0gaXRlbS5zaXplLm91dGVyV2lkdGggKSAqXG4gICAgdGhpcy5vcHRpb25zLmhvcml6b250YWxBbGlnbm1lbnQ7XG4gIHZhciB5ID0gdGhpcy55O1xuICB0aGlzLnkgKz0gaXRlbS5zaXplLm91dGVySGVpZ2h0O1xuICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG59O1xuXG5wcm90by5fZ2V0Q29udGFpbmVyU2l6ZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4geyBoZWlnaHQ6IHRoaXMueSB9O1xufTtcblxucmV0dXJuIFZlcnRpY2FsO1xuXG59KSk7XG5cbi8qIVxuICogSXNvdG9wZSB2My4wLjRcbiAqXG4gKiBMaWNlbnNlZCBHUEx2MyBmb3Igb3BlbiBzb3VyY2UgdXNlXG4gKiBvciBJc290b3BlIENvbW1lcmNpYWwgTGljZW5zZSBmb3IgY29tbWVyY2lhbCB1c2VcbiAqXG4gKiBodHRwOi8vaXNvdG9wZS5tZXRhZml6enkuY29cbiAqIENvcHlyaWdodCAyMDE3IE1ldGFmaXp6eVxuICovXG5cbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qZ2xvYmFscyBkZWZpbmUsIG1vZHVsZSwgcmVxdWlyZSAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRFxuICAgIGRlZmluZSggW1xuICAgICAgICAnb3V0bGF5ZXIvb3V0bGF5ZXInLFxuICAgICAgICAnZ2V0LXNpemUvZ2V0LXNpemUnLFxuICAgICAgICAnZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3Rvci9tYXRjaGVzLXNlbGVjdG9yJyxcbiAgICAgICAgJ2Zpenp5LXVpLXV0aWxzL3V0aWxzJyxcbiAgICAgICAgJ2lzb3RvcGUvanMvaXRlbScsXG4gICAgICAgICdpc290b3BlL2pzL2xheW91dC1tb2RlJyxcbiAgICAgICAgLy8gaW5jbHVkZSBkZWZhdWx0IGxheW91dCBtb2Rlc1xuICAgICAgICAnaXNvdG9wZS9qcy9sYXlvdXQtbW9kZXMvbWFzb25yeScsXG4gICAgICAgICdpc290b3BlL2pzL2xheW91dC1tb2Rlcy9maXQtcm93cycsXG4gICAgICAgICdpc290b3BlL2pzL2xheW91dC1tb2Rlcy92ZXJ0aWNhbCdcbiAgICAgIF0sXG4gICAgICBmdW5jdGlvbiggT3V0bGF5ZXIsIGdldFNpemUsIG1hdGNoZXNTZWxlY3RvciwgdXRpbHMsIEl0ZW0sIExheW91dE1vZGUgKSB7XG4gICAgICAgIHJldHVybiBmYWN0b3J5KCB3aW5kb3csIE91dGxheWVyLCBnZXRTaXplLCBtYXRjaGVzU2VsZWN0b3IsIHV0aWxzLCBJdGVtLCBMYXlvdXRNb2RlICk7XG4gICAgICB9KTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KU1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShcbiAgICAgIHdpbmRvdyxcbiAgICAgIHJlcXVpcmUoJ291dGxheWVyJyksXG4gICAgICByZXF1aXJlKCdnZXQtc2l6ZScpLFxuICAgICAgcmVxdWlyZSgnZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3RvcicpLFxuICAgICAgcmVxdWlyZSgnZml6enktdWktdXRpbHMnKSxcbiAgICAgIHJlcXVpcmUoJ2lzb3RvcGUvanMvaXRlbScpLFxuICAgICAgcmVxdWlyZSgnaXNvdG9wZS9qcy9sYXlvdXQtbW9kZScpLFxuICAgICAgLy8gaW5jbHVkZSBkZWZhdWx0IGxheW91dCBtb2Rlc1xuICAgICAgcmVxdWlyZSgnaXNvdG9wZS9qcy9sYXlvdXQtbW9kZXMvbWFzb25yeScpLFxuICAgICAgcmVxdWlyZSgnaXNvdG9wZS9qcy9sYXlvdXQtbW9kZXMvZml0LXJvd3MnKSxcbiAgICAgIHJlcXVpcmUoJ2lzb3RvcGUvanMvbGF5b3V0LW1vZGVzL3ZlcnRpY2FsJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93Lklzb3RvcGUgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgd2luZG93Lk91dGxheWVyLFxuICAgICAgd2luZG93LmdldFNpemUsXG4gICAgICB3aW5kb3cubWF0Y2hlc1NlbGVjdG9yLFxuICAgICAgd2luZG93LmZpenp5VUlVdGlscyxcbiAgICAgIHdpbmRvdy5Jc290b3BlLkl0ZW0sXG4gICAgICB3aW5kb3cuSXNvdG9wZS5MYXlvdXRNb2RlXG4gICAgKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoIHdpbmRvdywgT3V0bGF5ZXIsIGdldFNpemUsIG1hdGNoZXNTZWxlY3RvciwgdXRpbHMsXG4gIEl0ZW0sIExheW91dE1vZGUgKSB7XG5cblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB2YXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbnZhciBqUXVlcnkgPSB3aW5kb3cualF1ZXJ5O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBoZWxwZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbnZhciB0cmltID0gU3RyaW5nLnByb3RvdHlwZS50cmltID9cbiAgZnVuY3Rpb24oIHN0ciApIHtcbiAgICByZXR1cm4gc3RyLnRyaW0oKTtcbiAgfSA6XG4gIGZ1bmN0aW9uKCBzdHIgKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKCAvXlxccyt8XFxzKyQvZywgJycgKTtcbiAgfTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gaXNvdG9wZURlZmluaXRpb24gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAvLyBjcmVhdGUgYW4gT3V0bGF5ZXIgbGF5b3V0IGNsYXNzXG4gIHZhciBJc290b3BlID0gT3V0bGF5ZXIuY3JlYXRlKCAnaXNvdG9wZScsIHtcbiAgICBsYXlvdXRNb2RlOiAnbWFzb25yeScsXG4gICAgaXNKUXVlcnlGaWx0ZXJpbmc6IHRydWUsXG4gICAgc29ydEFzY2VuZGluZzogdHJ1ZVxuICB9KTtcblxuICBJc290b3BlLkl0ZW0gPSBJdGVtO1xuICBJc290b3BlLkxheW91dE1vZGUgPSBMYXlvdXRNb2RlO1xuXG4gIHZhciBwcm90byA9IElzb3RvcGUucHJvdG90eXBlO1xuXG4gIHByb3RvLl9jcmVhdGUgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLml0ZW1HVUlEID0gMDtcbiAgICAvLyBmdW5jdGlvbnMgdGhhdCBzb3J0IGl0ZW1zXG4gICAgdGhpcy5fc29ydGVycyA9IHt9O1xuICAgIHRoaXMuX2dldFNvcnRlcnMoKTtcbiAgICAvLyBjYWxsIHN1cGVyXG4gICAgT3V0bGF5ZXIucHJvdG90eXBlLl9jcmVhdGUuY2FsbCggdGhpcyApO1xuXG4gICAgLy8gY3JlYXRlIGxheW91dCBtb2Rlc1xuICAgIHRoaXMubW9kZXMgPSB7fTtcbiAgICAvLyBzdGFydCBmaWx0ZXJlZEl0ZW1zIHdpdGggYWxsIGl0ZW1zXG4gICAgdGhpcy5maWx0ZXJlZEl0ZW1zID0gdGhpcy5pdGVtcztcbiAgICAvLyBrZWVwIG9mIHRyYWNrIG9mIHNvcnRCeXNcbiAgICB0aGlzLnNvcnRIaXN0b3J5ID0gWyAnb3JpZ2luYWwtb3JkZXInIF07XG4gICAgLy8gY3JlYXRlIGZyb20gcmVnaXN0ZXJlZCBsYXlvdXQgbW9kZXNcbiAgICBmb3IgKCB2YXIgbmFtZSBpbiBMYXlvdXRNb2RlLm1vZGVzICkge1xuICAgICAgdGhpcy5faW5pdExheW91dE1vZGUoIG5hbWUgKTtcbiAgICB9XG4gIH07XG5cbiAgcHJvdG8ucmVsb2FkSXRlbXMgPSBmdW5jdGlvbigpIHtcbiAgICAvLyByZXNldCBpdGVtIElEIGNvdW50ZXJcbiAgICB0aGlzLml0ZW1HVUlEID0gMDtcbiAgICAvLyBjYWxsIHN1cGVyXG4gICAgT3V0bGF5ZXIucHJvdG90eXBlLnJlbG9hZEl0ZW1zLmNhbGwoIHRoaXMgKTtcbiAgfTtcblxuICBwcm90by5faXRlbWl6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpdGVtcyA9IE91dGxheWVyLnByb3RvdHlwZS5faXRlbWl6ZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG4gICAgLy8gYXNzaWduIElEIGZvciBvcmlnaW5hbC1vcmRlclxuICAgIGZvciAoIHZhciBpPTA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKyApIHtcbiAgICAgIHZhciBpdGVtID0gaXRlbXNbaV07XG4gICAgICBpdGVtLmlkID0gdGhpcy5pdGVtR1VJRCsrO1xuICAgIH1cbiAgICB0aGlzLl91cGRhdGVJdGVtc1NvcnREYXRhKCBpdGVtcyApO1xuICAgIHJldHVybiBpdGVtcztcbiAgfTtcblxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGxheW91dCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gIHByb3RvLl9pbml0TGF5b3V0TW9kZSA9IGZ1bmN0aW9uKCBuYW1lICkge1xuICAgIHZhciBNb2RlID0gTGF5b3V0TW9kZS5tb2Rlc1sgbmFtZSBdO1xuICAgIC8vIHNldCBtb2RlIG9wdGlvbnNcbiAgICAvLyBIQUNLIGV4dGVuZCBpbml0aWFsIG9wdGlvbnMsIGJhY2stZmlsbCBpbiBkZWZhdWx0IG9wdGlvbnNcbiAgICB2YXIgaW5pdGlhbE9wdHMgPSB0aGlzLm9wdGlvbnNbIG5hbWUgXSB8fCB7fTtcbiAgICB0aGlzLm9wdGlvbnNbIG5hbWUgXSA9IE1vZGUub3B0aW9ucyA/XG4gICAgICB1dGlscy5leHRlbmQoIE1vZGUub3B0aW9ucywgaW5pdGlhbE9wdHMgKSA6IGluaXRpYWxPcHRzO1xuICAgIC8vIGluaXQgbGF5b3V0IG1vZGUgaW5zdGFuY2VcbiAgICB0aGlzLm1vZGVzWyBuYW1lIF0gPSBuZXcgTW9kZSggdGhpcyApO1xuICB9O1xuXG5cbiAgcHJvdG8ubGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gaWYgZmlyc3QgdGltZSBkb2luZyBsYXlvdXQsIGRvIGFsbCBtYWdpY1xuICAgIGlmICggIXRoaXMuX2lzTGF5b3V0SW5pdGVkICYmIHRoaXMuX2dldE9wdGlvbignaW5pdExheW91dCcpICkge1xuICAgICAgdGhpcy5hcnJhbmdlKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX2xheW91dCgpO1xuICB9O1xuXG4gIC8vIHByaXZhdGUgbWV0aG9kIHRvIGJlIHVzZWQgaW4gbGF5b3V0KCkgJiBtYWdpYygpXG4gIHByb3RvLl9sYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAvLyBkb24ndCBhbmltYXRlIGZpcnN0IGxheW91dFxuICAgIHZhciBpc0luc3RhbnQgPSB0aGlzLl9nZXRJc0luc3RhbnQoKTtcbiAgICAvLyBsYXlvdXQgZmxvd1xuICAgIHRoaXMuX3Jlc2V0TGF5b3V0KCk7XG4gICAgdGhpcy5fbWFuYWdlU3RhbXBzKCk7XG4gICAgdGhpcy5sYXlvdXRJdGVtcyggdGhpcy5maWx0ZXJlZEl0ZW1zLCBpc0luc3RhbnQgKTtcblxuICAgIC8vIGZsYWcgZm9yIGluaXRhbGl6ZWRcbiAgICB0aGlzLl9pc0xheW91dEluaXRlZCA9IHRydWU7XG4gIH07XG5cbiAgLy8gZmlsdGVyICsgc29ydCArIGxheW91dFxuICBwcm90by5hcnJhbmdlID0gZnVuY3Rpb24oIG9wdHMgKSB7XG4gICAgLy8gc2V0IGFueSBvcHRpb25zIHBhc3NcbiAgICB0aGlzLm9wdGlvbiggb3B0cyApO1xuICAgIHRoaXMuX2dldElzSW5zdGFudCgpO1xuICAgIC8vIGZpbHRlciwgc29ydCwgYW5kIGxheW91dFxuXG4gICAgLy8gZmlsdGVyXG4gICAgdmFyIGZpbHRlcmVkID0gdGhpcy5fZmlsdGVyKCB0aGlzLml0ZW1zICk7XG4gICAgdGhpcy5maWx0ZXJlZEl0ZW1zID0gZmlsdGVyZWQubWF0Y2hlcztcblxuICAgIHRoaXMuX2JpbmRBcnJhbmdlQ29tcGxldGUoKTtcblxuICAgIGlmICggdGhpcy5faXNJbnN0YW50ICkge1xuICAgICAgdGhpcy5fbm9UcmFuc2l0aW9uKCB0aGlzLl9oaWRlUmV2ZWFsLCBbIGZpbHRlcmVkIF0gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZVJldmVhbCggZmlsdGVyZWQgKTtcbiAgICB9XG5cbiAgICB0aGlzLl9zb3J0KCk7XG4gICAgdGhpcy5fbGF5b3V0KCk7XG4gIH07XG4gIC8vIGFsaWFzIHRvIF9pbml0IGZvciBtYWluIHBsdWdpbiBtZXRob2RcbiAgcHJvdG8uX2luaXQgPSBwcm90by5hcnJhbmdlO1xuXG4gIHByb3RvLl9oaWRlUmV2ZWFsID0gZnVuY3Rpb24oIGZpbHRlcmVkICkge1xuICAgIHRoaXMucmV2ZWFsKCBmaWx0ZXJlZC5uZWVkUmV2ZWFsICk7XG4gICAgdGhpcy5oaWRlKCBmaWx0ZXJlZC5uZWVkSGlkZSApO1xuICB9O1xuXG4gIC8vIEhBQ0tcbiAgLy8gRG9uJ3QgYW5pbWF0ZS90cmFuc2l0aW9uIGZpcnN0IGxheW91dFxuICAvLyBPciBkb24ndCBhbmltYXRlL3RyYW5zaXRpb24gb3RoZXIgbGF5b3V0c1xuICBwcm90by5fZ2V0SXNJbnN0YW50ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGlzTGF5b3V0SW5zdGFudCA9IHRoaXMuX2dldE9wdGlvbignbGF5b3V0SW5zdGFudCcpO1xuICAgIHZhciBpc0luc3RhbnQgPSBpc0xheW91dEluc3RhbnQgIT09IHVuZGVmaW5lZCA/IGlzTGF5b3V0SW5zdGFudCA6XG4gICAgICAhdGhpcy5faXNMYXlvdXRJbml0ZWQ7XG4gICAgdGhpcy5faXNJbnN0YW50ID0gaXNJbnN0YW50O1xuICAgIHJldHVybiBpc0luc3RhbnQ7XG4gIH07XG5cbiAgLy8gbGlzdGVuIGZvciBsYXlvdXRDb21wbGV0ZSwgaGlkZUNvbXBsZXRlIGFuZCByZXZlYWxDb21wbGV0ZVxuICAvLyB0byB0cmlnZ2VyIGFycmFuZ2VDb21wbGV0ZVxuICBwcm90by5fYmluZEFycmFuZ2VDb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIGxpc3RlbiBmb3IgMyBldmVudHMgdG8gdHJpZ2dlciBhcnJhbmdlQ29tcGxldGVcbiAgICB2YXIgaXNMYXlvdXRDb21wbGV0ZSwgaXNIaWRlQ29tcGxldGUsIGlzUmV2ZWFsQ29tcGxldGU7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICBmdW5jdGlvbiBhcnJhbmdlUGFyYWxsZWxDYWxsYmFjaygpIHtcbiAgICAgIGlmICggaXNMYXlvdXRDb21wbGV0ZSAmJiBpc0hpZGVDb21wbGV0ZSAmJiBpc1JldmVhbENvbXBsZXRlICkge1xuICAgICAgICBfdGhpcy5kaXNwYXRjaEV2ZW50KCAnYXJyYW5nZUNvbXBsZXRlJywgbnVsbCwgWyBfdGhpcy5maWx0ZXJlZEl0ZW1zIF0gKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5vbmNlKCAnbGF5b3V0Q29tcGxldGUnLCBmdW5jdGlvbigpIHtcbiAgICAgIGlzTGF5b3V0Q29tcGxldGUgPSB0cnVlO1xuICAgICAgYXJyYW5nZVBhcmFsbGVsQ2FsbGJhY2soKTtcbiAgICB9KTtcbiAgICB0aGlzLm9uY2UoICdoaWRlQ29tcGxldGUnLCBmdW5jdGlvbigpIHtcbiAgICAgIGlzSGlkZUNvbXBsZXRlID0gdHJ1ZTtcbiAgICAgIGFycmFuZ2VQYXJhbGxlbENhbGxiYWNrKCk7XG4gICAgfSk7XG4gICAgdGhpcy5vbmNlKCAncmV2ZWFsQ29tcGxldGUnLCBmdW5jdGlvbigpIHtcbiAgICAgIGlzUmV2ZWFsQ29tcGxldGUgPSB0cnVlO1xuICAgICAgYXJyYW5nZVBhcmFsbGVsQ2FsbGJhY2soKTtcbiAgICB9KTtcbiAgfTtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBmaWx0ZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICBwcm90by5fZmlsdGVyID0gZnVuY3Rpb24oIGl0ZW1zICkge1xuICAgIHZhciBmaWx0ZXIgPSB0aGlzLm9wdGlvbnMuZmlsdGVyO1xuICAgIGZpbHRlciA9IGZpbHRlciB8fCAnKic7XG4gICAgdmFyIG1hdGNoZXMgPSBbXTtcbiAgICB2YXIgaGlkZGVuTWF0Y2hlZCA9IFtdO1xuICAgIHZhciB2aXNpYmxlVW5tYXRjaGVkID0gW107XG5cbiAgICB2YXIgdGVzdCA9IHRoaXMuX2dldEZpbHRlclRlc3QoIGZpbHRlciApO1xuXG4gICAgLy8gdGVzdCBlYWNoIGl0ZW1cbiAgICBmb3IgKCB2YXIgaT0wOyBpIDwgaXRlbXMubGVuZ3RoOyBpKysgKSB7XG4gICAgICB2YXIgaXRlbSA9IGl0ZW1zW2ldO1xuICAgICAgaWYgKCBpdGVtLmlzSWdub3JlZCApIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICAvLyBhZGQgaXRlbSB0byBlaXRoZXIgbWF0Y2hlZCBvciB1bm1hdGNoZWQgZ3JvdXBcbiAgICAgIHZhciBpc01hdGNoZWQgPSB0ZXN0KCBpdGVtICk7XG4gICAgICAvLyBpdGVtLmlzRmlsdGVyTWF0Y2hlZCA9IGlzTWF0Y2hlZDtcbiAgICAgIC8vIGFkZCB0byBtYXRjaGVzIGlmIGl0cyBhIG1hdGNoXG4gICAgICBpZiAoIGlzTWF0Y2hlZCApIHtcbiAgICAgICAgbWF0Y2hlcy5wdXNoKCBpdGVtICk7XG4gICAgICB9XG4gICAgICAvLyBhZGQgdG8gYWRkaXRpb25hbCBncm91cCBpZiBpdGVtIG5lZWRzIHRvIGJlIGhpZGRlbiBvciByZXZlYWxlZFxuICAgICAgaWYgKCBpc01hdGNoZWQgJiYgaXRlbS5pc0hpZGRlbiApIHtcbiAgICAgICAgaGlkZGVuTWF0Y2hlZC5wdXNoKCBpdGVtICk7XG4gICAgICB9IGVsc2UgaWYgKCAhaXNNYXRjaGVkICYmICFpdGVtLmlzSGlkZGVuICkge1xuICAgICAgICB2aXNpYmxlVW5tYXRjaGVkLnB1c2goIGl0ZW0gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyByZXR1cm4gY29sbGVjdGlvbnMgb2YgaXRlbXMgdG8gYmUgbWFuaXB1bGF0ZWRcbiAgICByZXR1cm4ge1xuICAgICAgbWF0Y2hlczogbWF0Y2hlcyxcbiAgICAgIG5lZWRSZXZlYWw6IGhpZGRlbk1hdGNoZWQsXG4gICAgICBuZWVkSGlkZTogdmlzaWJsZVVubWF0Y2hlZFxuICAgIH07XG4gIH07XG5cbiAgLy8gZ2V0IGEgalF1ZXJ5LCBmdW5jdGlvbiwgb3IgYSBtYXRjaGVzU2VsZWN0b3IgdGVzdCBnaXZlbiB0aGUgZmlsdGVyXG4gIHByb3RvLl9nZXRGaWx0ZXJUZXN0ID0gZnVuY3Rpb24oIGZpbHRlciApIHtcbiAgICBpZiAoIGpRdWVyeSAmJiB0aGlzLm9wdGlvbnMuaXNKUXVlcnlGaWx0ZXJpbmcgKSB7XG4gICAgICAvLyB1c2UgalF1ZXJ5XG4gICAgICByZXR1cm4gZnVuY3Rpb24oIGl0ZW0gKSB7XG4gICAgICAgIHJldHVybiBqUXVlcnkoIGl0ZW0uZWxlbWVudCApLmlzKCBmaWx0ZXIgKTtcbiAgICAgIH07XG4gICAgfVxuICAgIGlmICggdHlwZW9mIGZpbHRlciA9PSAnZnVuY3Rpb24nICkge1xuICAgICAgLy8gdXNlIGZpbHRlciBhcyBmdW5jdGlvblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgICAgICByZXR1cm4gZmlsdGVyKCBpdGVtLmVsZW1lbnQgKTtcbiAgICAgIH07XG4gICAgfVxuICAgIC8vIGRlZmF1bHQsIHVzZSBmaWx0ZXIgYXMgc2VsZWN0b3Igc3RyaW5nXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgICAgcmV0dXJuIG1hdGNoZXNTZWxlY3RvciggaXRlbS5lbGVtZW50LCBmaWx0ZXIgKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHNvcnRpbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAvKipcbiAgICogQHBhcmFtcyB7QXJyYXl9IGVsZW1zXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHByb3RvLnVwZGF0ZVNvcnREYXRhID0gZnVuY3Rpb24oIGVsZW1zICkge1xuICAgIC8vIGdldCBpdGVtc1xuICAgIHZhciBpdGVtcztcbiAgICBpZiAoIGVsZW1zICkge1xuICAgICAgZWxlbXMgPSB1dGlscy5tYWtlQXJyYXkoIGVsZW1zICk7XG4gICAgICBpdGVtcyA9IHRoaXMuZ2V0SXRlbXMoIGVsZW1zICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVwZGF0ZSBhbGwgaXRlbXMgaWYgbm8gZWxlbXMgcHJvdmlkZWRcbiAgICAgIGl0ZW1zID0gdGhpcy5pdGVtcztcbiAgICB9XG5cbiAgICB0aGlzLl9nZXRTb3J0ZXJzKCk7XG4gICAgdGhpcy5fdXBkYXRlSXRlbXNTb3J0RGF0YSggaXRlbXMgKTtcbiAgfTtcblxuICBwcm90by5fZ2V0U29ydGVycyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBnZXRTb3J0RGF0YSA9IHRoaXMub3B0aW9ucy5nZXRTb3J0RGF0YTtcbiAgICBmb3IgKCB2YXIga2V5IGluIGdldFNvcnREYXRhICkge1xuICAgICAgdmFyIHNvcnRlciA9IGdldFNvcnREYXRhWyBrZXkgXTtcbiAgICAgIHRoaXMuX3NvcnRlcnNbIGtleSBdID0gbXVuZ2VTb3J0ZXIoIHNvcnRlciApO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQHBhcmFtcyB7QXJyYXl9IGl0ZW1zIC0gb2YgSXNvdG9wZS5JdGVtc1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgcHJvdG8uX3VwZGF0ZUl0ZW1zU29ydERhdGEgPSBmdW5jdGlvbiggaXRlbXMgKSB7XG4gICAgLy8gZG8gbm90IHVwZGF0ZSBpZiBubyBpdGVtc1xuICAgIHZhciBsZW4gPSBpdGVtcyAmJiBpdGVtcy5sZW5ndGg7XG5cbiAgICBmb3IgKCB2YXIgaT0wOyBsZW4gJiYgaSA8IGxlbjsgaSsrICkge1xuICAgICAgdmFyIGl0ZW0gPSBpdGVtc1tpXTtcbiAgICAgIGl0ZW0udXBkYXRlU29ydERhdGEoKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gLS0tLS0gbXVuZ2Ugc29ydGVyIC0tLS0tIC8vXG5cbiAgLy8gZW5jYXBzdWxhdGUgdGhpcywgYXMgd2UganVzdCBuZWVkIG11bmdlU29ydGVyXG4gIC8vIG90aGVyIGZ1bmN0aW9ucyBpbiBoZXJlIGFyZSBqdXN0IGZvciBtdW5naW5nXG4gIHZhciBtdW5nZVNvcnRlciA9ICggZnVuY3Rpb24oKSB7XG4gICAgLy8gYWRkIGEgbWFnaWMgbGF5ZXIgdG8gc29ydGVycyBmb3IgY29udmllbmVudCBzaG9ydGhhbmRzXG4gICAgLy8gYC5mb28tYmFyYCB3aWxsIHVzZSB0aGUgdGV4dCBvZiAuZm9vLWJhciBxdWVyeVNlbGVjdG9yXG4gICAgLy8gYFtmb28tYmFyXWAgd2lsbCB1c2UgYXR0cmlidXRlXG4gICAgLy8geW91IGNhbiBhbHNvIGFkZCBwYXJzZXJcbiAgICAvLyBgLmZvby1iYXIgcGFyc2VJbnRgIHdpbGwgcGFyc2UgdGhhdCBhcyBhIG51bWJlclxuICAgIGZ1bmN0aW9uIG11bmdlU29ydGVyKCBzb3J0ZXIgKSB7XG4gICAgICAvLyBpZiBub3QgYSBzdHJpbmcsIHJldHVybiBmdW5jdGlvbiBvciB3aGF0ZXZlciBpdCBpc1xuICAgICAgaWYgKCB0eXBlb2Ygc29ydGVyICE9ICdzdHJpbmcnICkge1xuICAgICAgICByZXR1cm4gc29ydGVyO1xuICAgICAgfVxuICAgICAgLy8gcGFyc2UgdGhlIHNvcnRlciBzdHJpbmdcbiAgICAgIHZhciBhcmdzID0gdHJpbSggc29ydGVyICkuc3BsaXQoJyAnKTtcbiAgICAgIHZhciBxdWVyeSA9IGFyZ3NbMF07XG4gICAgICAvLyBjaGVjayBpZiBxdWVyeSBsb29rcyBsaWtlIFthbi1hdHRyaWJ1dGVdXG4gICAgICB2YXIgYXR0ck1hdGNoID0gcXVlcnkubWF0Y2goIC9eXFxbKC4rKVxcXSQvICk7XG4gICAgICB2YXIgYXR0ciA9IGF0dHJNYXRjaCAmJiBhdHRyTWF0Y2hbMV07XG4gICAgICB2YXIgZ2V0VmFsdWUgPSBnZXRWYWx1ZUdldHRlciggYXR0ciwgcXVlcnkgKTtcbiAgICAgIC8vIHVzZSBzZWNvbmQgYXJndW1lbnQgYXMgYSBwYXJzZXJcbiAgICAgIHZhciBwYXJzZXIgPSBJc290b3BlLnNvcnREYXRhUGFyc2Vyc1sgYXJnc1sxXSBdO1xuICAgICAgLy8gcGFyc2UgdGhlIHZhbHVlLCBpZiB0aGVyZSB3YXMgYSBwYXJzZXJcbiAgICAgIHNvcnRlciA9IHBhcnNlciA/IGZ1bmN0aW9uKCBlbGVtICkge1xuICAgICAgICByZXR1cm4gZWxlbSAmJiBwYXJzZXIoIGdldFZhbHVlKCBlbGVtICkgKTtcbiAgICAgIH0gOlxuICAgICAgLy8gb3RoZXJ3aXNlIGp1c3QgcmV0dXJuIHZhbHVlXG4gICAgICBmdW5jdGlvbiggZWxlbSApIHtcbiAgICAgICAgcmV0dXJuIGVsZW0gJiYgZ2V0VmFsdWUoIGVsZW0gKTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBzb3J0ZXI7XG4gICAgfVxuXG4gICAgLy8gZ2V0IGFuIGF0dHJpYnV0ZSBnZXR0ZXIsIG9yIGdldCB0ZXh0IG9mIHRoZSBxdWVyeVNlbGVjdG9yXG4gICAgZnVuY3Rpb24gZ2V0VmFsdWVHZXR0ZXIoIGF0dHIsIHF1ZXJ5ICkge1xuICAgICAgLy8gaWYgcXVlcnkgbG9va3MgbGlrZSBbZm9vLWJhcl0sIGdldCBhdHRyaWJ1dGVcbiAgICAgIGlmICggYXR0ciApIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGdldEF0dHJpYnV0ZSggZWxlbSApIHtcbiAgICAgICAgICByZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIGF0dHIgKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gb3RoZXJ3aXNlLCBhc3N1bWUgaXRzIGEgcXVlcnlTZWxlY3RvciwgYW5kIGdldCBpdHMgdGV4dFxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGdldENoaWxkVGV4dCggZWxlbSApIHtcbiAgICAgICAgdmFyIGNoaWxkID0gZWxlbS5xdWVyeVNlbGVjdG9yKCBxdWVyeSApO1xuICAgICAgICByZXR1cm4gY2hpbGQgJiYgY2hpbGQudGV4dENvbnRlbnQ7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtdW5nZVNvcnRlcjtcbiAgfSkoKTtcblxuICAvLyBwYXJzZXJzIHVzZWQgaW4gZ2V0U29ydERhdGEgc2hvcnRjdXQgc3RyaW5nc1xuICBJc290b3BlLnNvcnREYXRhUGFyc2VycyA9IHtcbiAgICAncGFyc2VJbnQnOiBmdW5jdGlvbiggdmFsICkge1xuICAgICAgcmV0dXJuIHBhcnNlSW50KCB2YWwsIDEwICk7XG4gICAgfSxcbiAgICAncGFyc2VGbG9hdCc6IGZ1bmN0aW9uKCB2YWwgKSB7XG4gICAgICByZXR1cm4gcGFyc2VGbG9hdCggdmFsICk7XG4gICAgfVxuICB9O1xuXG4gIC8vIC0tLS0tIHNvcnQgbWV0aG9kIC0tLS0tIC8vXG5cbiAgLy8gc29ydCBmaWx0ZXJlZEl0ZW0gb3JkZXJcbiAgcHJvdG8uX3NvcnQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoICF0aGlzLm9wdGlvbnMuc29ydEJ5ICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBrZWVwIHRyYWNrIG9mIHNvcnRCeSBIaXN0b3J5XG4gICAgdmFyIHNvcnRCeXMgPSB1dGlscy5tYWtlQXJyYXkoIHRoaXMub3B0aW9ucy5zb3J0QnkgKTtcbiAgICBpZiAoICF0aGlzLl9nZXRJc1NhbWVTb3J0QnkoIHNvcnRCeXMgKSApIHtcbiAgICAgIC8vIGNvbmNhdCBhbGwgc29ydEJ5IGFuZCBzb3J0SGlzdG9yeSwgYWRkIHRvIGZyb250LCBvbGRlc3QgZ29lcyBpbiBsYXN0XG4gICAgICB0aGlzLnNvcnRIaXN0b3J5ID0gc29ydEJ5cy5jb25jYXQoIHRoaXMuc29ydEhpc3RvcnkgKTtcbiAgICB9XG4gICAgLy8gc29ydCBtYWdpY1xuICAgIHZhciBpdGVtU29ydGVyID0gZ2V0SXRlbVNvcnRlciggdGhpcy5zb3J0SGlzdG9yeSwgdGhpcy5vcHRpb25zLnNvcnRBc2NlbmRpbmcgKTtcbiAgICB0aGlzLmZpbHRlcmVkSXRlbXMuc29ydCggaXRlbVNvcnRlciApO1xuICB9O1xuXG4gIC8vIGNoZWNrIGlmIHNvcnRCeXMgaXMgc2FtZSBhcyBzdGFydCBvZiBzb3J0SGlzdG9yeVxuICBwcm90by5fZ2V0SXNTYW1lU29ydEJ5ID0gZnVuY3Rpb24oIHNvcnRCeXMgKSB7XG4gICAgZm9yICggdmFyIGk9MDsgaSA8IHNvcnRCeXMubGVuZ3RoOyBpKysgKSB7XG4gICAgICBpZiAoIHNvcnRCeXNbaV0gIT0gdGhpcy5zb3J0SGlzdG9yeVtpXSApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICAvLyByZXR1cm5zIGEgZnVuY3Rpb24gdXNlZCBmb3Igc29ydGluZ1xuICBmdW5jdGlvbiBnZXRJdGVtU29ydGVyKCBzb3J0QnlzLCBzb3J0QXNjICkge1xuICAgIHJldHVybiBmdW5jdGlvbiBzb3J0ZXIoIGl0ZW1BLCBpdGVtQiApIHtcbiAgICAgIC8vIGN5Y2xlIHRocm91Z2ggYWxsIHNvcnRLZXlzXG4gICAgICBmb3IgKCB2YXIgaSA9IDA7IGkgPCBzb3J0QnlzLmxlbmd0aDsgaSsrICkge1xuICAgICAgICB2YXIgc29ydEJ5ID0gc29ydEJ5c1tpXTtcbiAgICAgICAgdmFyIGEgPSBpdGVtQS5zb3J0RGF0YVsgc29ydEJ5IF07XG4gICAgICAgIHZhciBiID0gaXRlbUIuc29ydERhdGFbIHNvcnRCeSBdO1xuICAgICAgICBpZiAoIGEgPiBiIHx8IGEgPCBiICkge1xuICAgICAgICAgIC8vIGlmIHNvcnRBc2MgaXMgYW4gb2JqZWN0LCB1c2UgdGhlIHZhbHVlIGdpdmVuIHRoZSBzb3J0Qnkga2V5XG4gICAgICAgICAgdmFyIGlzQXNjZW5kaW5nID0gc29ydEFzY1sgc29ydEJ5IF0gIT09IHVuZGVmaW5lZCA/IHNvcnRBc2NbIHNvcnRCeSBdIDogc29ydEFzYztcbiAgICAgICAgICB2YXIgZGlyZWN0aW9uID0gaXNBc2NlbmRpbmcgPyAxIDogLTE7XG4gICAgICAgICAgcmV0dXJuICggYSA+IGIgPyAxIDogLTEgKSAqIGRpcmVjdGlvbjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIDA7XG4gICAgfTtcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIG1ldGhvZHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAvLyBnZXQgbGF5b3V0IG1vZGVcbiAgcHJvdG8uX21vZGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbGF5b3V0TW9kZSA9IHRoaXMub3B0aW9ucy5sYXlvdXRNb2RlO1xuICAgIHZhciBtb2RlID0gdGhpcy5tb2Rlc1sgbGF5b3V0TW9kZSBdO1xuICAgIGlmICggIW1vZGUgKSB7XG4gICAgICAvLyBUT0RPIGNvbnNvbGUuZXJyb3JcbiAgICAgIHRocm93IG5ldyBFcnJvciggJ05vIGxheW91dCBtb2RlOiAnICsgbGF5b3V0TW9kZSApO1xuICAgIH1cbiAgICAvLyBIQUNLIHN5bmMgbW9kZSdzIG9wdGlvbnNcbiAgICAvLyBhbnkgb3B0aW9ucyBzZXQgYWZ0ZXIgaW5pdCBmb3IgbGF5b3V0IG1vZGUgbmVlZCB0byBiZSBzeW5jZWRcbiAgICBtb2RlLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnNbIGxheW91dE1vZGUgXTtcbiAgICByZXR1cm4gbW9kZTtcbiAgfTtcblxuICBwcm90by5fcmVzZXRMYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAvLyB0cmlnZ2VyIG9yaWdpbmFsIHJlc2V0IGxheW91dFxuICAgIE91dGxheWVyLnByb3RvdHlwZS5fcmVzZXRMYXlvdXQuY2FsbCggdGhpcyApO1xuICAgIHRoaXMuX21vZGUoKS5fcmVzZXRMYXlvdXQoKTtcbiAgfTtcblxuICBwcm90by5fZ2V0SXRlbUxheW91dFBvc2l0aW9uID0gZnVuY3Rpb24oIGl0ZW0gICkge1xuICAgIHJldHVybiB0aGlzLl9tb2RlKCkuX2dldEl0ZW1MYXlvdXRQb3NpdGlvbiggaXRlbSApO1xuICB9O1xuXG4gIHByb3RvLl9tYW5hZ2VTdGFtcCA9IGZ1bmN0aW9uKCBzdGFtcCApIHtcbiAgICB0aGlzLl9tb2RlKCkuX21hbmFnZVN0YW1wKCBzdGFtcCApO1xuICB9O1xuXG4gIHByb3RvLl9nZXRDb250YWluZXJTaXplID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX21vZGUoKS5fZ2V0Q29udGFpbmVyU2l6ZSgpO1xuICB9O1xuXG4gIHByb3RvLm5lZWRzUmVzaXplTGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX21vZGUoKS5uZWVkc1Jlc2l6ZUxheW91dCgpO1xuICB9O1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGFkZGluZyAmIHJlbW92aW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbiAgLy8gSEVBRFMgVVAgb3ZlcndyaXRlcyBkZWZhdWx0IE91dGxheWVyIGFwcGVuZGVkXG4gIHByb3RvLmFwcGVuZGVkID0gZnVuY3Rpb24oIGVsZW1zICkge1xuICAgIHZhciBpdGVtcyA9IHRoaXMuYWRkSXRlbXMoIGVsZW1zICk7XG4gICAgaWYgKCAhaXRlbXMubGVuZ3RoICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBmaWx0ZXIsIGxheW91dCwgcmV2ZWFsIG5ldyBpdGVtc1xuICAgIHZhciBmaWx0ZXJlZEl0ZW1zID0gdGhpcy5fZmlsdGVyUmV2ZWFsQWRkZWQoIGl0ZW1zICk7XG4gICAgLy8gYWRkIHRvIGZpbHRlcmVkSXRlbXNcbiAgICB0aGlzLmZpbHRlcmVkSXRlbXMgPSB0aGlzLmZpbHRlcmVkSXRlbXMuY29uY2F0KCBmaWx0ZXJlZEl0ZW1zICk7XG4gIH07XG5cbiAgLy8gSEVBRFMgVVAgb3ZlcndyaXRlcyBkZWZhdWx0IE91dGxheWVyIHByZXBlbmRlZFxuICBwcm90by5wcmVwZW5kZWQgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gICAgdmFyIGl0ZW1zID0gdGhpcy5faXRlbWl6ZSggZWxlbXMgKTtcbiAgICBpZiAoICFpdGVtcy5sZW5ndGggKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIHN0YXJ0IG5ldyBsYXlvdXRcbiAgICB0aGlzLl9yZXNldExheW91dCgpO1xuICAgIHRoaXMuX21hbmFnZVN0YW1wcygpO1xuICAgIC8vIGZpbHRlciwgbGF5b3V0LCByZXZlYWwgbmV3IGl0ZW1zXG4gICAgdmFyIGZpbHRlcmVkSXRlbXMgPSB0aGlzLl9maWx0ZXJSZXZlYWxBZGRlZCggaXRlbXMgKTtcbiAgICAvLyBsYXlvdXQgcHJldmlvdXMgaXRlbXNcbiAgICB0aGlzLmxheW91dEl0ZW1zKCB0aGlzLmZpbHRlcmVkSXRlbXMgKTtcbiAgICAvLyBhZGQgdG8gaXRlbXMgYW5kIGZpbHRlcmVkSXRlbXNcbiAgICB0aGlzLmZpbHRlcmVkSXRlbXMgPSBmaWx0ZXJlZEl0ZW1zLmNvbmNhdCggdGhpcy5maWx0ZXJlZEl0ZW1zICk7XG4gICAgdGhpcy5pdGVtcyA9IGl0ZW1zLmNvbmNhdCggdGhpcy5pdGVtcyApO1xuICB9O1xuXG4gIHByb3RvLl9maWx0ZXJSZXZlYWxBZGRlZCA9IGZ1bmN0aW9uKCBpdGVtcyApIHtcbiAgICB2YXIgZmlsdGVyZWQgPSB0aGlzLl9maWx0ZXIoIGl0ZW1zICk7XG4gICAgdGhpcy5oaWRlKCBmaWx0ZXJlZC5uZWVkSGlkZSApO1xuICAgIC8vIHJldmVhbCBhbGwgbmV3IGl0ZW1zXG4gICAgdGhpcy5yZXZlYWwoIGZpbHRlcmVkLm1hdGNoZXMgKTtcbiAgICAvLyBsYXlvdXQgbmV3IGl0ZW1zLCBubyB0cmFuc2l0aW9uXG4gICAgdGhpcy5sYXlvdXRJdGVtcyggZmlsdGVyZWQubWF0Y2hlcywgdHJ1ZSApO1xuICAgIHJldHVybiBmaWx0ZXJlZC5tYXRjaGVzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBGaWx0ZXIsIHNvcnQsIGFuZCBsYXlvdXQgbmV3bHktYXBwZW5kZWQgaXRlbSBlbGVtZW50c1xuICAgKiBAcGFyYW0ge0FycmF5IG9yIE5vZGVMaXN0IG9yIEVsZW1lbnR9IGVsZW1zXG4gICAqL1xuICBwcm90by5pbnNlcnQgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gICAgdmFyIGl0ZW1zID0gdGhpcy5hZGRJdGVtcyggZWxlbXMgKTtcbiAgICBpZiAoICFpdGVtcy5sZW5ndGggKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGFwcGVuZCBpdGVtIGVsZW1lbnRzXG4gICAgdmFyIGksIGl0ZW07XG4gICAgdmFyIGxlbiA9IGl0ZW1zLmxlbmd0aDtcbiAgICBmb3IgKCBpPTA7IGkgPCBsZW47IGkrKyApIHtcbiAgICAgIGl0ZW0gPSBpdGVtc1tpXTtcbiAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCggaXRlbS5lbGVtZW50ICk7XG4gICAgfVxuICAgIC8vIGZpbHRlciBuZXcgc3R1ZmZcbiAgICB2YXIgZmlsdGVyZWRJbnNlcnRJdGVtcyA9IHRoaXMuX2ZpbHRlciggaXRlbXMgKS5tYXRjaGVzO1xuICAgIC8vIHNldCBmbGFnXG4gICAgZm9yICggaT0wOyBpIDwgbGVuOyBpKysgKSB7XG4gICAgICBpdGVtc1tpXS5pc0xheW91dEluc3RhbnQgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLmFycmFuZ2UoKTtcbiAgICAvLyByZXNldCBmbGFnXG4gICAgZm9yICggaT0wOyBpIDwgbGVuOyBpKysgKSB7XG4gICAgICBkZWxldGUgaXRlbXNbaV0uaXNMYXlvdXRJbnN0YW50O1xuICAgIH1cbiAgICB0aGlzLnJldmVhbCggZmlsdGVyZWRJbnNlcnRJdGVtcyApO1xuICB9O1xuXG4gIHZhciBfcmVtb3ZlID0gcHJvdG8ucmVtb3ZlO1xuICBwcm90by5yZW1vdmUgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gICAgZWxlbXMgPSB1dGlscy5tYWtlQXJyYXkoIGVsZW1zICk7XG4gICAgdmFyIHJlbW92ZUl0ZW1zID0gdGhpcy5nZXRJdGVtcyggZWxlbXMgKTtcbiAgICAvLyBkbyByZWd1bGFyIHRoaW5nXG4gICAgX3JlbW92ZS5jYWxsKCB0aGlzLCBlbGVtcyApO1xuICAgIC8vIGJhaWwgaWYgbm8gaXRlbXMgdG8gcmVtb3ZlXG4gICAgdmFyIGxlbiA9IHJlbW92ZUl0ZW1zICYmIHJlbW92ZUl0ZW1zLmxlbmd0aDtcbiAgICAvLyByZW1vdmUgZWxlbXMgZnJvbSBmaWx0ZXJlZEl0ZW1zXG4gICAgZm9yICggdmFyIGk9MDsgbGVuICYmIGkgPCBsZW47IGkrKyApIHtcbiAgICAgIHZhciBpdGVtID0gcmVtb3ZlSXRlbXNbaV07XG4gICAgICAvLyByZW1vdmUgaXRlbSBmcm9tIGNvbGxlY3Rpb25cbiAgICAgIHV0aWxzLnJlbW92ZUZyb20oIHRoaXMuZmlsdGVyZWRJdGVtcywgaXRlbSApO1xuICAgIH1cbiAgfTtcblxuICBwcm90by5zaHVmZmxlID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gdXBkYXRlIHJhbmRvbSBzb3J0RGF0YVxuICAgIGZvciAoIHZhciBpPTA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrICkge1xuICAgICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2ldO1xuICAgICAgaXRlbS5zb3J0RGF0YS5yYW5kb20gPSBNYXRoLnJhbmRvbSgpO1xuICAgIH1cbiAgICB0aGlzLm9wdGlvbnMuc29ydEJ5ID0gJ3JhbmRvbSc7XG4gICAgdGhpcy5fc29ydCgpO1xuICAgIHRoaXMuX2xheW91dCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiB0cmlnZ2VyIGZuIHdpdGhvdXQgdHJhbnNpdGlvblxuICAgKiBraW5kIG9mIGhhY2t5IHRvIGhhdmUgdGhpcyBpbiB0aGUgZmlyc3QgcGxhY2VcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAgICogQHBhcmFtIHtBcnJheX0gYXJnc1xuICAgKiBAcmV0dXJucyByZXRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHByb3RvLl9ub1RyYW5zaXRpb24gPSBmdW5jdGlvbiggZm4sIGFyZ3MgKSB7XG4gICAgLy8gc2F2ZSB0cmFuc2l0aW9uRHVyYXRpb24gYmVmb3JlIGRpc2FibGluZ1xuICAgIHZhciB0cmFuc2l0aW9uRHVyYXRpb24gPSB0aGlzLm9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgIC8vIGRpc2FibGUgdHJhbnNpdGlvblxuICAgIHRoaXMub3B0aW9ucy50cmFuc2l0aW9uRHVyYXRpb24gPSAwO1xuICAgIC8vIGRvIGl0XG4gICAgdmFyIHJldHVyblZhbHVlID0gZm4uYXBwbHkoIHRoaXMsIGFyZ3MgKTtcbiAgICAvLyByZS1lbmFibGUgdHJhbnNpdGlvbiBmb3IgcmV2ZWFsXG4gICAgdGhpcy5vcHRpb25zLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvbjtcbiAgICByZXR1cm4gcmV0dXJuVmFsdWU7XG4gIH07XG5cbiAgLy8gLS0tLS0gaGVscGVyIG1ldGhvZHMgLS0tLS0gLy9cblxuICAvKipcbiAgICogZ2V0dGVyIG1ldGhvZCBmb3IgZ2V0dGluZyBmaWx0ZXJlZCBpdGVtIGVsZW1lbnRzXG4gICAqIEByZXR1cm5zIHtBcnJheX0gZWxlbXMgLSBjb2xsZWN0aW9uIG9mIGl0ZW0gZWxlbWVudHNcbiAgICovXG4gIHByb3RvLmdldEZpbHRlcmVkSXRlbUVsZW1lbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRJdGVtcy5tYXAoIGZ1bmN0aW9uKCBpdGVtICkge1xuICAgICAgcmV0dXJuIGl0ZW0uZWxlbWVudDtcbiAgICB9KTtcbiAgfTtcblxuICAvLyAtLS0tLSAgLS0tLS0gLy9cblxuICByZXR1cm4gSXNvdG9wZTtcblxufSkpO1xuXG4iLCIvKiFcbiAqIElzb3RvcGUgUEFDS0FHRUQgdjMuMC40XG4gKlxuICogTGljZW5zZWQgR1BMdjMgZm9yIG9wZW4gc291cmNlIHVzZVxuICogb3IgSXNvdG9wZSBDb21tZXJjaWFsIExpY2Vuc2UgZm9yIGNvbW1lcmNpYWwgdXNlXG4gKlxuICogaHR0cDovL2lzb3RvcGUubWV0YWZpenp5LmNvXG4gKiBDb3B5cmlnaHQgMjAxNyBNZXRhZml6enlcbiAqL1xuXG4hZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwianF1ZXJ5LWJyaWRnZXQvanF1ZXJ5LWJyaWRnZXRcIixbXCJqcXVlcnlcIl0sZnVuY3Rpb24oaSl7cmV0dXJuIGUodCxpKX0pOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUodCxyZXF1aXJlKFwianF1ZXJ5XCIpKTp0LmpRdWVyeUJyaWRnZXQ9ZSh0LHQualF1ZXJ5KX0od2luZG93LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShpLHMsYSl7ZnVuY3Rpb24gdSh0LGUsbyl7dmFyIG4scz1cIiQoKS5cIitpKycoXCInK2UrJ1wiKSc7cmV0dXJuIHQuZWFjaChmdW5jdGlvbih0LHUpe3ZhciBoPWEuZGF0YSh1LGkpO2lmKCFoKXJldHVybiB2b2lkIHIoaStcIiBub3QgaW5pdGlhbGl6ZWQuIENhbm5vdCBjYWxsIG1ldGhvZHMsIGkuZS4gXCIrcyk7dmFyIGQ9aFtlXTtpZighZHx8XCJfXCI9PWUuY2hhckF0KDApKXJldHVybiB2b2lkIHIocytcIiBpcyBub3QgYSB2YWxpZCBtZXRob2RcIik7dmFyIGw9ZC5hcHBseShoLG8pO249dm9pZCAwPT09bj9sOm59KSx2b2lkIDAhPT1uP246dH1mdW5jdGlvbiBoKHQsZSl7dC5lYWNoKGZ1bmN0aW9uKHQsbyl7dmFyIG49YS5kYXRhKG8saSk7bj8obi5vcHRpb24oZSksbi5faW5pdCgpKToobj1uZXcgcyhvLGUpLGEuZGF0YShvLGksbikpfSl9YT1hfHxlfHx0LmpRdWVyeSxhJiYocy5wcm90b3R5cGUub3B0aW9ufHwocy5wcm90b3R5cGUub3B0aW9uPWZ1bmN0aW9uKHQpe2EuaXNQbGFpbk9iamVjdCh0KSYmKHRoaXMub3B0aW9ucz1hLmV4dGVuZCghMCx0aGlzLm9wdGlvbnMsdCkpfSksYS5mbltpXT1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIGU9bi5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gdSh0aGlzLHQsZSl9cmV0dXJuIGgodGhpcyx0KSx0aGlzfSxvKGEpKX1mdW5jdGlvbiBvKHQpeyF0fHx0JiZ0LmJyaWRnZXR8fCh0LmJyaWRnZXQ9aSl9dmFyIG49QXJyYXkucHJvdG90eXBlLnNsaWNlLHM9dC5jb25zb2xlLHI9XCJ1bmRlZmluZWRcIj09dHlwZW9mIHM/ZnVuY3Rpb24oKXt9OmZ1bmN0aW9uKHQpe3MuZXJyb3IodCl9O3JldHVybiBvKGV8fHQualF1ZXJ5KSxpfSksZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZXYtZW1pdHRlci9ldi1lbWl0dGVyXCIsZSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSgpOnQuRXZFbWl0dGVyPWUoKX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9dmFyIGU9dC5wcm90b3R5cGU7cmV0dXJuIGUub249ZnVuY3Rpb24odCxlKXtpZih0JiZlKXt2YXIgaT10aGlzLl9ldmVudHM9dGhpcy5fZXZlbnRzfHx7fSxvPWlbdF09aVt0XXx8W107cmV0dXJuIG8uaW5kZXhPZihlKT09LTEmJm8ucHVzaChlKSx0aGlzfX0sZS5vbmNlPWZ1bmN0aW9uKHQsZSl7aWYodCYmZSl7dGhpcy5vbih0LGUpO3ZhciBpPXRoaXMuX29uY2VFdmVudHM9dGhpcy5fb25jZUV2ZW50c3x8e30sbz1pW3RdPWlbdF18fHt9O3JldHVybiBvW2VdPSEwLHRoaXN9fSxlLm9mZj1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2V2ZW50cyYmdGhpcy5fZXZlbnRzW3RdO2lmKGkmJmkubGVuZ3RoKXt2YXIgbz1pLmluZGV4T2YoZSk7cmV0dXJuIG8hPS0xJiZpLnNwbGljZShvLDEpLHRoaXN9fSxlLmVtaXRFdmVudD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2V2ZW50cyYmdGhpcy5fZXZlbnRzW3RdO2lmKGkmJmkubGVuZ3RoKXt2YXIgbz0wLG49aVtvXTtlPWV8fFtdO2Zvcih2YXIgcz10aGlzLl9vbmNlRXZlbnRzJiZ0aGlzLl9vbmNlRXZlbnRzW3RdO247KXt2YXIgcj1zJiZzW25dO3ImJih0aGlzLm9mZih0LG4pLGRlbGV0ZSBzW25dKSxuLmFwcGx5KHRoaXMsZSksbys9cj8wOjEsbj1pW29dfXJldHVybiB0aGlzfX0sdH0pLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImdldC1zaXplL2dldC1zaXplXCIsW10sZnVuY3Rpb24oKXtyZXR1cm4gZSgpfSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSgpOnQuZ2V0U2l6ZT1lKCl9KHdpbmRvdyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHQodCl7dmFyIGU9cGFyc2VGbG9hdCh0KSxpPXQuaW5kZXhPZihcIiVcIik9PS0xJiYhaXNOYU4oZSk7cmV0dXJuIGkmJmV9ZnVuY3Rpb24gZSgpe31mdW5jdGlvbiBpKCl7Zm9yKHZhciB0PXt3aWR0aDowLGhlaWdodDowLGlubmVyV2lkdGg6MCxpbm5lckhlaWdodDowLG91dGVyV2lkdGg6MCxvdXRlckhlaWdodDowfSxlPTA7ZTxoO2UrKyl7dmFyIGk9dVtlXTt0W2ldPTB9cmV0dXJuIHR9ZnVuY3Rpb24gbyh0KXt2YXIgZT1nZXRDb21wdXRlZFN0eWxlKHQpO3JldHVybiBlfHxhKFwiU3R5bGUgcmV0dXJuZWQgXCIrZStcIi4gQXJlIHlvdSBydW5uaW5nIHRoaXMgY29kZSBpbiBhIGhpZGRlbiBpZnJhbWUgb24gRmlyZWZveD8gU2VlIGh0dHA6Ly9iaXQubHkvZ2V0c2l6ZWJ1ZzFcIiksZX1mdW5jdGlvbiBuKCl7aWYoIWQpe2Q9ITA7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtlLnN0eWxlLndpZHRoPVwiMjAwcHhcIixlLnN0eWxlLnBhZGRpbmc9XCIxcHggMnB4IDNweCA0cHhcIixlLnN0eWxlLmJvcmRlclN0eWxlPVwic29saWRcIixlLnN0eWxlLmJvcmRlcldpZHRoPVwiMXB4IDJweCAzcHggNHB4XCIsZS5zdHlsZS5ib3hTaXppbmc9XCJib3JkZXItYm94XCI7dmFyIGk9ZG9jdW1lbnQuYm9keXx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O2kuYXBwZW5kQ2hpbGQoZSk7dmFyIG49byhlKTtzLmlzQm94U2l6ZU91dGVyPXI9MjAwPT10KG4ud2lkdGgpLGkucmVtb3ZlQ2hpbGQoZSl9fWZ1bmN0aW9uIHMoZSl7aWYobigpLFwic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpKSxlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZS5ub2RlVHlwZSl7dmFyIHM9byhlKTtpZihcIm5vbmVcIj09cy5kaXNwbGF5KXJldHVybiBpKCk7dmFyIGE9e307YS53aWR0aD1lLm9mZnNldFdpZHRoLGEuaGVpZ2h0PWUub2Zmc2V0SGVpZ2h0O2Zvcih2YXIgZD1hLmlzQm9yZGVyQm94PVwiYm9yZGVyLWJveFwiPT1zLmJveFNpemluZyxsPTA7bDxoO2wrKyl7dmFyIGY9dVtsXSxjPXNbZl0sbT1wYXJzZUZsb2F0KGMpO2FbZl09aXNOYU4obSk/MDptfXZhciBwPWEucGFkZGluZ0xlZnQrYS5wYWRkaW5nUmlnaHQseT1hLnBhZGRpbmdUb3ArYS5wYWRkaW5nQm90dG9tLGc9YS5tYXJnaW5MZWZ0K2EubWFyZ2luUmlnaHQsdj1hLm1hcmdpblRvcCthLm1hcmdpbkJvdHRvbSxfPWEuYm9yZGVyTGVmdFdpZHRoK2EuYm9yZGVyUmlnaHRXaWR0aCxJPWEuYm9yZGVyVG9wV2lkdGgrYS5ib3JkZXJCb3R0b21XaWR0aCx6PWQmJnIseD10KHMud2lkdGgpO3ghPT0hMSYmKGEud2lkdGg9eCsoej8wOnArXykpO3ZhciBTPXQocy5oZWlnaHQpO3JldHVybiBTIT09ITEmJihhLmhlaWdodD1TKyh6PzA6eStJKSksYS5pbm5lcldpZHRoPWEud2lkdGgtKHArXyksYS5pbm5lckhlaWdodD1hLmhlaWdodC0oeStJKSxhLm91dGVyV2lkdGg9YS53aWR0aCtnLGEub3V0ZXJIZWlnaHQ9YS5oZWlnaHQrdixhfX12YXIgcixhPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBjb25zb2xlP2U6ZnVuY3Rpb24odCl7Y29uc29sZS5lcnJvcih0KX0sdT1bXCJwYWRkaW5nTGVmdFwiLFwicGFkZGluZ1JpZ2h0XCIsXCJwYWRkaW5nVG9wXCIsXCJwYWRkaW5nQm90dG9tXCIsXCJtYXJnaW5MZWZ0XCIsXCJtYXJnaW5SaWdodFwiLFwibWFyZ2luVG9wXCIsXCJtYXJnaW5Cb3R0b21cIixcImJvcmRlckxlZnRXaWR0aFwiLFwiYm9yZGVyUmlnaHRXaWR0aFwiLFwiYm9yZGVyVG9wV2lkdGhcIixcImJvcmRlckJvdHRvbVdpZHRoXCJdLGg9dS5sZW5ndGgsZD0hMTtyZXR1cm4gc30pLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImRlc2FuZHJvLW1hdGNoZXMtc2VsZWN0b3IvbWF0Y2hlcy1zZWxlY3RvclwiLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTp0Lm1hdGNoZXNTZWxlY3Rvcj1lKCl9KHdpbmRvdyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciB0PWZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93LkVsZW1lbnQucHJvdG90eXBlO2lmKHQubWF0Y2hlcylyZXR1cm5cIm1hdGNoZXNcIjtpZih0Lm1hdGNoZXNTZWxlY3RvcilyZXR1cm5cIm1hdGNoZXNTZWxlY3RvclwiO2Zvcih2YXIgZT1bXCJ3ZWJraXRcIixcIm1velwiLFwibXNcIixcIm9cIl0saT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgbz1lW2ldLG49bytcIk1hdGNoZXNTZWxlY3RvclwiO2lmKHRbbl0pcmV0dXJuIG59fSgpO3JldHVybiBmdW5jdGlvbihlLGkpe3JldHVybiBlW3RdKGkpfX0pLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImZpenp5LXVpLXV0aWxzL3V0aWxzXCIsW1wiZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3Rvci9tYXRjaGVzLXNlbGVjdG9yXCJdLGZ1bmN0aW9uKGkpe3JldHVybiBlKHQsaSl9KTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHQscmVxdWlyZShcImRlc2FuZHJvLW1hdGNoZXMtc2VsZWN0b3JcIikpOnQuZml6enlVSVV0aWxzPWUodCx0Lm1hdGNoZXNTZWxlY3Rvcil9KHdpbmRvdyxmdW5jdGlvbih0LGUpe3ZhciBpPXt9O2kuZXh0ZW5kPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpIGluIGUpdFtpXT1lW2ldO3JldHVybiB0fSxpLm1vZHVsbz1mdW5jdGlvbih0LGUpe3JldHVybih0JWUrZSklZX0saS5tYWtlQXJyYXk9ZnVuY3Rpb24odCl7dmFyIGU9W107aWYoQXJyYXkuaXNBcnJheSh0KSllPXQ7ZWxzZSBpZih0JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJudW1iZXJcIj09dHlwZW9mIHQubGVuZ3RoKWZvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKWUucHVzaCh0W2ldKTtlbHNlIGUucHVzaCh0KTtyZXR1cm4gZX0saS5yZW1vdmVGcm9tPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5pbmRleE9mKGUpO2khPS0xJiZ0LnNwbGljZShpLDEpfSxpLmdldFBhcmVudD1mdW5jdGlvbih0LGkpe2Zvcig7dC5wYXJlbnROb2RlJiZ0IT1kb2N1bWVudC5ib2R5OylpZih0PXQucGFyZW50Tm9kZSxlKHQsaSkpcmV0dXJuIHR9LGkuZ2V0UXVlcnlFbGVtZW50PWZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dH0saS5oYW5kbGVFdmVudD1mdW5jdGlvbih0KXt2YXIgZT1cIm9uXCIrdC50eXBlO3RoaXNbZV0mJnRoaXNbZV0odCl9LGkuZmlsdGVyRmluZEVsZW1lbnRzPWZ1bmN0aW9uKHQsbyl7dD1pLm1ha2VBcnJheSh0KTt2YXIgbj1bXTtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCl7aWYoIW8pcmV0dXJuIHZvaWQgbi5wdXNoKHQpO2UodCxvKSYmbi5wdXNoKHQpO2Zvcih2YXIgaT10LnF1ZXJ5U2VsZWN0b3JBbGwobykscz0wO3M8aS5sZW5ndGg7cysrKW4ucHVzaChpW3NdKX19KSxufSxpLmRlYm91bmNlTWV0aG9kPWZ1bmN0aW9uKHQsZSxpKXt2YXIgbz10LnByb3RvdHlwZVtlXSxuPWUrXCJUaW1lb3V0XCI7dC5wcm90b3R5cGVbZV09ZnVuY3Rpb24oKXt2YXIgdD10aGlzW25dO3QmJmNsZWFyVGltZW91dCh0KTt2YXIgZT1hcmd1bWVudHMscz10aGlzO3RoaXNbbl09c2V0VGltZW91dChmdW5jdGlvbigpe28uYXBwbHkocyxlKSxkZWxldGUgc1tuXX0saXx8MTAwKX19LGkuZG9jUmVhZHk9ZnVuY3Rpb24odCl7dmFyIGU9ZG9jdW1lbnQucmVhZHlTdGF0ZTtcImNvbXBsZXRlXCI9PWV8fFwiaW50ZXJhY3RpdmVcIj09ZT9zZXRUaW1lb3V0KHQpOmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsdCl9LGkudG9EYXNoZWQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvKC4pKFtBLVpdKS9nLGZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gZStcIi1cIitpfSkudG9Mb3dlckNhc2UoKX07dmFyIG89dC5jb25zb2xlO3JldHVybiBpLmh0bWxJbml0PWZ1bmN0aW9uKGUsbil7aS5kb2NSZWFkeShmdW5jdGlvbigpe3ZhciBzPWkudG9EYXNoZWQobikscj1cImRhdGEtXCIrcyxhPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbXCIrcitcIl1cIiksdT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmpzLVwiK3MpLGg9aS5tYWtlQXJyYXkoYSkuY29uY2F0KGkubWFrZUFycmF5KHUpKSxkPXIrXCItb3B0aW9uc1wiLGw9dC5qUXVlcnk7aC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBpLHM9dC5nZXRBdHRyaWJ1dGUocil8fHQuZ2V0QXR0cmlidXRlKGQpO3RyeXtpPXMmJkpTT04ucGFyc2Uocyl9Y2F0Y2goYSl7cmV0dXJuIHZvaWQobyYmby5lcnJvcihcIkVycm9yIHBhcnNpbmcgXCIrcitcIiBvbiBcIit0LmNsYXNzTmFtZStcIjogXCIrYSkpfXZhciB1PW5ldyBlKHQsaSk7bCYmbC5kYXRhKHQsbix1KX0pfSl9LGl9KSxmdW5jdGlvbih0LGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJvdXRsYXllci9pdGVtXCIsW1wiZXYtZW1pdHRlci9ldi1lbWl0dGVyXCIsXCJnZXQtc2l6ZS9nZXQtc2l6ZVwiXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHJlcXVpcmUoXCJldi1lbWl0dGVyXCIpLHJlcXVpcmUoXCJnZXQtc2l6ZVwiKSk6KHQuT3V0bGF5ZXI9e30sdC5PdXRsYXllci5JdGVtPWUodC5FdkVtaXR0ZXIsdC5nZXRTaXplKSl9KHdpbmRvdyxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCl7Zm9yKHZhciBlIGluIHQpcmV0dXJuITE7cmV0dXJuIGU9bnVsbCwhMH1mdW5jdGlvbiBvKHQsZSl7dCYmKHRoaXMuZWxlbWVudD10LHRoaXMubGF5b3V0PWUsdGhpcy5wb3NpdGlvbj17eDowLHk6MH0sdGhpcy5fY3JlYXRlKCkpfWZ1bmN0aW9uIG4odCl7cmV0dXJuIHQucmVwbGFjZSgvKFtBLVpdKS9nLGZ1bmN0aW9uKHQpe3JldHVyblwiLVwiK3QudG9Mb3dlckNhc2UoKX0pfXZhciBzPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSxyPVwic3RyaW5nXCI9PXR5cGVvZiBzLnRyYW5zaXRpb24/XCJ0cmFuc2l0aW9uXCI6XCJXZWJraXRUcmFuc2l0aW9uXCIsYT1cInN0cmluZ1wiPT10eXBlb2Ygcy50cmFuc2Zvcm0/XCJ0cmFuc2Zvcm1cIjpcIldlYmtpdFRyYW5zZm9ybVwiLHU9e1dlYmtpdFRyYW5zaXRpb246XCJ3ZWJraXRUcmFuc2l0aW9uRW5kXCIsdHJhbnNpdGlvbjpcInRyYW5zaXRpb25lbmRcIn1bcl0saD17dHJhbnNmb3JtOmEsdHJhbnNpdGlvbjpyLHRyYW5zaXRpb25EdXJhdGlvbjpyK1wiRHVyYXRpb25cIix0cmFuc2l0aW9uUHJvcGVydHk6citcIlByb3BlcnR5XCIsdHJhbnNpdGlvbkRlbGF5OnIrXCJEZWxheVwifSxkPW8ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUpO2QuY29uc3RydWN0b3I9byxkLl9jcmVhdGU9ZnVuY3Rpb24oKXt0aGlzLl90cmFuc249e2luZ1Byb3BlcnRpZXM6e30sY2xlYW46e30sb25FbmQ6e319LHRoaXMuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCJ9KX0sZC5oYW5kbGVFdmVudD1mdW5jdGlvbih0KXt2YXIgZT1cIm9uXCIrdC50eXBlO3RoaXNbZV0mJnRoaXNbZV0odCl9LGQuZ2V0U2l6ZT1mdW5jdGlvbigpe3RoaXMuc2l6ZT1lKHRoaXMuZWxlbWVudCl9LGQuY3NzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWxlbWVudC5zdHlsZTtmb3IodmFyIGkgaW4gdCl7dmFyIG89aFtpXXx8aTtlW29dPXRbaV19fSxkLmdldFBvc2l0aW9uPWZ1bmN0aW9uKCl7dmFyIHQ9Z2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsZW1lbnQpLGU9dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcIm9yaWdpbkxlZnRcIiksaT10aGlzLmxheW91dC5fZ2V0T3B0aW9uKFwib3JpZ2luVG9wXCIpLG89dFtlP1wibGVmdFwiOlwicmlnaHRcIl0sbj10W2k/XCJ0b3BcIjpcImJvdHRvbVwiXSxzPXRoaXMubGF5b3V0LnNpemUscj1vLmluZGV4T2YoXCIlXCIpIT0tMT9wYXJzZUZsb2F0KG8pLzEwMCpzLndpZHRoOnBhcnNlSW50KG8sMTApLGE9bi5pbmRleE9mKFwiJVwiKSE9LTE/cGFyc2VGbG9hdChuKS8xMDAqcy5oZWlnaHQ6cGFyc2VJbnQobiwxMCk7cj1pc05hTihyKT8wOnIsYT1pc05hTihhKT8wOmEsci09ZT9zLnBhZGRpbmdMZWZ0OnMucGFkZGluZ1JpZ2h0LGEtPWk/cy5wYWRkaW5nVG9wOnMucGFkZGluZ0JvdHRvbSx0aGlzLnBvc2l0aW9uLng9cix0aGlzLnBvc2l0aW9uLnk9YX0sZC5sYXlvdXRQb3NpdGlvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXMubGF5b3V0LnNpemUsZT17fSxpPXRoaXMubGF5b3V0Ll9nZXRPcHRpb24oXCJvcmlnaW5MZWZ0XCIpLG89dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcIm9yaWdpblRvcFwiKSxuPWk/XCJwYWRkaW5nTGVmdFwiOlwicGFkZGluZ1JpZ2h0XCIscz1pP1wibGVmdFwiOlwicmlnaHRcIixyPWk/XCJyaWdodFwiOlwibGVmdFwiLGE9dGhpcy5wb3NpdGlvbi54K3Rbbl07ZVtzXT10aGlzLmdldFhWYWx1ZShhKSxlW3JdPVwiXCI7dmFyIHU9bz9cInBhZGRpbmdUb3BcIjpcInBhZGRpbmdCb3R0b21cIixoPW8/XCJ0b3BcIjpcImJvdHRvbVwiLGQ9bz9cImJvdHRvbVwiOlwidG9wXCIsbD10aGlzLnBvc2l0aW9uLnkrdFt1XTtlW2hdPXRoaXMuZ2V0WVZhbHVlKGwpLGVbZF09XCJcIix0aGlzLmNzcyhlKSx0aGlzLmVtaXRFdmVudChcImxheW91dFwiLFt0aGlzXSl9LGQuZ2V0WFZhbHVlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubGF5b3V0Ll9nZXRPcHRpb24oXCJob3Jpem9udGFsXCIpO3JldHVybiB0aGlzLmxheW91dC5vcHRpb25zLnBlcmNlbnRQb3NpdGlvbiYmIWU/dC90aGlzLmxheW91dC5zaXplLndpZHRoKjEwMCtcIiVcIjp0K1wicHhcIn0sZC5nZXRZVmFsdWU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcImhvcml6b250YWxcIik7cmV0dXJuIHRoaXMubGF5b3V0Lm9wdGlvbnMucGVyY2VudFBvc2l0aW9uJiZlP3QvdGhpcy5sYXlvdXQuc2l6ZS5oZWlnaHQqMTAwK1wiJVwiOnQrXCJweFwifSxkLl90cmFuc2l0aW9uVG89ZnVuY3Rpb24odCxlKXt0aGlzLmdldFBvc2l0aW9uKCk7dmFyIGk9dGhpcy5wb3NpdGlvbi54LG89dGhpcy5wb3NpdGlvbi55LG49cGFyc2VJbnQodCwxMCkscz1wYXJzZUludChlLDEwKSxyPW49PT10aGlzLnBvc2l0aW9uLngmJnM9PT10aGlzLnBvc2l0aW9uLnk7aWYodGhpcy5zZXRQb3NpdGlvbih0LGUpLHImJiF0aGlzLmlzVHJhbnNpdGlvbmluZylyZXR1cm4gdm9pZCB0aGlzLmxheW91dFBvc2l0aW9uKCk7dmFyIGE9dC1pLHU9ZS1vLGg9e307aC50cmFuc2Zvcm09dGhpcy5nZXRUcmFuc2xhdGUoYSx1KSx0aGlzLnRyYW5zaXRpb24oe3RvOmgsb25UcmFuc2l0aW9uRW5kOnt0cmFuc2Zvcm06dGhpcy5sYXlvdXRQb3NpdGlvbn0saXNDbGVhbmluZzohMH0pfSxkLmdldFRyYW5zbGF0ZT1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMubGF5b3V0Ll9nZXRPcHRpb24oXCJvcmlnaW5MZWZ0XCIpLG89dGhpcy5sYXlvdXQuX2dldE9wdGlvbihcIm9yaWdpblRvcFwiKTtyZXR1cm4gdD1pP3Q6LXQsZT1vP2U6LWUsXCJ0cmFuc2xhdGUzZChcIit0K1wicHgsIFwiK2UrXCJweCwgMClcIn0sZC5nb1RvPWZ1bmN0aW9uKHQsZSl7dGhpcy5zZXRQb3NpdGlvbih0LGUpLHRoaXMubGF5b3V0UG9zaXRpb24oKX0sZC5tb3ZlVG89ZC5fdHJhbnNpdGlvblRvLGQuc2V0UG9zaXRpb249ZnVuY3Rpb24odCxlKXt0aGlzLnBvc2l0aW9uLng9cGFyc2VJbnQodCwxMCksdGhpcy5wb3NpdGlvbi55PXBhcnNlSW50KGUsMTApfSxkLl9ub25UcmFuc2l0aW9uPWZ1bmN0aW9uKHQpe3RoaXMuY3NzKHQudG8pLHQuaXNDbGVhbmluZyYmdGhpcy5fcmVtb3ZlU3R5bGVzKHQudG8pO2Zvcih2YXIgZSBpbiB0Lm9uVHJhbnNpdGlvbkVuZCl0Lm9uVHJhbnNpdGlvbkVuZFtlXS5jYWxsKHRoaXMpfSxkLnRyYW5zaXRpb249ZnVuY3Rpb24odCl7aWYoIXBhcnNlRmxvYXQodGhpcy5sYXlvdXQub3B0aW9ucy50cmFuc2l0aW9uRHVyYXRpb24pKXJldHVybiB2b2lkIHRoaXMuX25vblRyYW5zaXRpb24odCk7dmFyIGU9dGhpcy5fdHJhbnNuO2Zvcih2YXIgaSBpbiB0Lm9uVHJhbnNpdGlvbkVuZCllLm9uRW5kW2ldPXQub25UcmFuc2l0aW9uRW5kW2ldO2ZvcihpIGluIHQudG8pZS5pbmdQcm9wZXJ0aWVzW2ldPSEwLHQuaXNDbGVhbmluZyYmKGUuY2xlYW5baV09ITApO2lmKHQuZnJvbSl7dGhpcy5jc3ModC5mcm9tKTt2YXIgbz10aGlzLmVsZW1lbnQub2Zmc2V0SGVpZ2h0O289bnVsbH10aGlzLmVuYWJsZVRyYW5zaXRpb24odC50byksdGhpcy5jc3ModC50byksdGhpcy5pc1RyYW5zaXRpb25pbmc9ITB9O3ZhciBsPVwib3BhY2l0eSxcIituKGEpO2QuZW5hYmxlVHJhbnNpdGlvbj1mdW5jdGlvbigpe2lmKCF0aGlzLmlzVHJhbnNpdGlvbmluZyl7dmFyIHQ9dGhpcy5sYXlvdXQub3B0aW9ucy50cmFuc2l0aW9uRHVyYXRpb247dD1cIm51bWJlclwiPT10eXBlb2YgdD90K1wibXNcIjp0LHRoaXMuY3NzKHt0cmFuc2l0aW9uUHJvcGVydHk6bCx0cmFuc2l0aW9uRHVyYXRpb246dCx0cmFuc2l0aW9uRGVsYXk6dGhpcy5zdGFnZ2VyRGVsYXl8fDB9KSx0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih1LHRoaXMsITEpfX0sZC5vbndlYmtpdFRyYW5zaXRpb25FbmQ9ZnVuY3Rpb24odCl7dGhpcy5vbnRyYW5zaXRpb25lbmQodCl9LGQub25vdHJhbnNpdGlvbmVuZD1mdW5jdGlvbih0KXt0aGlzLm9udHJhbnNpdGlvbmVuZCh0KX07dmFyIGY9e1wiLXdlYmtpdC10cmFuc2Zvcm1cIjpcInRyYW5zZm9ybVwifTtkLm9udHJhbnNpdGlvbmVuZD1mdW5jdGlvbih0KXtpZih0LnRhcmdldD09PXRoaXMuZWxlbWVudCl7dmFyIGU9dGhpcy5fdHJhbnNuLG89Zlt0LnByb3BlcnR5TmFtZV18fHQucHJvcGVydHlOYW1lO2lmKGRlbGV0ZSBlLmluZ1Byb3BlcnRpZXNbb10saShlLmluZ1Byb3BlcnRpZXMpJiZ0aGlzLmRpc2FibGVUcmFuc2l0aW9uKCksbyBpbiBlLmNsZWFuJiYodGhpcy5lbGVtZW50LnN0eWxlW3QucHJvcGVydHlOYW1lXT1cIlwiLGRlbGV0ZSBlLmNsZWFuW29dKSxvIGluIGUub25FbmQpe3ZhciBuPWUub25FbmRbb107bi5jYWxsKHRoaXMpLGRlbGV0ZSBlLm9uRW5kW29dfXRoaXMuZW1pdEV2ZW50KFwidHJhbnNpdGlvbkVuZFwiLFt0aGlzXSl9fSxkLmRpc2FibGVUcmFuc2l0aW9uPWZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVUcmFuc2l0aW9uU3R5bGVzKCksdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIodSx0aGlzLCExKSx0aGlzLmlzVHJhbnNpdGlvbmluZz0hMX0sZC5fcmVtb3ZlU3R5bGVzPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Zvcih2YXIgaSBpbiB0KWVbaV09XCJcIjt0aGlzLmNzcyhlKX07dmFyIGM9e3RyYW5zaXRpb25Qcm9wZXJ0eTpcIlwiLHRyYW5zaXRpb25EdXJhdGlvbjpcIlwiLHRyYW5zaXRpb25EZWxheTpcIlwifTtyZXR1cm4gZC5yZW1vdmVUcmFuc2l0aW9uU3R5bGVzPWZ1bmN0aW9uKCl7dGhpcy5jc3MoYyl9LGQuc3RhZ2dlcj1mdW5jdGlvbih0KXt0PWlzTmFOKHQpPzA6dCx0aGlzLnN0YWdnZXJEZWxheT10K1wibXNcIn0sZC5yZW1vdmVFbGVtPWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KSx0aGlzLmNzcyh7ZGlzcGxheTpcIlwifSksdGhpcy5lbWl0RXZlbnQoXCJyZW1vdmVcIixbdGhpc10pfSxkLnJlbW92ZT1mdW5jdGlvbigpe3JldHVybiByJiZwYXJzZUZsb2F0KHRoaXMubGF5b3V0Lm9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uKT8odGhpcy5vbmNlKFwidHJhbnNpdGlvbkVuZFwiLGZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVFbGVtKCl9KSx2b2lkIHRoaXMuaGlkZSgpKTp2b2lkIHRoaXMucmVtb3ZlRWxlbSgpfSxkLnJldmVhbD1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLmlzSGlkZGVuLHRoaXMuY3NzKHtkaXNwbGF5OlwiXCJ9KTt2YXIgdD10aGlzLmxheW91dC5vcHRpb25zLGU9e30saT10aGlzLmdldEhpZGVSZXZlYWxUcmFuc2l0aW9uRW5kUHJvcGVydHkoXCJ2aXNpYmxlU3R5bGVcIik7ZVtpXT10aGlzLm9uUmV2ZWFsVHJhbnNpdGlvbkVuZCx0aGlzLnRyYW5zaXRpb24oe2Zyb206dC5oaWRkZW5TdHlsZSx0bzp0LnZpc2libGVTdHlsZSxpc0NsZWFuaW5nOiEwLG9uVHJhbnNpdGlvbkVuZDplfSl9LGQub25SZXZlYWxUcmFuc2l0aW9uRW5kPWZ1bmN0aW9uKCl7dGhpcy5pc0hpZGRlbnx8dGhpcy5lbWl0RXZlbnQoXCJyZXZlYWxcIil9LGQuZ2V0SGlkZVJldmVhbFRyYW5zaXRpb25FbmRQcm9wZXJ0eT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmxheW91dC5vcHRpb25zW3RdO2lmKGUub3BhY2l0eSlyZXR1cm5cIm9wYWNpdHlcIjtmb3IodmFyIGkgaW4gZSlyZXR1cm4gaX0sZC5oaWRlPWZ1bmN0aW9uKCl7dGhpcy5pc0hpZGRlbj0hMCx0aGlzLmNzcyh7ZGlzcGxheTpcIlwifSk7dmFyIHQ9dGhpcy5sYXlvdXQub3B0aW9ucyxlPXt9LGk9dGhpcy5nZXRIaWRlUmV2ZWFsVHJhbnNpdGlvbkVuZFByb3BlcnR5KFwiaGlkZGVuU3R5bGVcIik7ZVtpXT10aGlzLm9uSGlkZVRyYW5zaXRpb25FbmQsdGhpcy50cmFuc2l0aW9uKHtmcm9tOnQudmlzaWJsZVN0eWxlLHRvOnQuaGlkZGVuU3R5bGUsaXNDbGVhbmluZzohMCxvblRyYW5zaXRpb25FbmQ6ZX0pfSxkLm9uSGlkZVRyYW5zaXRpb25FbmQ9ZnVuY3Rpb24oKXt0aGlzLmlzSGlkZGVuJiYodGhpcy5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KSx0aGlzLmVtaXRFdmVudChcImhpZGVcIikpfSxkLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLmNzcyh7cG9zaXRpb246XCJcIixsZWZ0OlwiXCIscmlnaHQ6XCJcIix0b3A6XCJcIixib3R0b206XCJcIix0cmFuc2l0aW9uOlwiXCIsdHJhbnNmb3JtOlwiXCJ9KX0sb30pLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcIm91dGxheWVyL291dGxheWVyXCIsW1wiZXYtZW1pdHRlci9ldi1lbWl0dGVyXCIsXCJnZXQtc2l6ZS9nZXQtc2l6ZVwiLFwiZml6enktdWktdXRpbHMvdXRpbHNcIixcIi4vaXRlbVwiXSxmdW5jdGlvbihpLG8sbixzKXtyZXR1cm4gZSh0LGksbyxuLHMpfSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSh0LHJlcXVpcmUoXCJldi1lbWl0dGVyXCIpLHJlcXVpcmUoXCJnZXQtc2l6ZVwiKSxyZXF1aXJlKFwiZml6enktdWktdXRpbHNcIikscmVxdWlyZShcIi4vaXRlbVwiKSk6dC5PdXRsYXllcj1lKHQsdC5FdkVtaXR0ZXIsdC5nZXRTaXplLHQuZml6enlVSVV0aWxzLHQuT3V0bGF5ZXIuSXRlbSl9KHdpbmRvdyxmdW5jdGlvbih0LGUsaSxvLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHModCxlKXt2YXIgaT1vLmdldFF1ZXJ5RWxlbWVudCh0KTtpZighaSlyZXR1cm4gdm9pZCh1JiZ1LmVycm9yKFwiQmFkIGVsZW1lbnQgZm9yIFwiK3RoaXMuY29uc3RydWN0b3IubmFtZXNwYWNlK1wiOiBcIisoaXx8dCkpKTt0aGlzLmVsZW1lbnQ9aSxoJiYodGhpcy4kZWxlbWVudD1oKHRoaXMuZWxlbWVudCkpLHRoaXMub3B0aW9ucz1vLmV4dGVuZCh7fSx0aGlzLmNvbnN0cnVjdG9yLmRlZmF1bHRzKSx0aGlzLm9wdGlvbihlKTt2YXIgbj0rK2w7dGhpcy5lbGVtZW50Lm91dGxheWVyR1VJRD1uLGZbbl09dGhpcyx0aGlzLl9jcmVhdGUoKTt2YXIgcz10aGlzLl9nZXRPcHRpb24oXCJpbml0TGF5b3V0XCIpO3MmJnRoaXMubGF5b3V0KCl9ZnVuY3Rpb24gcih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZX1mdW5jdGlvbiBhKHQpe2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXJldHVybiB0O3ZhciBlPXQubWF0Y2goLyheXFxkKlxcLj9cXGQqKShcXHcqKS8pLGk9ZSYmZVsxXSxvPWUmJmVbMl07aWYoIWkubGVuZ3RoKXJldHVybiAwO2k9cGFyc2VGbG9hdChpKTt2YXIgbj1tW29dfHwxO3JldHVybiBpKm59dmFyIHU9dC5jb25zb2xlLGg9dC5qUXVlcnksZD1mdW5jdGlvbigpe30sbD0wLGY9e307cy5uYW1lc3BhY2U9XCJvdXRsYXllclwiLHMuSXRlbT1uLHMuZGVmYXVsdHM9e2NvbnRhaW5lclN0eWxlOntwb3NpdGlvbjpcInJlbGF0aXZlXCJ9LGluaXRMYXlvdXQ6ITAsb3JpZ2luTGVmdDohMCxvcmlnaW5Ub3A6ITAscmVzaXplOiEwLHJlc2l6ZUNvbnRhaW5lcjohMCx0cmFuc2l0aW9uRHVyYXRpb246XCIwLjRzXCIsaGlkZGVuU3R5bGU6e29wYWNpdHk6MCx0cmFuc2Zvcm06XCJzY2FsZSgwLjAwMSlcIn0sdmlzaWJsZVN0eWxlOntvcGFjaXR5OjEsdHJhbnNmb3JtOlwic2NhbGUoMSlcIn19O3ZhciBjPXMucHJvdG90eXBlO28uZXh0ZW5kKGMsZS5wcm90b3R5cGUpLGMub3B0aW9uPWZ1bmN0aW9uKHQpe28uZXh0ZW5kKHRoaXMub3B0aW9ucyx0KX0sYy5fZ2V0T3B0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY29uc3RydWN0b3IuY29tcGF0T3B0aW9uc1t0XTtyZXR1cm4gZSYmdm9pZCAwIT09dGhpcy5vcHRpb25zW2VdP3RoaXMub3B0aW9uc1tlXTp0aGlzLm9wdGlvbnNbdF19LHMuY29tcGF0T3B0aW9ucz17aW5pdExheW91dDpcImlzSW5pdExheW91dFwiLGhvcml6b250YWw6XCJpc0hvcml6b250YWxcIixsYXlvdXRJbnN0YW50OlwiaXNMYXlvdXRJbnN0YW50XCIsb3JpZ2luTGVmdDpcImlzT3JpZ2luTGVmdFwiLG9yaWdpblRvcDpcImlzT3JpZ2luVG9wXCIscmVzaXplOlwiaXNSZXNpemVCb3VuZFwiLHJlc2l6ZUNvbnRhaW5lcjpcImlzUmVzaXppbmdDb250YWluZXJcIn0sYy5fY3JlYXRlPWZ1bmN0aW9uKCl7dGhpcy5yZWxvYWRJdGVtcygpLHRoaXMuc3RhbXBzPVtdLHRoaXMuc3RhbXAodGhpcy5vcHRpb25zLnN0YW1wKSxvLmV4dGVuZCh0aGlzLmVsZW1lbnQuc3R5bGUsdGhpcy5vcHRpb25zLmNvbnRhaW5lclN0eWxlKTt2YXIgdD10aGlzLl9nZXRPcHRpb24oXCJyZXNpemVcIik7dCYmdGhpcy5iaW5kUmVzaXplKCl9LGMucmVsb2FkSXRlbXM9ZnVuY3Rpb24oKXt0aGlzLml0ZW1zPXRoaXMuX2l0ZW1pemUodGhpcy5lbGVtZW50LmNoaWxkcmVuKX0sYy5faXRlbWl6ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5fZmlsdGVyRmluZEl0ZW1FbGVtZW50cyh0KSxpPXRoaXMuY29uc3RydWN0b3IuSXRlbSxvPVtdLG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHM9ZVtuXSxyPW5ldyBpKHMsdGhpcyk7by5wdXNoKHIpfXJldHVybiBvfSxjLl9maWx0ZXJGaW5kSXRlbUVsZW1lbnRzPWZ1bmN0aW9uKHQpe3JldHVybiBvLmZpbHRlckZpbmRFbGVtZW50cyh0LHRoaXMub3B0aW9ucy5pdGVtU2VsZWN0b3IpfSxjLmdldEl0ZW1FbGVtZW50cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLml0ZW1zLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50fSl9LGMubGF5b3V0PWZ1bmN0aW9uKCl7dGhpcy5fcmVzZXRMYXlvdXQoKSx0aGlzLl9tYW5hZ2VTdGFtcHMoKTt2YXIgdD10aGlzLl9nZXRPcHRpb24oXCJsYXlvdXRJbnN0YW50XCIpLGU9dm9pZCAwIT09dD90OiF0aGlzLl9pc0xheW91dEluaXRlZDt0aGlzLmxheW91dEl0ZW1zKHRoaXMuaXRlbXMsZSksdGhpcy5faXNMYXlvdXRJbml0ZWQ9ITB9LGMuX2luaXQ9Yy5sYXlvdXQsYy5fcmVzZXRMYXlvdXQ9ZnVuY3Rpb24oKXt0aGlzLmdldFNpemUoKX0sYy5nZXRTaXplPWZ1bmN0aW9uKCl7dGhpcy5zaXplPWkodGhpcy5lbGVtZW50KX0sYy5fZ2V0TWVhc3VyZW1lbnQ9ZnVuY3Rpb24odCxlKXt2YXIgbyxuPXRoaXMub3B0aW9uc1t0XTtuPyhcInN0cmluZ1wiPT10eXBlb2Ygbj9vPXRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKG4pOm4gaW5zdGFuY2VvZiBIVE1MRWxlbWVudCYmKG89biksdGhpc1t0XT1vP2kobylbZV06bik6dGhpc1t0XT0wfSxjLmxheW91dEl0ZW1zPWZ1bmN0aW9uKHQsZSl7dD10aGlzLl9nZXRJdGVtc0ZvckxheW91dCh0KSx0aGlzLl9sYXlvdXRJdGVtcyh0LGUpLHRoaXMuX3Bvc3RMYXlvdXQoKX0sYy5fZ2V0SXRlbXNGb3JMYXlvdXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiF0LmlzSWdub3JlZH0pfSxjLl9sYXlvdXRJdGVtcz1mdW5jdGlvbih0LGUpe2lmKHRoaXMuX2VtaXRDb21wbGV0ZU9uSXRlbXMoXCJsYXlvdXRcIix0KSx0JiZ0Lmxlbmd0aCl7dmFyIGk9W107dC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBvPXRoaXMuX2dldEl0ZW1MYXlvdXRQb3NpdGlvbih0KTtvLml0ZW09dCxvLmlzSW5zdGFudD1lfHx0LmlzTGF5b3V0SW5zdGFudCxpLnB1c2gobyl9LHRoaXMpLHRoaXMuX3Byb2Nlc3NMYXlvdXRRdWV1ZShpKX19LGMuX2dldEl0ZW1MYXlvdXRQb3NpdGlvbj1mdW5jdGlvbigpe3JldHVybnt4OjAseTowfX0sYy5fcHJvY2Vzc0xheW91dFF1ZXVlPWZ1bmN0aW9uKHQpe3RoaXMudXBkYXRlU3RhZ2dlcigpLHQuZm9yRWFjaChmdW5jdGlvbih0LGUpe3RoaXMuX3Bvc2l0aW9uSXRlbSh0Lml0ZW0sdC54LHQueSx0LmlzSW5zdGFudCxlKX0sdGhpcyl9LGMudXBkYXRlU3RhZ2dlcj1mdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy5zdGFnZ2VyO3JldHVybiBudWxsPT09dHx8dm9pZCAwPT09dD92b2lkKHRoaXMuc3RhZ2dlcj0wKToodGhpcy5zdGFnZ2VyPWEodCksdGhpcy5zdGFnZ2VyKX0sYy5fcG9zaXRpb25JdGVtPWZ1bmN0aW9uKHQsZSxpLG8sbil7bz90LmdvVG8oZSxpKToodC5zdGFnZ2VyKG4qdGhpcy5zdGFnZ2VyKSx0Lm1vdmVUbyhlLGkpKX0sYy5fcG9zdExheW91dD1mdW5jdGlvbigpe3RoaXMucmVzaXplQ29udGFpbmVyKCl9LGMucmVzaXplQ29udGFpbmVyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZ2V0T3B0aW9uKFwicmVzaXplQ29udGFpbmVyXCIpO2lmKHQpe3ZhciBlPXRoaXMuX2dldENvbnRhaW5lclNpemUoKTtlJiYodGhpcy5fc2V0Q29udGFpbmVyTWVhc3VyZShlLndpZHRoLCEwKSx0aGlzLl9zZXRDb250YWluZXJNZWFzdXJlKGUuaGVpZ2h0LCExKSl9fSxjLl9nZXRDb250YWluZXJTaXplPWQsYy5fc2V0Q29udGFpbmVyTWVhc3VyZT1mdW5jdGlvbih0LGUpe2lmKHZvaWQgMCE9PXQpe3ZhciBpPXRoaXMuc2l6ZTtpLmlzQm9yZGVyQm94JiYodCs9ZT9pLnBhZGRpbmdMZWZ0K2kucGFkZGluZ1JpZ2h0K2kuYm9yZGVyTGVmdFdpZHRoK2kuYm9yZGVyUmlnaHRXaWR0aDppLnBhZGRpbmdCb3R0b20raS5wYWRkaW5nVG9wK2kuYm9yZGVyVG9wV2lkdGgraS5ib3JkZXJCb3R0b21XaWR0aCksdD1NYXRoLm1heCh0LDApLHRoaXMuZWxlbWVudC5zdHlsZVtlP1wid2lkdGhcIjpcImhlaWdodFwiXT10K1wicHhcIn19LGMuX2VtaXRDb21wbGV0ZU9uSXRlbXM9ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBpKCl7bi5kaXNwYXRjaEV2ZW50KHQrXCJDb21wbGV0ZVwiLG51bGwsW2VdKX1mdW5jdGlvbiBvKCl7cisrLHI9PXMmJmkoKX12YXIgbj10aGlzLHM9ZS5sZW5ndGg7aWYoIWV8fCFzKXJldHVybiB2b2lkIGkoKTt2YXIgcj0wO2UuZm9yRWFjaChmdW5jdGlvbihlKXtlLm9uY2UodCxvKX0pfSxjLmRpc3BhdGNoRXZlbnQ9ZnVuY3Rpb24odCxlLGkpe3ZhciBvPWU/W2VdLmNvbmNhdChpKTppO2lmKHRoaXMuZW1pdEV2ZW50KHQsbyksaClpZih0aGlzLiRlbGVtZW50PXRoaXMuJGVsZW1lbnR8fGgodGhpcy5lbGVtZW50KSxlKXt2YXIgbj1oLkV2ZW50KGUpO24udHlwZT10LHRoaXMuJGVsZW1lbnQudHJpZ2dlcihuLGkpfWVsc2UgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHQsaSl9LGMuaWdub3JlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbSh0KTtlJiYoZS5pc0lnbm9yZWQ9ITApfSxjLnVuaWdub3JlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbSh0KTtlJiZkZWxldGUgZS5pc0lnbm9yZWR9LGMuc3RhbXA9ZnVuY3Rpb24odCl7dD10aGlzLl9maW5kKHQpLHQmJih0aGlzLnN0YW1wcz10aGlzLnN0YW1wcy5jb25jYXQodCksdC5mb3JFYWNoKHRoaXMuaWdub3JlLHRoaXMpKX0sYy51bnN0YW1wPWZ1bmN0aW9uKHQpe3Q9dGhpcy5fZmluZCh0KSx0JiZ0LmZvckVhY2goZnVuY3Rpb24odCl7by5yZW1vdmVGcm9tKHRoaXMuc3RhbXBzLHQpLHRoaXMudW5pZ25vcmUodCl9LHRoaXMpfSxjLl9maW5kPWZ1bmN0aW9uKHQpe2lmKHQpcmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHQpKSx0PW8ubWFrZUFycmF5KHQpfSxjLl9tYW5hZ2VTdGFtcHM9ZnVuY3Rpb24oKXt0aGlzLnN0YW1wcyYmdGhpcy5zdGFtcHMubGVuZ3RoJiYodGhpcy5fZ2V0Qm91bmRpbmdSZWN0KCksdGhpcy5zdGFtcHMuZm9yRWFjaCh0aGlzLl9tYW5hZ2VTdGFtcCx0aGlzKSl9LGMuX2dldEJvdW5kaW5nUmVjdD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxlPXRoaXMuc2l6ZTt0aGlzLl9ib3VuZGluZ1JlY3Q9e2xlZnQ6dC5sZWZ0K2UucGFkZGluZ0xlZnQrZS5ib3JkZXJMZWZ0V2lkdGgsdG9wOnQudG9wK2UucGFkZGluZ1RvcCtlLmJvcmRlclRvcFdpZHRoLHJpZ2h0OnQucmlnaHQtKGUucGFkZGluZ1JpZ2h0K2UuYm9yZGVyUmlnaHRXaWR0aCksYm90dG9tOnQuYm90dG9tLShlLnBhZGRpbmdCb3R0b20rZS5ib3JkZXJCb3R0b21XaWR0aCl9fSxjLl9tYW5hZ2VTdGFtcD1kLGMuX2dldEVsZW1lbnRPZmZzZXQ9ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxvPXRoaXMuX2JvdW5kaW5nUmVjdCxuPWkodCkscz17bGVmdDplLmxlZnQtby5sZWZ0LW4ubWFyZ2luTGVmdCx0b3A6ZS50b3Atby50b3Atbi5tYXJnaW5Ub3AscmlnaHQ6by5yaWdodC1lLnJpZ2h0LW4ubWFyZ2luUmlnaHQsYm90dG9tOm8uYm90dG9tLWUuYm90dG9tLW4ubWFyZ2luQm90dG9tfTtyZXR1cm4gc30sYy5oYW5kbGVFdmVudD1vLmhhbmRsZUV2ZW50LGMuYmluZFJlc2l6ZT1mdW5jdGlvbigpe3QuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMpLHRoaXMuaXNSZXNpemVCb3VuZD0hMH0sYy51bmJpbmRSZXNpemU9ZnVuY3Rpb24oKXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIix0aGlzKSx0aGlzLmlzUmVzaXplQm91bmQ9ITF9LGMub25yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLnJlc2l6ZSgpfSxvLmRlYm91bmNlTWV0aG9kKHMsXCJvbnJlc2l6ZVwiLDEwMCksYy5yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLmlzUmVzaXplQm91bmQmJnRoaXMubmVlZHNSZXNpemVMYXlvdXQoKSYmdGhpcy5sYXlvdXQoKX0sYy5uZWVkc1Jlc2l6ZUxheW91dD1mdW5jdGlvbigpe3ZhciB0PWkodGhpcy5lbGVtZW50KSxlPXRoaXMuc2l6ZSYmdDtyZXR1cm4gZSYmdC5pbm5lcldpZHRoIT09dGhpcy5zaXplLmlubmVyV2lkdGh9LGMuYWRkSXRlbXM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5faXRlbWl6ZSh0KTtyZXR1cm4gZS5sZW5ndGgmJih0aGlzLml0ZW1zPXRoaXMuaXRlbXMuY29uY2F0KGUpKSxlfSxjLmFwcGVuZGVkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWRkSXRlbXModCk7ZS5sZW5ndGgmJih0aGlzLmxheW91dEl0ZW1zKGUsITApLHRoaXMucmV2ZWFsKGUpKX0sYy5wcmVwZW5kZWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5faXRlbWl6ZSh0KTtpZihlLmxlbmd0aCl7dmFyIGk9dGhpcy5pdGVtcy5zbGljZSgwKTt0aGlzLml0ZW1zPWUuY29uY2F0KGkpLHRoaXMuX3Jlc2V0TGF5b3V0KCksdGhpcy5fbWFuYWdlU3RhbXBzKCksdGhpcy5sYXlvdXRJdGVtcyhlLCEwKSx0aGlzLnJldmVhbChlKSx0aGlzLmxheW91dEl0ZW1zKGkpfX0sYy5yZXZlYWw9ZnVuY3Rpb24odCl7aWYodGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcInJldmVhbFwiLHQpLHQmJnQubGVuZ3RoKXt2YXIgZT10aGlzLnVwZGF0ZVN0YWdnZXIoKTt0LmZvckVhY2goZnVuY3Rpb24odCxpKXt0LnN0YWdnZXIoaSplKSx0LnJldmVhbCgpfSl9fSxjLmhpZGU9ZnVuY3Rpb24odCl7aWYodGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcImhpZGVcIix0KSx0JiZ0Lmxlbmd0aCl7dmFyIGU9dGhpcy51cGRhdGVTdGFnZ2VyKCk7dC5mb3JFYWNoKGZ1bmN0aW9uKHQsaSl7dC5zdGFnZ2VyKGkqZSksdC5oaWRlKCl9KX19LGMucmV2ZWFsSXRlbUVsZW1lbnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbXModCk7dGhpcy5yZXZlYWwoZSl9LGMuaGlkZUl0ZW1FbGVtZW50cz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldEl0ZW1zKHQpO3RoaXMuaGlkZShlKX0sYy5nZXRJdGVtPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8dGhpcy5pdGVtcy5sZW5ndGg7ZSsrKXt2YXIgaT10aGlzLml0ZW1zW2VdO2lmKGkuZWxlbWVudD09dClyZXR1cm4gaX19LGMuZ2V0SXRlbXM9ZnVuY3Rpb24odCl7dD1vLm1ha2VBcnJheSh0KTt2YXIgZT1bXTtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMuZ2V0SXRlbSh0KTtpJiZlLnB1c2goaSl9LHRoaXMpLGV9LGMucmVtb3ZlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SXRlbXModCk7dGhpcy5fZW1pdENvbXBsZXRlT25JdGVtcyhcInJlbW92ZVwiLGUpLGUmJmUubGVuZ3RoJiZlLmZvckVhY2goZnVuY3Rpb24odCl7dC5yZW1vdmUoKSxvLnJlbW92ZUZyb20odGhpcy5pdGVtcyx0KX0sdGhpcyl9LGMuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5zdHlsZTt0LmhlaWdodD1cIlwiLHQucG9zaXRpb249XCJcIix0LndpZHRoPVwiXCIsdGhpcy5pdGVtcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QuZGVzdHJveSgpfSksdGhpcy51bmJpbmRSZXNpemUoKTt2YXIgZT10aGlzLmVsZW1lbnQub3V0bGF5ZXJHVUlEO2RlbGV0ZSBmW2VdLGRlbGV0ZSB0aGlzLmVsZW1lbnQub3V0bGF5ZXJHVUlELGgmJmgucmVtb3ZlRGF0YSh0aGlzLmVsZW1lbnQsdGhpcy5jb25zdHJ1Y3Rvci5uYW1lc3BhY2UpfSxzLmRhdGE9ZnVuY3Rpb24odCl7dD1vLmdldFF1ZXJ5RWxlbWVudCh0KTt2YXIgZT10JiZ0Lm91dGxheWVyR1VJRDtyZXR1cm4gZSYmZltlXX0scy5jcmVhdGU9ZnVuY3Rpb24odCxlKXt2YXIgaT1yKHMpO3JldHVybiBpLmRlZmF1bHRzPW8uZXh0ZW5kKHt9LHMuZGVmYXVsdHMpLG8uZXh0ZW5kKGkuZGVmYXVsdHMsZSksaS5jb21wYXRPcHRpb25zPW8uZXh0ZW5kKHt9LHMuY29tcGF0T3B0aW9ucyksaS5uYW1lc3BhY2U9dCxpLmRhdGE9cy5kYXRhLGkuSXRlbT1yKG4pLG8uaHRtbEluaXQoaSx0KSxoJiZoLmJyaWRnZXQmJmguYnJpZGdldCh0LGkpLGl9O3ZhciBtPXttczoxLHM6MWUzfTtyZXR1cm4gcy5JdGVtPW4sc30pLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImlzb3RvcGUvanMvaXRlbVwiLFtcIm91dGxheWVyL291dGxheWVyXCJdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUocmVxdWlyZShcIm91dGxheWVyXCIpKToodC5Jc290b3BlPXQuSXNvdG9wZXx8e30sdC5Jc290b3BlLkl0ZW09ZSh0Lk91dGxheWVyKSl9KHdpbmRvdyxmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBlKCl7dC5JdGVtLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgaT1lLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQuSXRlbS5wcm90b3R5cGUpLG89aS5fY3JlYXRlO2kuX2NyZWF0ZT1mdW5jdGlvbigpe3RoaXMuaWQ9dGhpcy5sYXlvdXQuaXRlbUdVSUQrKyxvLmNhbGwodGhpcyksdGhpcy5zb3J0RGF0YT17fX0saS51cGRhdGVTb3J0RGF0YT1mdW5jdGlvbigpe2lmKCF0aGlzLmlzSWdub3JlZCl7dGhpcy5zb3J0RGF0YS5pZD10aGlzLmlkLHRoaXMuc29ydERhdGFbXCJvcmlnaW5hbC1vcmRlclwiXT10aGlzLmlkLHRoaXMuc29ydERhdGEucmFuZG9tPU1hdGgucmFuZG9tKCk7dmFyIHQ9dGhpcy5sYXlvdXQub3B0aW9ucy5nZXRTb3J0RGF0YSxlPXRoaXMubGF5b3V0Ll9zb3J0ZXJzO2Zvcih2YXIgaSBpbiB0KXt2YXIgbz1lW2ldO3RoaXMuc29ydERhdGFbaV09byh0aGlzLmVsZW1lbnQsdGhpcyl9fX07dmFyIG49aS5kZXN0cm95O3JldHVybiBpLmRlc3Ryb3k9ZnVuY3Rpb24oKXtuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmNzcyh7ZGlzcGxheTpcIlwifSl9LGV9KSxmdW5jdGlvbih0LGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJpc290b3BlL2pzL2xheW91dC1tb2RlXCIsW1wiZ2V0LXNpemUvZ2V0LXNpemVcIixcIm91dGxheWVyL291dGxheWVyXCJdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUocmVxdWlyZShcImdldC1zaXplXCIpLHJlcXVpcmUoXCJvdXRsYXllclwiKSk6KHQuSXNvdG9wZT10Lklzb3RvcGV8fHt9LHQuSXNvdG9wZS5MYXlvdXRNb2RlPWUodC5nZXRTaXplLHQuT3V0bGF5ZXIpKX0od2luZG93LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXt0aGlzLmlzb3RvcGU9dCx0JiYodGhpcy5vcHRpb25zPXQub3B0aW9uc1t0aGlzLm5hbWVzcGFjZV0sdGhpcy5lbGVtZW50PXQuZWxlbWVudCx0aGlzLml0ZW1zPXQuZmlsdGVyZWRJdGVtcyx0aGlzLnNpemU9dC5zaXplKX12YXIgbz1pLnByb3RvdHlwZSxuPVtcIl9yZXNldExheW91dFwiLFwiX2dldEl0ZW1MYXlvdXRQb3NpdGlvblwiLFwiX21hbmFnZVN0YW1wXCIsXCJfZ2V0Q29udGFpbmVyU2l6ZVwiLFwiX2dldEVsZW1lbnRPZmZzZXRcIixcIm5lZWRzUmVzaXplTGF5b3V0XCIsXCJfZ2V0T3B0aW9uXCJdO3JldHVybiBuLmZvckVhY2goZnVuY3Rpb24odCl7b1t0XT1mdW5jdGlvbigpe3JldHVybiBlLnByb3RvdHlwZVt0XS5hcHBseSh0aGlzLmlzb3RvcGUsYXJndW1lbnRzKX19KSxvLm5lZWRzVmVydGljYWxSZXNpemVMYXlvdXQ9ZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMuaXNvdG9wZS5lbGVtZW50KSxpPXRoaXMuaXNvdG9wZS5zaXplJiZlO3JldHVybiBpJiZlLmlubmVySGVpZ2h0IT10aGlzLmlzb3RvcGUuc2l6ZS5pbm5lckhlaWdodH0sby5fZ2V0TWVhc3VyZW1lbnQ9ZnVuY3Rpb24oKXt0aGlzLmlzb3RvcGUuX2dldE1lYXN1cmVtZW50LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sby5nZXRDb2x1bW5XaWR0aD1mdW5jdGlvbigpe3RoaXMuZ2V0U2VnbWVudFNpemUoXCJjb2x1bW5cIixcIldpZHRoXCIpfSxvLmdldFJvd0hlaWdodD1mdW5jdGlvbigpe3RoaXMuZ2V0U2VnbWVudFNpemUoXCJyb3dcIixcIkhlaWdodFwiKX0sby5nZXRTZWdtZW50U2l6ZT1mdW5jdGlvbih0LGUpe3ZhciBpPXQrZSxvPVwib3V0ZXJcIitlO2lmKHRoaXMuX2dldE1lYXN1cmVtZW50KGksbyksIXRoaXNbaV0pe3ZhciBuPXRoaXMuZ2V0Rmlyc3RJdGVtU2l6ZSgpO3RoaXNbaV09biYmbltvXXx8dGhpcy5pc290b3BlLnNpemVbXCJpbm5lclwiK2VdfX0sby5nZXRGaXJzdEl0ZW1TaXplPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5pc290b3BlLmZpbHRlcmVkSXRlbXNbMF07cmV0dXJuIGUmJmUuZWxlbWVudCYmdChlLmVsZW1lbnQpfSxvLmxheW91dD1mdW5jdGlvbigpe3RoaXMuaXNvdG9wZS5sYXlvdXQuYXBwbHkodGhpcy5pc290b3BlLGFyZ3VtZW50cyl9LG8uZ2V0U2l6ZT1mdW5jdGlvbigpe3RoaXMuaXNvdG9wZS5nZXRTaXplKCksdGhpcy5zaXplPXRoaXMuaXNvdG9wZS5zaXplfSxpLm1vZGVzPXt9LGkuY3JlYXRlPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpe2kuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG8pLG4ucHJvdG90eXBlLmNvbnN0cnVjdG9yPW4sZSYmKG4ub3B0aW9ucz1lKSxuLnByb3RvdHlwZS5uYW1lc3BhY2U9dCxpLm1vZGVzW3RdPW4sbn0saX0pLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcIm1hc29ucnkvbWFzb25yeVwiLFtcIm91dGxheWVyL291dGxheWVyXCIsXCJnZXQtc2l6ZS9nZXQtc2l6ZVwiXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHJlcXVpcmUoXCJvdXRsYXllclwiKSxyZXF1aXJlKFwiZ2V0LXNpemVcIikpOnQuTWFzb25yeT1lKHQuT3V0bGF5ZXIsdC5nZXRTaXplKX0od2luZG93LGZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5jcmVhdGUoXCJtYXNvbnJ5XCIpO2kuY29tcGF0T3B0aW9ucy5maXRXaWR0aD1cImlzRml0V2lkdGhcIjt2YXIgbz1pLnByb3RvdHlwZTtyZXR1cm4gby5fcmVzZXRMYXlvdXQ9ZnVuY3Rpb24oKXt0aGlzLmdldFNpemUoKSx0aGlzLl9nZXRNZWFzdXJlbWVudChcImNvbHVtbldpZHRoXCIsXCJvdXRlcldpZHRoXCIpLHRoaXMuX2dldE1lYXN1cmVtZW50KFwiZ3V0dGVyXCIsXCJvdXRlcldpZHRoXCIpLHRoaXMubWVhc3VyZUNvbHVtbnMoKSx0aGlzLmNvbFlzPVtdO2Zvcih2YXIgdD0wO3Q8dGhpcy5jb2xzO3QrKyl0aGlzLmNvbFlzLnB1c2goMCk7dGhpcy5tYXhZPTAsdGhpcy5ob3Jpem9udGFsQ29sSW5kZXg9MH0sby5tZWFzdXJlQ29sdW1ucz1mdW5jdGlvbigpe2lmKHRoaXMuZ2V0Q29udGFpbmVyV2lkdGgoKSwhdGhpcy5jb2x1bW5XaWR0aCl7dmFyIHQ9dGhpcy5pdGVtc1swXSxpPXQmJnQuZWxlbWVudDt0aGlzLmNvbHVtbldpZHRoPWkmJmUoaSkub3V0ZXJXaWR0aHx8dGhpcy5jb250YWluZXJXaWR0aH12YXIgbz10aGlzLmNvbHVtbldpZHRoKz10aGlzLmd1dHRlcixuPXRoaXMuY29udGFpbmVyV2lkdGgrdGhpcy5ndXR0ZXIscz1uL28scj1vLW4lbyxhPXImJnI8MT9cInJvdW5kXCI6XCJmbG9vclwiO3M9TWF0aFthXShzKSx0aGlzLmNvbHM9TWF0aC5tYXgocywxKX0sby5nZXRDb250YWluZXJXaWR0aD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2dldE9wdGlvbihcImZpdFdpZHRoXCIpLGk9dD90aGlzLmVsZW1lbnQucGFyZW50Tm9kZTp0aGlzLmVsZW1lbnQsbz1lKGkpO3RoaXMuY29udGFpbmVyV2lkdGg9byYmby5pbm5lcldpZHRofSxvLl9nZXRJdGVtTGF5b3V0UG9zaXRpb249ZnVuY3Rpb24odCl7dC5nZXRTaXplKCk7dmFyIGU9dC5zaXplLm91dGVyV2lkdGgldGhpcy5jb2x1bW5XaWR0aCxpPWUmJmU8MT9cInJvdW5kXCI6XCJjZWlsXCIsbz1NYXRoW2ldKHQuc2l6ZS5vdXRlcldpZHRoL3RoaXMuY29sdW1uV2lkdGgpO289TWF0aC5taW4obyx0aGlzLmNvbHMpO2Zvcih2YXIgbj10aGlzLm9wdGlvbnMuaG9yaXpvbnRhbE9yZGVyP1wiX2dldEhvcml6b250YWxDb2xQb3NpdGlvblwiOlwiX2dldFRvcENvbFBvc2l0aW9uXCIscz10aGlzW25dKG8sdCkscj17eDp0aGlzLmNvbHVtbldpZHRoKnMuY29sLHk6cy55fSxhPXMueSt0LnNpemUub3V0ZXJIZWlnaHQsdT1vK3MuY29sLGg9cy5jb2w7aDx1O2grKyl0aGlzLmNvbFlzW2hdPWE7cmV0dXJuIHJ9LG8uX2dldFRvcENvbFBvc2l0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2dldFRvcENvbEdyb3VwKHQpLGk9TWF0aC5taW4uYXBwbHkoTWF0aCxlKTtyZXR1cm57Y29sOmUuaW5kZXhPZihpKSx5Oml9fSxvLl9nZXRUb3BDb2xHcm91cD1mdW5jdGlvbih0KXtpZih0PDIpcmV0dXJuIHRoaXMuY29sWXM7Zm9yKHZhciBlPVtdLGk9dGhpcy5jb2xzKzEtdCxvPTA7bzxpO28rKyllW29dPXRoaXMuX2dldENvbEdyb3VwWShvLHQpO3JldHVybiBlfSxvLl9nZXRDb2xHcm91cFk9ZnVuY3Rpb24odCxlKXtpZihlPDIpcmV0dXJuIHRoaXMuY29sWXNbdF07dmFyIGk9dGhpcy5jb2xZcy5zbGljZSh0LHQrZSk7cmV0dXJuIE1hdGgubWF4LmFwcGx5KE1hdGgsaSl9LG8uX2dldEhvcml6b250YWxDb2xQb3NpdGlvbj1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuaG9yaXpvbnRhbENvbEluZGV4JXRoaXMuY29scyxvPXQ+MSYmaSt0PnRoaXMuY29scztpPW8/MDppO3ZhciBuPWUuc2l6ZS5vdXRlcldpZHRoJiZlLnNpemUub3V0ZXJIZWlnaHQ7cmV0dXJuIHRoaXMuaG9yaXpvbnRhbENvbEluZGV4PW4/aSt0OnRoaXMuaG9yaXpvbnRhbENvbEluZGV4LHtjb2w6aSx5OnRoaXMuX2dldENvbEdyb3VwWShpLHQpfX0sby5fbWFuYWdlU3RhbXA9ZnVuY3Rpb24odCl7dmFyIGk9ZSh0KSxvPXRoaXMuX2dldEVsZW1lbnRPZmZzZXQodCksbj10aGlzLl9nZXRPcHRpb24oXCJvcmlnaW5MZWZ0XCIpLHM9bj9vLmxlZnQ6by5yaWdodCxyPXMraS5vdXRlcldpZHRoLGE9TWF0aC5mbG9vcihzL3RoaXMuY29sdW1uV2lkdGgpO2E9TWF0aC5tYXgoMCxhKTt2YXIgdT1NYXRoLmZsb29yKHIvdGhpcy5jb2x1bW5XaWR0aCk7dS09ciV0aGlzLmNvbHVtbldpZHRoPzA6MSx1PU1hdGgubWluKHRoaXMuY29scy0xLHUpO2Zvcih2YXIgaD10aGlzLl9nZXRPcHRpb24oXCJvcmlnaW5Ub3BcIiksZD0oaD9vLnRvcDpvLmJvdHRvbSkraS5vdXRlckhlaWdodCxsPWE7bDw9dTtsKyspdGhpcy5jb2xZc1tsXT1NYXRoLm1heChkLHRoaXMuY29sWXNbbF0pfSxvLl9nZXRDb250YWluZXJTaXplPWZ1bmN0aW9uKCl7dGhpcy5tYXhZPU1hdGgubWF4LmFwcGx5KE1hdGgsdGhpcy5jb2xZcyk7dmFyIHQ9e2hlaWdodDp0aGlzLm1heFl9O3JldHVybiB0aGlzLl9nZXRPcHRpb24oXCJmaXRXaWR0aFwiKSYmKHQud2lkdGg9dGhpcy5fZ2V0Q29udGFpbmVyRml0V2lkdGgoKSksdH0sby5fZ2V0Q29udGFpbmVyRml0V2lkdGg9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMuY29sczstLWUmJjA9PT10aGlzLmNvbFlzW2VdOyl0Kys7cmV0dXJuKHRoaXMuY29scy10KSp0aGlzLmNvbHVtbldpZHRoLXRoaXMuZ3V0dGVyfSxvLm5lZWRzUmVzaXplTGF5b3V0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb250YWluZXJXaWR0aDtyZXR1cm4gdGhpcy5nZXRDb250YWluZXJXaWR0aCgpLHQhPXRoaXMuY29udGFpbmVyV2lkdGh9LGl9KSxmdW5jdGlvbih0LGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJpc290b3BlL2pzL2xheW91dC1tb2Rlcy9tYXNvbnJ5XCIsW1wiLi4vbGF5b3V0LW1vZGVcIixcIm1hc29ucnkvbWFzb25yeVwiXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHJlcXVpcmUoXCIuLi9sYXlvdXQtbW9kZVwiKSxyZXF1aXJlKFwibWFzb25yeS1sYXlvdXRcIikpOmUodC5Jc290b3BlLkxheW91dE1vZGUsdC5NYXNvbnJ5KX0od2luZG93LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dC5jcmVhdGUoXCJtYXNvbnJ5XCIpLG89aS5wcm90b3R5cGUsbj17X2dldEVsZW1lbnRPZmZzZXQ6ITAsbGF5b3V0OiEwLF9nZXRNZWFzdXJlbWVudDohMH07Zm9yKHZhciBzIGluIGUucHJvdG90eXBlKW5bc118fChvW3NdPWUucHJvdG90eXBlW3NdKTt2YXIgcj1vLm1lYXN1cmVDb2x1bW5zO28ubWVhc3VyZUNvbHVtbnM9ZnVuY3Rpb24oKXt0aGlzLml0ZW1zPXRoaXMuaXNvdG9wZS5maWx0ZXJlZEl0ZW1zLHIuY2FsbCh0aGlzKX07dmFyIGE9by5fZ2V0T3B0aW9uO3JldHVybiBvLl9nZXRPcHRpb249ZnVuY3Rpb24odCl7cmV0dXJuXCJmaXRXaWR0aFwiPT10P3ZvaWQgMCE9PXRoaXMub3B0aW9ucy5pc0ZpdFdpZHRoP3RoaXMub3B0aW9ucy5pc0ZpdFdpZHRoOnRoaXMub3B0aW9ucy5maXRXaWR0aDphLmFwcGx5KHRoaXMuaXNvdG9wZSxhcmd1bWVudHMpfSxpfSksZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiaXNvdG9wZS9qcy9sYXlvdXQtbW9kZXMvZml0LXJvd3NcIixbXCIuLi9sYXlvdXQtbW9kZVwiXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHJlcXVpcmUoXCIuLi9sYXlvdXQtbW9kZVwiKSk6ZSh0Lklzb3RvcGUuTGF5b3V0TW9kZSl9KHdpbmRvdyxmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjt2YXIgZT10LmNyZWF0ZShcImZpdFJvd3NcIiksaT1lLnByb3RvdHlwZTtyZXR1cm4gaS5fcmVzZXRMYXlvdXQ9ZnVuY3Rpb24oKXt0aGlzLng9MCx0aGlzLnk9MCx0aGlzLm1heFk9MCx0aGlzLl9nZXRNZWFzdXJlbWVudChcImd1dHRlclwiLFwib3V0ZXJXaWR0aFwiKX0saS5fZ2V0SXRlbUxheW91dFBvc2l0aW9uPWZ1bmN0aW9uKHQpe3QuZ2V0U2l6ZSgpO3ZhciBlPXQuc2l6ZS5vdXRlcldpZHRoK3RoaXMuZ3V0dGVyLGk9dGhpcy5pc290b3BlLnNpemUuaW5uZXJXaWR0aCt0aGlzLmd1dHRlcjswIT09dGhpcy54JiZlK3RoaXMueD5pJiYodGhpcy54PTAsdGhpcy55PXRoaXMubWF4WSk7dmFyIG89e3g6dGhpcy54LHk6dGhpcy55fTtyZXR1cm4gdGhpcy5tYXhZPU1hdGgubWF4KHRoaXMubWF4WSx0aGlzLnkrdC5zaXplLm91dGVySGVpZ2h0KSx0aGlzLngrPWUsb30saS5fZ2V0Q29udGFpbmVyU2l6ZT1mdW5jdGlvbigpe3JldHVybntoZWlnaHQ6dGhpcy5tYXhZfX0sZX0pLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImlzb3RvcGUvanMvbGF5b3V0LW1vZGVzL3ZlcnRpY2FsXCIsW1wiLi4vbGF5b3V0LW1vZGVcIl0sZSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZShyZXF1aXJlKFwiLi4vbGF5b3V0LW1vZGVcIikpOmUodC5Jc290b3BlLkxheW91dE1vZGUpfSh3aW5kb3csZnVuY3Rpb24odCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9dC5jcmVhdGUoXCJ2ZXJ0aWNhbFwiLHtob3Jpem9udGFsQWxpZ25tZW50OjB9KSxpPWUucHJvdG90eXBlO3JldHVybiBpLl9yZXNldExheW91dD1mdW5jdGlvbigpe3RoaXMueT0wfSxpLl9nZXRJdGVtTGF5b3V0UG9zaXRpb249ZnVuY3Rpb24odCl7dC5nZXRTaXplKCk7dmFyIGU9KHRoaXMuaXNvdG9wZS5zaXplLmlubmVyV2lkdGgtdC5zaXplLm91dGVyV2lkdGgpKnRoaXMub3B0aW9ucy5ob3Jpem9udGFsQWxpZ25tZW50LGk9dGhpcy55O3JldHVybiB0aGlzLnkrPXQuc2l6ZS5vdXRlckhlaWdodCx7eDplLHk6aX19LGkuX2dldENvbnRhaW5lclNpemU9ZnVuY3Rpb24oKXtyZXR1cm57aGVpZ2h0OnRoaXMueX19LGV9KSxmdW5jdGlvbih0LGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wib3V0bGF5ZXIvb3V0bGF5ZXJcIixcImdldC1zaXplL2dldC1zaXplXCIsXCJkZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yL21hdGNoZXMtc2VsZWN0b3JcIixcImZpenp5LXVpLXV0aWxzL3V0aWxzXCIsXCJpc290b3BlL2pzL2l0ZW1cIixcImlzb3RvcGUvanMvbGF5b3V0LW1vZGVcIixcImlzb3RvcGUvanMvbGF5b3V0LW1vZGVzL21hc29ucnlcIixcImlzb3RvcGUvanMvbGF5b3V0LW1vZGVzL2ZpdC1yb3dzXCIsXCJpc290b3BlL2pzL2xheW91dC1tb2Rlcy92ZXJ0aWNhbFwiXSxmdW5jdGlvbihpLG8sbixzLHIsYSl7cmV0dXJuIGUodCxpLG8sbixzLHIsYSl9KTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKHQscmVxdWlyZShcIm91dGxheWVyXCIpLHJlcXVpcmUoXCJnZXQtc2l6ZVwiKSxyZXF1aXJlKFwiZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3RvclwiKSxyZXF1aXJlKFwiZml6enktdWktdXRpbHNcIikscmVxdWlyZShcImlzb3RvcGUvanMvaXRlbVwiKSxyZXF1aXJlKFwiaXNvdG9wZS9qcy9sYXlvdXQtbW9kZVwiKSxyZXF1aXJlKFwiaXNvdG9wZS9qcy9sYXlvdXQtbW9kZXMvbWFzb25yeVwiKSxyZXF1aXJlKFwiaXNvdG9wZS9qcy9sYXlvdXQtbW9kZXMvZml0LXJvd3NcIikscmVxdWlyZShcImlzb3RvcGUvanMvbGF5b3V0LW1vZGVzL3ZlcnRpY2FsXCIpKTp0Lklzb3RvcGU9ZSh0LHQuT3V0bGF5ZXIsdC5nZXRTaXplLHQubWF0Y2hlc1NlbGVjdG9yLHQuZml6enlVSVV0aWxzLHQuSXNvdG9wZS5JdGVtLHQuSXNvdG9wZS5MYXlvdXRNb2RlKX0od2luZG93LGZ1bmN0aW9uKHQsZSxpLG8sbixzLHIpe2Z1bmN0aW9uIGEodCxlKXtyZXR1cm4gZnVuY3Rpb24oaSxvKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHM9dFtuXSxyPWkuc29ydERhdGFbc10sYT1vLnNvcnREYXRhW3NdO2lmKHI+YXx8cjxhKXt2YXIgdT12b2lkIDAhPT1lW3NdP2Vbc106ZSxoPXU/MTotMTtyZXR1cm4ocj5hPzE6LTEpKmh9fXJldHVybiAwfX12YXIgdT10LmpRdWVyeSxoPVN0cmluZy5wcm90b3R5cGUudHJpbT9mdW5jdGlvbih0KXtyZXR1cm4gdC50cmltKCl9OmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL15cXHMrfFxccyskL2csXCJcIil9LGQ9ZS5jcmVhdGUoXCJpc290b3BlXCIse2xheW91dE1vZGU6XCJtYXNvbnJ5XCIsaXNKUXVlcnlGaWx0ZXJpbmc6ITAsc29ydEFzY2VuZGluZzohMH0pO2QuSXRlbT1zLGQuTGF5b3V0TW9kZT1yO3ZhciBsPWQucHJvdG90eXBlO2wuX2NyZWF0ZT1mdW5jdGlvbigpe3RoaXMuaXRlbUdVSUQ9MCx0aGlzLl9zb3J0ZXJzPXt9LHRoaXMuX2dldFNvcnRlcnMoKSxlLnByb3RvdHlwZS5fY3JlYXRlLmNhbGwodGhpcyksdGhpcy5tb2Rlcz17fSx0aGlzLmZpbHRlcmVkSXRlbXM9dGhpcy5pdGVtcyx0aGlzLnNvcnRIaXN0b3J5PVtcIm9yaWdpbmFsLW9yZGVyXCJdO2Zvcih2YXIgdCBpbiByLm1vZGVzKXRoaXMuX2luaXRMYXlvdXRNb2RlKHQpfSxsLnJlbG9hZEl0ZW1zPWZ1bmN0aW9uKCl7dGhpcy5pdGVtR1VJRD0wLGUucHJvdG90eXBlLnJlbG9hZEl0ZW1zLmNhbGwodGhpcyl9LGwuX2l0ZW1pemU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9ZS5wcm90b3R5cGUuX2l0ZW1pemUuYXBwbHkodGhpcyxhcmd1bWVudHMpLGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIG89dFtpXTtvLmlkPXRoaXMuaXRlbUdVSUQrK31yZXR1cm4gdGhpcy5fdXBkYXRlSXRlbXNTb3J0RGF0YSh0KSx0fSxsLl9pbml0TGF5b3V0TW9kZT1mdW5jdGlvbih0KXt2YXIgZT1yLm1vZGVzW3RdLGk9dGhpcy5vcHRpb25zW3RdfHx7fTt0aGlzLm9wdGlvbnNbdF09ZS5vcHRpb25zP24uZXh0ZW5kKGUub3B0aW9ucyxpKTppLHRoaXMubW9kZXNbdF09bmV3IGUodGhpcyl9LGwubGF5b3V0PWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX2lzTGF5b3V0SW5pdGVkJiZ0aGlzLl9nZXRPcHRpb24oXCJpbml0TGF5b3V0XCIpP3ZvaWQgdGhpcy5hcnJhbmdlKCk6dm9pZCB0aGlzLl9sYXlvdXQoKX0sbC5fbGF5b3V0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZ2V0SXNJbnN0YW50KCk7dGhpcy5fcmVzZXRMYXlvdXQoKSx0aGlzLl9tYW5hZ2VTdGFtcHMoKSx0aGlzLmxheW91dEl0ZW1zKHRoaXMuZmlsdGVyZWRJdGVtcyx0KSx0aGlzLl9pc0xheW91dEluaXRlZD0hMH0sbC5hcnJhbmdlPWZ1bmN0aW9uKHQpe3RoaXMub3B0aW9uKHQpLHRoaXMuX2dldElzSW5zdGFudCgpO3ZhciBlPXRoaXMuX2ZpbHRlcih0aGlzLml0ZW1zKTt0aGlzLmZpbHRlcmVkSXRlbXM9ZS5tYXRjaGVzLHRoaXMuX2JpbmRBcnJhbmdlQ29tcGxldGUoKSx0aGlzLl9pc0luc3RhbnQ/dGhpcy5fbm9UcmFuc2l0aW9uKHRoaXMuX2hpZGVSZXZlYWwsW2VdKTp0aGlzLl9oaWRlUmV2ZWFsKGUpLHRoaXMuX3NvcnQoKSx0aGlzLl9sYXlvdXQoKX0sbC5faW5pdD1sLmFycmFuZ2UsbC5faGlkZVJldmVhbD1mdW5jdGlvbih0KXt0aGlzLnJldmVhbCh0Lm5lZWRSZXZlYWwpLHRoaXMuaGlkZSh0Lm5lZWRIaWRlKX0sbC5fZ2V0SXNJbnN0YW50PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZ2V0T3B0aW9uKFwibGF5b3V0SW5zdGFudFwiKSxlPXZvaWQgMCE9PXQ/dDohdGhpcy5faXNMYXlvdXRJbml0ZWQ7cmV0dXJuIHRoaXMuX2lzSW5zdGFudD1lLGV9LGwuX2JpbmRBcnJhbmdlQ29tcGxldGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7ZSYmaSYmbyYmbi5kaXNwYXRjaEV2ZW50KFwiYXJyYW5nZUNvbXBsZXRlXCIsbnVsbCxbbi5maWx0ZXJlZEl0ZW1zXSl9dmFyIGUsaSxvLG49dGhpczt0aGlzLm9uY2UoXCJsYXlvdXRDb21wbGV0ZVwiLGZ1bmN0aW9uKCl7ZT0hMCx0KCl9KSx0aGlzLm9uY2UoXCJoaWRlQ29tcGxldGVcIixmdW5jdGlvbigpe2k9ITAsdCgpfSksdGhpcy5vbmNlKFwicmV2ZWFsQ29tcGxldGVcIixmdW5jdGlvbigpe289ITAsdCgpfSl9LGwuX2ZpbHRlcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbnMuZmlsdGVyO2U9ZXx8XCIqXCI7Zm9yKHZhciBpPVtdLG89W10sbj1bXSxzPXRoaXMuX2dldEZpbHRlclRlc3QoZSkscj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgYT10W3JdO2lmKCFhLmlzSWdub3JlZCl7dmFyIHU9cyhhKTt1JiZpLnB1c2goYSksdSYmYS5pc0hpZGRlbj9vLnB1c2goYSk6dXx8YS5pc0hpZGRlbnx8bi5wdXNoKGEpfX1yZXR1cm57bWF0Y2hlczppLG5lZWRSZXZlYWw6byxuZWVkSGlkZTpufX0sbC5fZ2V0RmlsdGVyVGVzdD1mdW5jdGlvbih0KXtyZXR1cm4gdSYmdGhpcy5vcHRpb25zLmlzSlF1ZXJ5RmlsdGVyaW5nP2Z1bmN0aW9uKGUpe3JldHVybiB1KGUuZWxlbWVudCkuaXModCl9OlwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZS5lbGVtZW50KX06ZnVuY3Rpb24oZSl7cmV0dXJuIG8oZS5lbGVtZW50LHQpfX0sbC51cGRhdGVTb3J0RGF0YT1mdW5jdGlvbih0KXtcbnZhciBlO3Q/KHQ9bi5tYWtlQXJyYXkodCksZT10aGlzLmdldEl0ZW1zKHQpKTplPXRoaXMuaXRlbXMsdGhpcy5fZ2V0U29ydGVycygpLHRoaXMuX3VwZGF0ZUl0ZW1zU29ydERhdGEoZSl9LGwuX2dldFNvcnRlcnM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMuZ2V0U29ydERhdGE7Zm9yKHZhciBlIGluIHQpe3ZhciBpPXRbZV07dGhpcy5fc29ydGVyc1tlXT1mKGkpfX0sbC5fdXBkYXRlSXRlbXNTb3J0RGF0YT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dCYmdC5sZW5ndGgsaT0wO2UmJmk8ZTtpKyspe3ZhciBvPXRbaV07by51cGRhdGVTb3J0RGF0YSgpfX07dmFyIGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0KXJldHVybiB0O3ZhciBpPWgodCkuc3BsaXQoXCIgXCIpLG89aVswXSxuPW8ubWF0Y2goL15cXFsoLispXFxdJC8pLHM9biYmblsxXSxyPWUocyxvKSxhPWQuc29ydERhdGFQYXJzZXJzW2lbMV1dO3JldHVybiB0PWE/ZnVuY3Rpb24odCl7cmV0dXJuIHQmJmEocih0KSl9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZyKHQpfX1mdW5jdGlvbiBlKHQsZSl7cmV0dXJuIHQ/ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlKHQpfTpmdW5jdGlvbih0KXt2YXIgaT10LnF1ZXJ5U2VsZWN0b3IoZSk7cmV0dXJuIGkmJmkudGV4dENvbnRlbnR9fXJldHVybiB0fSgpO2Quc29ydERhdGFQYXJzZXJzPXtwYXJzZUludDpmdW5jdGlvbih0KXtyZXR1cm4gcGFyc2VJbnQodCwxMCl9LHBhcnNlRmxvYXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlRmxvYXQodCl9fSxsLl9zb3J0PWZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLnNvcnRCeSl7dmFyIHQ9bi5tYWtlQXJyYXkodGhpcy5vcHRpb25zLnNvcnRCeSk7dGhpcy5fZ2V0SXNTYW1lU29ydEJ5KHQpfHwodGhpcy5zb3J0SGlzdG9yeT10LmNvbmNhdCh0aGlzLnNvcnRIaXN0b3J5KSk7dmFyIGU9YSh0aGlzLnNvcnRIaXN0b3J5LHRoaXMub3B0aW9ucy5zb3J0QXNjZW5kaW5nKTt0aGlzLmZpbHRlcmVkSXRlbXMuc29ydChlKX19LGwuX2dldElzU2FtZVNvcnRCeT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKylpZih0W2VdIT10aGlzLnNvcnRIaXN0b3J5W2VdKXJldHVybiExO3JldHVybiEwfSxsLl9tb2RlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLmxheW91dE1vZGUsZT10aGlzLm1vZGVzW3RdO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIk5vIGxheW91dCBtb2RlOiBcIit0KTtyZXR1cm4gZS5vcHRpb25zPXRoaXMub3B0aW9uc1t0XSxlfSxsLl9yZXNldExheW91dD1mdW5jdGlvbigpe2UucHJvdG90eXBlLl9yZXNldExheW91dC5jYWxsKHRoaXMpLHRoaXMuX21vZGUoKS5fcmVzZXRMYXlvdXQoKX0sbC5fZ2V0SXRlbUxheW91dFBvc2l0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9tb2RlKCkuX2dldEl0ZW1MYXlvdXRQb3NpdGlvbih0KX0sbC5fbWFuYWdlU3RhbXA9ZnVuY3Rpb24odCl7dGhpcy5fbW9kZSgpLl9tYW5hZ2VTdGFtcCh0KX0sbC5fZ2V0Q29udGFpbmVyU2l6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb2RlKCkuX2dldENvbnRhaW5lclNpemUoKX0sbC5uZWVkc1Jlc2l6ZUxheW91dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb2RlKCkubmVlZHNSZXNpemVMYXlvdXQoKX0sbC5hcHBlbmRlZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmFkZEl0ZW1zKHQpO2lmKGUubGVuZ3RoKXt2YXIgaT10aGlzLl9maWx0ZXJSZXZlYWxBZGRlZChlKTt0aGlzLmZpbHRlcmVkSXRlbXM9dGhpcy5maWx0ZXJlZEl0ZW1zLmNvbmNhdChpKX19LGwucHJlcGVuZGVkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2l0ZW1pemUodCk7aWYoZS5sZW5ndGgpe3RoaXMuX3Jlc2V0TGF5b3V0KCksdGhpcy5fbWFuYWdlU3RhbXBzKCk7dmFyIGk9dGhpcy5fZmlsdGVyUmV2ZWFsQWRkZWQoZSk7dGhpcy5sYXlvdXRJdGVtcyh0aGlzLmZpbHRlcmVkSXRlbXMpLHRoaXMuZmlsdGVyZWRJdGVtcz1pLmNvbmNhdCh0aGlzLmZpbHRlcmVkSXRlbXMpLHRoaXMuaXRlbXM9ZS5jb25jYXQodGhpcy5pdGVtcyl9fSxsLl9maWx0ZXJSZXZlYWxBZGRlZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9maWx0ZXIodCk7cmV0dXJuIHRoaXMuaGlkZShlLm5lZWRIaWRlKSx0aGlzLnJldmVhbChlLm1hdGNoZXMpLHRoaXMubGF5b3V0SXRlbXMoZS5tYXRjaGVzLCEwKSxlLm1hdGNoZXN9LGwuaW5zZXJ0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWRkSXRlbXModCk7aWYoZS5sZW5ndGgpe3ZhciBpLG8sbj1lLmxlbmd0aDtmb3IoaT0wO2k8bjtpKyspbz1lW2ldLHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChvLmVsZW1lbnQpO3ZhciBzPXRoaXMuX2ZpbHRlcihlKS5tYXRjaGVzO2ZvcihpPTA7aTxuO2krKyllW2ldLmlzTGF5b3V0SW5zdGFudD0hMDtmb3IodGhpcy5hcnJhbmdlKCksaT0wO2k8bjtpKyspZGVsZXRlIGVbaV0uaXNMYXlvdXRJbnN0YW50O3RoaXMucmV2ZWFsKHMpfX07dmFyIGM9bC5yZW1vdmU7cmV0dXJuIGwucmVtb3ZlPWZ1bmN0aW9uKHQpe3Q9bi5tYWtlQXJyYXkodCk7dmFyIGU9dGhpcy5nZXRJdGVtcyh0KTtjLmNhbGwodGhpcyx0KTtmb3IodmFyIGk9ZSYmZS5sZW5ndGgsbz0wO2kmJm88aTtvKyspe3ZhciBzPWVbb107bi5yZW1vdmVGcm9tKHRoaXMuZmlsdGVyZWRJdGVtcyxzKX19LGwuc2h1ZmZsZT1mdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8dGhpcy5pdGVtcy5sZW5ndGg7dCsrKXt2YXIgZT10aGlzLml0ZW1zW3RdO2Uuc29ydERhdGEucmFuZG9tPU1hdGgucmFuZG9tKCl9dGhpcy5vcHRpb25zLnNvcnRCeT1cInJhbmRvbVwiLHRoaXMuX3NvcnQoKSx0aGlzLl9sYXlvdXQoKX0sbC5fbm9UcmFuc2l0aW9uPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5vcHRpb25zLnRyYW5zaXRpb25EdXJhdGlvbjt0aGlzLm9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uPTA7dmFyIG89dC5hcHBseSh0aGlzLGUpO3JldHVybiB0aGlzLm9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uPWksb30sbC5nZXRGaWx0ZXJlZEl0ZW1FbGVtZW50cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbHRlcmVkSXRlbXMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnR9KX0sZH0pOyIsIi8qIVxuICogQm9vdHN0cmFwIHYzLjMuNyAoaHR0cDovL2dldGJvb3RzdHJhcC5jb20pXG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE2IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICovXG5cbmlmICh0eXBlb2YgalF1ZXJ5ID09PSAndW5kZWZpbmVkJykge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcFxcJ3MgSmF2YVNjcmlwdCByZXF1aXJlcyBqUXVlcnknKVxufVxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICB2YXIgdmVyc2lvbiA9ICQuZm4uanF1ZXJ5LnNwbGl0KCcgJylbMF0uc3BsaXQoJy4nKVxuICBpZiAoKHZlcnNpb25bMF0gPCAyICYmIHZlcnNpb25bMV0gPCA5KSB8fCAodmVyc2lvblswXSA9PSAxICYmIHZlcnNpb25bMV0gPT0gOSAmJiB2ZXJzaW9uWzJdIDwgMSkgfHwgKHZlcnNpb25bMF0gPiAzKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignQm9vdHN0cmFwXFwncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGpRdWVyeSB2ZXJzaW9uIDEuOS4xIG9yIGhpZ2hlciwgYnV0IGxvd2VyIHRoYW4gdmVyc2lvbiA0JylcbiAgfVxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogdHJhbnNpdGlvbi5qcyB2My4zLjdcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI3RyYW5zaXRpb25zXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTYgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gQ1NTIFRSQU5TSVRJT04gU1VQUE9SVCAoU2hvdXRvdXQ6IGh0dHA6Ly93d3cubW9kZXJuaXpyLmNvbS8pXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoKSB7XG4gICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYm9vdHN0cmFwJylcblxuICAgIHZhciB0cmFuc0VuZEV2ZW50TmFtZXMgPSB7XG4gICAgICBXZWJraXRUcmFuc2l0aW9uIDogJ3dlYmtpdFRyYW5zaXRpb25FbmQnLFxuICAgICAgTW96VHJhbnNpdGlvbiAgICA6ICd0cmFuc2l0aW9uZW5kJyxcbiAgICAgIE9UcmFuc2l0aW9uICAgICAgOiAnb1RyYW5zaXRpb25FbmQgb3RyYW5zaXRpb25lbmQnLFxuICAgICAgdHJhbnNpdGlvbiAgICAgICA6ICd0cmFuc2l0aW9uZW5kJ1xuICAgIH1cblxuICAgIGZvciAodmFyIG5hbWUgaW4gdHJhbnNFbmRFdmVudE5hbWVzKSB7XG4gICAgICBpZiAoZWwuc3R5bGVbbmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4geyBlbmQ6IHRyYW5zRW5kRXZlbnROYW1lc1tuYW1lXSB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlIC8vIGV4cGxpY2l0IGZvciBpZTggKCAgLl8uKVxuICB9XG5cbiAgLy8gaHR0cDovL2Jsb2cuYWxleG1hY2Nhdy5jb20vY3NzLXRyYW5zaXRpb25zXG4gICQuZm4uZW11bGF0ZVRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbiAoZHVyYXRpb24pIHtcbiAgICB2YXIgY2FsbGVkID0gZmFsc2VcbiAgICB2YXIgJGVsID0gdGhpc1xuICAgICQodGhpcykub25lKCdic1RyYW5zaXRpb25FbmQnLCBmdW5jdGlvbiAoKSB7IGNhbGxlZCA9IHRydWUgfSlcbiAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7IGlmICghY2FsbGVkKSAkKCRlbCkudHJpZ2dlcigkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQpIH1cbiAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCBkdXJhdGlvbilcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgJChmdW5jdGlvbiAoKSB7XG4gICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gPSB0cmFuc2l0aW9uRW5kKClcblxuICAgIGlmICghJC5zdXBwb3J0LnRyYW5zaXRpb24pIHJldHVyblxuXG4gICAgJC5ldmVudC5zcGVjaWFsLmJzVHJhbnNpdGlvbkVuZCA9IHtcbiAgICAgIGJpbmRUeXBlOiAkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsXG4gICAgICBkZWxlZ2F0ZVR5cGU6ICQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxcbiAgICAgIGhhbmRsZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKCQoZS50YXJnZXQpLmlzKHRoaXMpKSByZXR1cm4gZS5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiBhbGVydC5qcyB2My4zLjdcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2FsZXJ0c1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE2IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIEFMRVJUIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBkaXNtaXNzID0gJ1tkYXRhLWRpc21pc3M9XCJhbGVydFwiXSdcbiAgdmFyIEFsZXJ0ICAgPSBmdW5jdGlvbiAoZWwpIHtcbiAgICAkKGVsKS5vbignY2xpY2snLCBkaXNtaXNzLCB0aGlzLmNsb3NlKVxuICB9XG5cbiAgQWxlcnQuVkVSU0lPTiA9ICczLjMuNydcblxuICBBbGVydC5UUkFOU0lUSU9OX0RVUkFUSU9OID0gMTUwXG5cbiAgQWxlcnQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgICAgPSAkKHRoaXMpXG4gICAgdmFyIHNlbGVjdG9yID0gJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKVxuXG4gICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgc2VsZWN0b3IgPSAkdGhpcy5hdHRyKCdocmVmJylcbiAgICAgIHNlbGVjdG9yID0gc2VsZWN0b3IgJiYgc2VsZWN0b3IucmVwbGFjZSgvLiooPz0jW15cXHNdKiQpLywgJycpIC8vIHN0cmlwIGZvciBpZTdcbiAgICB9XG5cbiAgICB2YXIgJHBhcmVudCA9ICQoc2VsZWN0b3IgPT09ICcjJyA/IFtdIDogc2VsZWN0b3IpXG5cbiAgICBpZiAoZSkgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBpZiAoISRwYXJlbnQubGVuZ3RoKSB7XG4gICAgICAkcGFyZW50ID0gJHRoaXMuY2xvc2VzdCgnLmFsZXJ0JylcbiAgICB9XG5cbiAgICAkcGFyZW50LnRyaWdnZXIoZSA9ICQuRXZlbnQoJ2Nsb3NlLmJzLmFsZXJ0JykpXG5cbiAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICAkcGFyZW50LnJlbW92ZUNsYXNzKCdpbicpXG5cbiAgICBmdW5jdGlvbiByZW1vdmVFbGVtZW50KCkge1xuICAgICAgLy8gZGV0YWNoIGZyb20gcGFyZW50LCBmaXJlIGV2ZW50IHRoZW4gY2xlYW4gdXAgZGF0YVxuICAgICAgJHBhcmVudC5kZXRhY2goKS50cmlnZ2VyKCdjbG9zZWQuYnMuYWxlcnQnKS5yZW1vdmUoKVxuICAgIH1cblxuICAgICQuc3VwcG9ydC50cmFuc2l0aW9uICYmICRwYXJlbnQuaGFzQ2xhc3MoJ2ZhZGUnKSA/XG4gICAgICAkcGFyZW50XG4gICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIHJlbW92ZUVsZW1lbnQpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChBbGVydC5UUkFOU0lUSU9OX0RVUkFUSU9OKSA6XG4gICAgICByZW1vdmVFbGVtZW50KClcbiAgfVxuXG5cbiAgLy8gQUxFUlQgUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgPSAkdGhpcy5kYXRhKCdicy5hbGVydCcpXG5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuYWxlcnQnLCAoZGF0YSA9IG5ldyBBbGVydCh0aGlzKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmFsZXJ0XG5cbiAgJC5mbi5hbGVydCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmFsZXJ0LkNvbnN0cnVjdG9yID0gQWxlcnRcblxuXG4gIC8vIEFMRVJUIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5hbGVydC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYWxlcnQgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBBTEVSVCBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PVxuXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljay5icy5hbGVydC5kYXRhLWFwaScsIGRpc21pc3MsIEFsZXJ0LnByb3RvdHlwZS5jbG9zZSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogYnV0dG9uLmpzIHYzLjMuN1xuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jYnV0dG9uc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE2IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIEJVVFRPTiBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQnV0dG9uID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLiRlbGVtZW50ICA9ICQoZWxlbWVudClcbiAgICB0aGlzLm9wdGlvbnMgICA9ICQuZXh0ZW5kKHt9LCBCdXR0b24uREVGQVVMVFMsIG9wdGlvbnMpXG4gICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZVxuICB9XG5cbiAgQnV0dG9uLlZFUlNJT04gID0gJzMuMy43J1xuXG4gIEJ1dHRvbi5ERUZBVUxUUyA9IHtcbiAgICBsb2FkaW5nVGV4dDogJ2xvYWRpbmcuLi4nXG4gIH1cblxuICBCdXR0b24ucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgdmFyIGQgICAgPSAnZGlzYWJsZWQnXG4gICAgdmFyICRlbCAgPSB0aGlzLiRlbGVtZW50XG4gICAgdmFyIHZhbCAgPSAkZWwuaXMoJ2lucHV0JykgPyAndmFsJyA6ICdodG1sJ1xuICAgIHZhciBkYXRhID0gJGVsLmRhdGEoKVxuXG4gICAgc3RhdGUgKz0gJ1RleHQnXG5cbiAgICBpZiAoZGF0YS5yZXNldFRleHQgPT0gbnVsbCkgJGVsLmRhdGEoJ3Jlc2V0VGV4dCcsICRlbFt2YWxdKCkpXG5cbiAgICAvLyBwdXNoIHRvIGV2ZW50IGxvb3AgdG8gYWxsb3cgZm9ybXMgdG8gc3VibWl0XG4gICAgc2V0VGltZW91dCgkLnByb3h5KGZ1bmN0aW9uICgpIHtcbiAgICAgICRlbFt2YWxdKGRhdGFbc3RhdGVdID09IG51bGwgPyB0aGlzLm9wdGlvbnNbc3RhdGVdIDogZGF0YVtzdGF0ZV0pXG5cbiAgICAgIGlmIChzdGF0ZSA9PSAnbG9hZGluZ1RleHQnKSB7XG4gICAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZVxuICAgICAgICAkZWwuYWRkQ2xhc3MoZCkuYXR0cihkLCBkKS5wcm9wKGQsIHRydWUpXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNMb2FkaW5nKSB7XG4gICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2VcbiAgICAgICAgJGVsLnJlbW92ZUNsYXNzKGQpLnJlbW92ZUF0dHIoZCkucHJvcChkLCBmYWxzZSlcbiAgICAgIH1cbiAgICB9LCB0aGlzKSwgMClcbiAgfVxuXG4gIEJ1dHRvbi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjaGFuZ2VkID0gdHJ1ZVxuICAgIHZhciAkcGFyZW50ID0gdGhpcy4kZWxlbWVudC5jbG9zZXN0KCdbZGF0YS10b2dnbGU9XCJidXR0b25zXCJdJylcblxuICAgIGlmICgkcGFyZW50Lmxlbmd0aCkge1xuICAgICAgdmFyICRpbnB1dCA9IHRoaXMuJGVsZW1lbnQuZmluZCgnaW5wdXQnKVxuICAgICAgaWYgKCRpbnB1dC5wcm9wKCd0eXBlJykgPT0gJ3JhZGlvJykge1xuICAgICAgICBpZiAoJGlucHV0LnByb3AoJ2NoZWNrZWQnKSkgY2hhbmdlZCA9IGZhbHNlXG4gICAgICAgICRwYXJlbnQuZmluZCgnLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgICB0aGlzLiRlbGVtZW50LmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgfSBlbHNlIGlmICgkaW5wdXQucHJvcCgndHlwZScpID09ICdjaGVja2JveCcpIHtcbiAgICAgICAgaWYgKCgkaW5wdXQucHJvcCgnY2hlY2tlZCcpKSAhPT0gdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnYWN0aXZlJykpIGNoYW5nZWQgPSBmYWxzZVxuICAgICAgICB0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgfVxuICAgICAgJGlucHV0LnByb3AoJ2NoZWNrZWQnLCB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdhY3RpdmUnKSlcbiAgICAgIGlmIChjaGFuZ2VkKSAkaW5wdXQudHJpZ2dlcignY2hhbmdlJylcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy4kZWxlbWVudC5hdHRyKCdhcmlhLXByZXNzZWQnLCAhdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnYWN0aXZlJykpXG4gICAgICB0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKCdhY3RpdmUnKVxuICAgIH1cbiAgfVxuXG5cbiAgLy8gQlVUVE9OIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5idXR0b24nKVxuICAgICAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvblxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLmJ1dHRvbicsIChkYXRhID0gbmV3IEJ1dHRvbih0aGlzLCBvcHRpb25zKSkpXG5cbiAgICAgIGlmIChvcHRpb24gPT0gJ3RvZ2dsZScpIGRhdGEudG9nZ2xlKClcbiAgICAgIGVsc2UgaWYgKG9wdGlvbikgZGF0YS5zZXRTdGF0ZShvcHRpb24pXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmJ1dHRvblxuXG4gICQuZm4uYnV0dG9uICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uYnV0dG9uLkNvbnN0cnVjdG9yID0gQnV0dG9uXG5cblxuICAvLyBCVVRUT04gTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5idXR0b24ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmJ1dHRvbiA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIEJVVFRPTiBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PT1cblxuICAkKGRvY3VtZW50KVxuICAgIC5vbignY2xpY2suYnMuYnV0dG9uLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZV49XCJidXR0b25cIl0nLCBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyICRidG4gPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCcuYnRuJylcbiAgICAgIFBsdWdpbi5jYWxsKCRidG4sICd0b2dnbGUnKVxuICAgICAgaWYgKCEoJChlLnRhcmdldCkuaXMoJ2lucHV0W3R5cGU9XCJyYWRpb1wiXSwgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdJykpKSB7XG4gICAgICAgIC8vIFByZXZlbnQgZG91YmxlIGNsaWNrIG9uIHJhZGlvcywgYW5kIHRoZSBkb3VibGUgc2VsZWN0aW9ucyAoc28gY2FuY2VsbGF0aW9uKSBvbiBjaGVja2JveGVzXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAvLyBUaGUgdGFyZ2V0IGNvbXBvbmVudCBzdGlsbCByZWNlaXZlIHRoZSBmb2N1c1xuICAgICAgICBpZiAoJGJ0bi5pcygnaW5wdXQsYnV0dG9uJykpICRidG4udHJpZ2dlcignZm9jdXMnKVxuICAgICAgICBlbHNlICRidG4uZmluZCgnaW5wdXQ6dmlzaWJsZSxidXR0b246dmlzaWJsZScpLmZpcnN0KCkudHJpZ2dlcignZm9jdXMnKVxuICAgICAgfVxuICAgIH0pXG4gICAgLm9uKCdmb2N1cy5icy5idXR0b24uZGF0YS1hcGkgYmx1ci5icy5idXR0b24uZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlXj1cImJ1dHRvblwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAkKGUudGFyZ2V0KS5jbG9zZXN0KCcuYnRuJykudG9nZ2xlQ2xhc3MoJ2ZvY3VzJywgL15mb2N1cyhpbik/JC8udGVzdChlLnR5cGUpKVxuICAgIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IGNhcm91c2VsLmpzIHYzLjMuN1xuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jY2Fyb3VzZWxcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNiBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBDQVJPVVNFTCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMuJGVsZW1lbnQgICAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy4kaW5kaWNhdG9ycyA9IHRoaXMuJGVsZW1lbnQuZmluZCgnLmNhcm91c2VsLWluZGljYXRvcnMnKVxuICAgIHRoaXMub3B0aW9ucyAgICAgPSBvcHRpb25zXG4gICAgdGhpcy5wYXVzZWQgICAgICA9IG51bGxcbiAgICB0aGlzLnNsaWRpbmcgICAgID0gbnVsbFxuICAgIHRoaXMuaW50ZXJ2YWwgICAgPSBudWxsXG4gICAgdGhpcy4kYWN0aXZlICAgICA9IG51bGxcbiAgICB0aGlzLiRpdGVtcyAgICAgID0gbnVsbFxuXG4gICAgdGhpcy5vcHRpb25zLmtleWJvYXJkICYmIHRoaXMuJGVsZW1lbnQub24oJ2tleWRvd24uYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMua2V5ZG93biwgdGhpcykpXG5cbiAgICB0aGlzLm9wdGlvbnMucGF1c2UgPT0gJ2hvdmVyJyAmJiAhKCdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgJiYgdGhpcy4kZWxlbWVudFxuICAgICAgLm9uKCdtb3VzZWVudGVyLmJzLmNhcm91c2VsJywgJC5wcm94eSh0aGlzLnBhdXNlLCB0aGlzKSlcbiAgICAgIC5vbignbW91c2VsZWF2ZS5icy5jYXJvdXNlbCcsICQucHJveHkodGhpcy5jeWNsZSwgdGhpcykpXG4gIH1cblxuICBDYXJvdXNlbC5WRVJTSU9OICA9ICczLjMuNydcblxuICBDYXJvdXNlbC5UUkFOU0lUSU9OX0RVUkFUSU9OID0gNjAwXG5cbiAgQ2Fyb3VzZWwuREVGQVVMVFMgPSB7XG4gICAgaW50ZXJ2YWw6IDUwMDAsXG4gICAgcGF1c2U6ICdob3ZlcicsXG4gICAgd3JhcDogdHJ1ZSxcbiAgICBrZXlib2FyZDogdHJ1ZVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLmtleWRvd24gPSBmdW5jdGlvbiAoZSkge1xuICAgIGlmICgvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGUudGFyZ2V0LnRhZ05hbWUpKSByZXR1cm5cbiAgICBzd2l0Y2ggKGUud2hpY2gpIHtcbiAgICAgIGNhc2UgMzc6IHRoaXMucHJldigpOyBicmVha1xuICAgICAgY2FzZSAzOTogdGhpcy5uZXh0KCk7IGJyZWFrXG4gICAgICBkZWZhdWx0OiByZXR1cm5cbiAgICB9XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5jeWNsZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgZSB8fCAodGhpcy5wYXVzZWQgPSBmYWxzZSlcblxuICAgIHRoaXMuaW50ZXJ2YWwgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKVxuXG4gICAgdGhpcy5vcHRpb25zLmludGVydmFsXG4gICAgICAmJiAhdGhpcy5wYXVzZWRcbiAgICAgICYmICh0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoJC5wcm94eSh0aGlzLm5leHQsIHRoaXMpLCB0aGlzLm9wdGlvbnMuaW50ZXJ2YWwpKVxuXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgIHRoaXMuJGl0ZW1zID0gaXRlbS5wYXJlbnQoKS5jaGlsZHJlbignLml0ZW0nKVxuICAgIHJldHVybiB0aGlzLiRpdGVtcy5pbmRleChpdGVtIHx8IHRoaXMuJGFjdGl2ZSlcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtRm9yRGlyZWN0aW9uID0gZnVuY3Rpb24gKGRpcmVjdGlvbiwgYWN0aXZlKSB7XG4gICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgoYWN0aXZlKVxuICAgIHZhciB3aWxsV3JhcCA9IChkaXJlY3Rpb24gPT0gJ3ByZXYnICYmIGFjdGl2ZUluZGV4ID09PSAwKVxuICAgICAgICAgICAgICAgIHx8IChkaXJlY3Rpb24gPT0gJ25leHQnICYmIGFjdGl2ZUluZGV4ID09ICh0aGlzLiRpdGVtcy5sZW5ndGggLSAxKSlcbiAgICBpZiAod2lsbFdyYXAgJiYgIXRoaXMub3B0aW9ucy53cmFwKSByZXR1cm4gYWN0aXZlXG4gICAgdmFyIGRlbHRhID0gZGlyZWN0aW9uID09ICdwcmV2JyA/IC0xIDogMVxuICAgIHZhciBpdGVtSW5kZXggPSAoYWN0aXZlSW5kZXggKyBkZWx0YSkgJSB0aGlzLiRpdGVtcy5sZW5ndGhcbiAgICByZXR1cm4gdGhpcy4kaXRlbXMuZXEoaXRlbUluZGV4KVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLnRvID0gZnVuY3Rpb24gKHBvcykge1xuICAgIHZhciB0aGF0ICAgICAgICA9IHRoaXNcbiAgICB2YXIgYWN0aXZlSW5kZXggPSB0aGlzLmdldEl0ZW1JbmRleCh0aGlzLiRhY3RpdmUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtLmFjdGl2ZScpKVxuXG4gICAgaWYgKHBvcyA+ICh0aGlzLiRpdGVtcy5sZW5ndGggLSAxKSB8fCBwb3MgPCAwKSByZXR1cm5cblxuICAgIGlmICh0aGlzLnNsaWRpbmcpICAgICAgIHJldHVybiB0aGlzLiRlbGVtZW50Lm9uZSgnc2xpZC5icy5jYXJvdXNlbCcsIGZ1bmN0aW9uICgpIHsgdGhhdC50byhwb3MpIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICBpZiAoYWN0aXZlSW5kZXggPT0gcG9zKSByZXR1cm4gdGhpcy5wYXVzZSgpLmN5Y2xlKClcblxuICAgIHJldHVybiB0aGlzLnNsaWRlKHBvcyA+IGFjdGl2ZUluZGV4ID8gJ25leHQnIDogJ3ByZXYnLCB0aGlzLiRpdGVtcy5lcShwb3MpKVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKGUpIHtcbiAgICBlIHx8ICh0aGlzLnBhdXNlZCA9IHRydWUpXG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5maW5kKCcubmV4dCwgLnByZXYnKS5sZW5ndGggJiYgJC5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcigkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQpXG4gICAgICB0aGlzLmN5Y2xlKHRydWUpXG4gICAgfVxuXG4gICAgdGhpcy5pbnRlcnZhbCA9IGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbClcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBDYXJvdXNlbC5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5zbGlkaW5nKSByZXR1cm5cbiAgICByZXR1cm4gdGhpcy5zbGlkZSgnbmV4dCcpXG4gIH1cblxuICBDYXJvdXNlbC5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5zbGlkaW5nKSByZXR1cm5cbiAgICByZXR1cm4gdGhpcy5zbGlkZSgncHJldicpXG4gIH1cblxuICBDYXJvdXNlbC5wcm90b3R5cGUuc2xpZGUgPSBmdW5jdGlvbiAodHlwZSwgbmV4dCkge1xuICAgIHZhciAkYWN0aXZlICAgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtLmFjdGl2ZScpXG4gICAgdmFyICRuZXh0ICAgICA9IG5leHQgfHwgdGhpcy5nZXRJdGVtRm9yRGlyZWN0aW9uKHR5cGUsICRhY3RpdmUpXG4gICAgdmFyIGlzQ3ljbGluZyA9IHRoaXMuaW50ZXJ2YWxcbiAgICB2YXIgZGlyZWN0aW9uID0gdHlwZSA9PSAnbmV4dCcgPyAnbGVmdCcgOiAncmlnaHQnXG4gICAgdmFyIHRoYXQgICAgICA9IHRoaXNcblxuICAgIGlmICgkbmV4dC5oYXNDbGFzcygnYWN0aXZlJykpIHJldHVybiAodGhpcy5zbGlkaW5nID0gZmFsc2UpXG5cbiAgICB2YXIgcmVsYXRlZFRhcmdldCA9ICRuZXh0WzBdXG4gICAgdmFyIHNsaWRlRXZlbnQgPSAkLkV2ZW50KCdzbGlkZS5icy5jYXJvdXNlbCcsIHtcbiAgICAgIHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRUYXJnZXQsXG4gICAgICBkaXJlY3Rpb246IGRpcmVjdGlvblxuICAgIH0pXG4gICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHNsaWRlRXZlbnQpXG4gICAgaWYgKHNsaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgdGhpcy5zbGlkaW5nID0gdHJ1ZVxuXG4gICAgaXNDeWNsaW5nICYmIHRoaXMucGF1c2UoKVxuXG4gICAgaWYgKHRoaXMuJGluZGljYXRvcnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLiRpbmRpY2F0b3JzLmZpbmQoJy5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgICAgIHZhciAkbmV4dEluZGljYXRvciA9ICQodGhpcy4kaW5kaWNhdG9ycy5jaGlsZHJlbigpW3RoaXMuZ2V0SXRlbUluZGV4KCRuZXh0KV0pXG4gICAgICAkbmV4dEluZGljYXRvciAmJiAkbmV4dEluZGljYXRvci5hZGRDbGFzcygnYWN0aXZlJylcbiAgICB9XG5cbiAgICB2YXIgc2xpZEV2ZW50ID0gJC5FdmVudCgnc2xpZC5icy5jYXJvdXNlbCcsIHsgcmVsYXRlZFRhcmdldDogcmVsYXRlZFRhcmdldCwgZGlyZWN0aW9uOiBkaXJlY3Rpb24gfSkgLy8geWVzLCBcInNsaWRcIlxuICAgIGlmICgkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdzbGlkZScpKSB7XG4gICAgICAkbmV4dC5hZGRDbGFzcyh0eXBlKVxuICAgICAgJG5leHRbMF0ub2Zmc2V0V2lkdGggLy8gZm9yY2UgcmVmbG93XG4gICAgICAkYWN0aXZlLmFkZENsYXNzKGRpcmVjdGlvbilcbiAgICAgICRuZXh0LmFkZENsYXNzKGRpcmVjdGlvbilcbiAgICAgICRhY3RpdmVcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICRuZXh0LnJlbW92ZUNsYXNzKFt0eXBlLCBkaXJlY3Rpb25dLmpvaW4oJyAnKSkuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgJGFjdGl2ZS5yZW1vdmVDbGFzcyhbJ2FjdGl2ZScsIGRpcmVjdGlvbl0uam9pbignICcpKVxuICAgICAgICAgIHRoYXQuc2xpZGluZyA9IGZhbHNlXG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGF0LiRlbGVtZW50LnRyaWdnZXIoc2xpZEV2ZW50KVxuICAgICAgICAgIH0sIDApXG4gICAgICAgIH0pXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChDYXJvdXNlbC5UUkFOU0lUSU9OX0RVUkFUSU9OKVxuICAgIH0gZWxzZSB7XG4gICAgICAkYWN0aXZlLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgJG5leHQuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB0aGlzLnNsaWRpbmcgPSBmYWxzZVxuICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHNsaWRFdmVudClcbiAgICB9XG5cbiAgICBpc0N5Y2xpbmcgJiYgdGhpcy5jeWNsZSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDQVJPVVNFTCBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5jYXJvdXNlbCcpXG4gICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBDYXJvdXNlbC5ERUZBVUxUUywgJHRoaXMuZGF0YSgpLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbilcbiAgICAgIHZhciBhY3Rpb24gID0gdHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyA/IG9wdGlvbiA6IG9wdGlvbnMuc2xpZGVcblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5jYXJvdXNlbCcsIChkYXRhID0gbmV3IENhcm91c2VsKHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdudW1iZXInKSBkYXRhLnRvKG9wdGlvbilcbiAgICAgIGVsc2UgaWYgKGFjdGlvbikgZGF0YVthY3Rpb25dKClcbiAgICAgIGVsc2UgaWYgKG9wdGlvbnMuaW50ZXJ2YWwpIGRhdGEucGF1c2UoKS5jeWNsZSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmNhcm91c2VsXG5cbiAgJC5mbi5jYXJvdXNlbCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmNhcm91c2VsLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWxcblxuXG4gIC8vIENBUk9VU0VMIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5jYXJvdXNlbC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uY2Fyb3VzZWwgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDQVJPVVNFTCBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gIHZhciBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBocmVmXG4gICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgdmFyICR0YXJnZXQgPSAkKCR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykgfHwgKGhyZWYgPSAkdGhpcy5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgaWYgKCEkdGFyZ2V0Lmhhc0NsYXNzKCdjYXJvdXNlbCcpKSByZXR1cm5cbiAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkdGFyZ2V0LmRhdGEoKSwgJHRoaXMuZGF0YSgpKVxuICAgIHZhciBzbGlkZUluZGV4ID0gJHRoaXMuYXR0cignZGF0YS1zbGlkZS10bycpXG4gICAgaWYgKHNsaWRlSW5kZXgpIG9wdGlvbnMuaW50ZXJ2YWwgPSBmYWxzZVxuXG4gICAgUGx1Z2luLmNhbGwoJHRhcmdldCwgb3B0aW9ucylcblxuICAgIGlmIChzbGlkZUluZGV4KSB7XG4gICAgICAkdGFyZ2V0LmRhdGEoJ2JzLmNhcm91c2VsJykudG8oc2xpZGVJbmRleClcbiAgICB9XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgfVxuXG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaScsICdbZGF0YS1zbGlkZV0nLCBjbGlja0hhbmRsZXIpXG4gICAgLm9uKCdjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaScsICdbZGF0YS1zbGlkZS10b10nLCBjbGlja0hhbmRsZXIpXG5cbiAgJCh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICQoJ1tkYXRhLXJpZGU9XCJjYXJvdXNlbFwiXScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRjYXJvdXNlbCA9ICQodGhpcylcbiAgICAgIFBsdWdpbi5jYWxsKCRjYXJvdXNlbCwgJGNhcm91c2VsLmRhdGEoKSlcbiAgICB9KVxuICB9KVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiBjb2xsYXBzZS5qcyB2My4zLjdcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2NvbGxhcHNlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTYgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiBqc2hpbnQgbGF0ZWRlZjogZmFsc2UgKi9cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBDT0xMQVBTRSBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBDb2xsYXBzZSA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy4kZWxlbWVudCAgICAgID0gJChlbGVtZW50KVxuICAgIHRoaXMub3B0aW9ucyAgICAgICA9ICQuZXh0ZW5kKHt9LCBDb2xsYXBzZS5ERUZBVUxUUywgb3B0aW9ucylcbiAgICB0aGlzLiR0cmlnZ2VyICAgICAgPSAkKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtocmVmPVwiIycgKyBlbGVtZW50LmlkICsgJ1wiXSwnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXRhcmdldD1cIiMnICsgZWxlbWVudC5pZCArICdcIl0nKVxuICAgIHRoaXMudHJhbnNpdGlvbmluZyA9IG51bGxcblxuICAgIGlmICh0aGlzLm9wdGlvbnMucGFyZW50KSB7XG4gICAgICB0aGlzLiRwYXJlbnQgPSB0aGlzLmdldFBhcmVudCgpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKHRoaXMuJGVsZW1lbnQsIHRoaXMuJHRyaWdnZXIpXG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy50b2dnbGUpIHRoaXMudG9nZ2xlKClcbiAgfVxuXG4gIENvbGxhcHNlLlZFUlNJT04gID0gJzMuMy43J1xuXG4gIENvbGxhcHNlLlRSQU5TSVRJT05fRFVSQVRJT04gPSAzNTBcblxuICBDb2xsYXBzZS5ERUZBVUxUUyA9IHtcbiAgICB0b2dnbGU6IHRydWVcbiAgfVxuXG4gIENvbGxhcHNlLnByb3RvdHlwZS5kaW1lbnNpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGhhc1dpZHRoID0gdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnd2lkdGgnKVxuICAgIHJldHVybiBoYXNXaWR0aCA/ICd3aWR0aCcgOiAnaGVpZ2h0J1xuICB9XG5cbiAgQ29sbGFwc2UucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMudHJhbnNpdGlvbmluZyB8fCB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdpbicpKSByZXR1cm5cblxuICAgIHZhciBhY3RpdmVzRGF0YVxuICAgIHZhciBhY3RpdmVzID0gdGhpcy4kcGFyZW50ICYmIHRoaXMuJHBhcmVudC5jaGlsZHJlbignLnBhbmVsJykuY2hpbGRyZW4oJy5pbiwgLmNvbGxhcHNpbmcnKVxuXG4gICAgaWYgKGFjdGl2ZXMgJiYgYWN0aXZlcy5sZW5ndGgpIHtcbiAgICAgIGFjdGl2ZXNEYXRhID0gYWN0aXZlcy5kYXRhKCdicy5jb2xsYXBzZScpXG4gICAgICBpZiAoYWN0aXZlc0RhdGEgJiYgYWN0aXZlc0RhdGEudHJhbnNpdGlvbmluZykgcmV0dXJuXG4gICAgfVxuXG4gICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KCdzaG93LmJzLmNvbGxhcHNlJylcbiAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc3RhcnRFdmVudClcbiAgICBpZiAoc3RhcnRFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICBpZiAoYWN0aXZlcyAmJiBhY3RpdmVzLmxlbmd0aCkge1xuICAgICAgUGx1Z2luLmNhbGwoYWN0aXZlcywgJ2hpZGUnKVxuICAgICAgYWN0aXZlc0RhdGEgfHwgYWN0aXZlcy5kYXRhKCdicy5jb2xsYXBzZScsIG51bGwpXG4gICAgfVxuXG4gICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMuZGltZW5zaW9uKClcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2UnKVxuICAgICAgLmFkZENsYXNzKCdjb2xsYXBzaW5nJylbZGltZW5zaW9uXSgwKVxuICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKVxuXG4gICAgdGhpcy4kdHJpZ2dlclxuICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzZWQnKVxuICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKVxuXG4gICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMVxuXG4gICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNpbmcnKVxuICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNlIGluJylbZGltZW5zaW9uXSgnJylcbiAgICAgIHRoaXMudHJhbnNpdGlvbmluZyA9IDBcbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLnRyaWdnZXIoJ3Nob3duLmJzLmNvbGxhcHNlJylcbiAgICB9XG5cbiAgICBpZiAoISQuc3VwcG9ydC50cmFuc2l0aW9uKSByZXR1cm4gY29tcGxldGUuY2FsbCh0aGlzKVxuXG4gICAgdmFyIHNjcm9sbFNpemUgPSAkLmNhbWVsQ2FzZShbJ3Njcm9sbCcsIGRpbWVuc2lvbl0uam9pbignLScpKVxuXG4gICAgdGhpcy4kZWxlbWVudFxuICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgJC5wcm94eShjb21wbGV0ZSwgdGhpcykpXG4gICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoQ29sbGFwc2UuVFJBTlNJVElPTl9EVVJBVElPTilbZGltZW5zaW9uXSh0aGlzLiRlbGVtZW50WzBdW3Njcm9sbFNpemVdKVxuICB9XG5cbiAgQ29sbGFwc2UucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMudHJhbnNpdGlvbmluZyB8fCAhdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnaW4nKSkgcmV0dXJuXG5cbiAgICB2YXIgc3RhcnRFdmVudCA9ICQuRXZlbnQoJ2hpZGUuYnMuY29sbGFwc2UnKVxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihzdGFydEV2ZW50KVxuICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLmRpbWVuc2lvbigpXG5cbiAgICB0aGlzLiRlbGVtZW50W2RpbWVuc2lvbl0odGhpcy4kZWxlbWVudFtkaW1lbnNpb25dKCkpWzBdLm9mZnNldEhlaWdodFxuXG4gICAgdGhpcy4kZWxlbWVudFxuICAgICAgLmFkZENsYXNzKCdjb2xsYXBzaW5nJylcbiAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2UgaW4nKVxuICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSlcblxuICAgIHRoaXMuJHRyaWdnZXJcbiAgICAgIC5hZGRDbGFzcygnY29sbGFwc2VkJylcbiAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpXG5cbiAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAxXG5cbiAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAwXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2luZycpXG4gICAgICAgIC5hZGRDbGFzcygnY29sbGFwc2UnKVxuICAgICAgICAudHJpZ2dlcignaGlkZGVuLmJzLmNvbGxhcHNlJylcbiAgICB9XG5cbiAgICBpZiAoISQuc3VwcG9ydC50cmFuc2l0aW9uKSByZXR1cm4gY29tcGxldGUuY2FsbCh0aGlzKVxuXG4gICAgdGhpcy4kZWxlbWVudFxuICAgICAgW2RpbWVuc2lvbl0oMClcbiAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsICQucHJveHkoY29tcGxldGUsIHRoaXMpKVxuICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKENvbGxhcHNlLlRSQU5TSVRJT05fRFVSQVRJT04pXG4gIH1cblxuICBDb2xsYXBzZS5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXNbdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnaW4nKSA/ICdoaWRlJyA6ICdzaG93J10oKVxuICB9XG5cbiAgQ29sbGFwc2UucHJvdG90eXBlLmdldFBhcmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJCh0aGlzLm9wdGlvbnMucGFyZW50KVxuICAgICAgLmZpbmQoJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdW2RhdGEtcGFyZW50PVwiJyArIHRoaXMub3B0aW9ucy5wYXJlbnQgKyAnXCJdJylcbiAgICAgIC5lYWNoKCQucHJveHkoZnVuY3Rpb24gKGksIGVsZW1lbnQpIHtcbiAgICAgICAgdmFyICRlbGVtZW50ID0gJChlbGVtZW50KVxuICAgICAgICB0aGlzLmFkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhnZXRUYXJnZXRGcm9tVHJpZ2dlcigkZWxlbWVudCksICRlbGVtZW50KVxuICAgICAgfSwgdGhpcykpXG4gICAgICAuZW5kKClcbiAgfVxuXG4gIENvbGxhcHNlLnByb3RvdHlwZS5hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MgPSBmdW5jdGlvbiAoJGVsZW1lbnQsICR0cmlnZ2VyKSB7XG4gICAgdmFyIGlzT3BlbiA9ICRlbGVtZW50Lmhhc0NsYXNzKCdpbicpXG5cbiAgICAkZWxlbWVudC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgaXNPcGVuKVxuICAgICR0cmlnZ2VyXG4gICAgICAudG9nZ2xlQ2xhc3MoJ2NvbGxhcHNlZCcsICFpc09wZW4pXG4gICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsIGlzT3BlbilcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFRhcmdldEZyb21UcmlnZ2VyKCR0cmlnZ2VyKSB7XG4gICAgdmFyIGhyZWZcbiAgICB2YXIgdGFyZ2V0ID0gJHRyaWdnZXIuYXR0cignZGF0YS10YXJnZXQnKVxuICAgICAgfHwgKGhyZWYgPSAkdHJpZ2dlci5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpIC8vIHN0cmlwIGZvciBpZTdcblxuICAgIHJldHVybiAkKHRhcmdldClcbiAgfVxuXG5cbiAgLy8gQ09MTEFQU0UgUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICAgID0gJHRoaXMuZGF0YSgnYnMuY29sbGFwc2UnKVxuICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQ29sbGFwc2UuREVGQVVMVFMsICR0aGlzLmRhdGEoKSwgdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb24pXG5cbiAgICAgIGlmICghZGF0YSAmJiBvcHRpb25zLnRvZ2dsZSAmJiAvc2hvd3xoaWRlLy50ZXN0KG9wdGlvbikpIG9wdGlvbnMudG9nZ2xlID0gZmFsc2VcbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuY29sbGFwc2UnLCAoZGF0YSA9IG5ldyBDb2xsYXBzZSh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uY29sbGFwc2VcblxuICAkLmZuLmNvbGxhcHNlICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uY29sbGFwc2UuQ29uc3RydWN0b3IgPSBDb2xsYXBzZVxuXG5cbiAgLy8gQ09MTEFQU0UgTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLmNvbGxhcHNlLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5jb2xsYXBzZSA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIENPTExBUFNFIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09PT09XG5cbiAgJChkb2N1bWVudCkub24oJ2NsaWNrLmJzLmNvbGxhcHNlLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcblxuICAgIGlmICghJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKSkgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICB2YXIgJHRhcmdldCA9IGdldFRhcmdldEZyb21UcmlnZ2VyKCR0aGlzKVxuICAgIHZhciBkYXRhICAgID0gJHRhcmdldC5kYXRhKCdicy5jb2xsYXBzZScpXG4gICAgdmFyIG9wdGlvbiAgPSBkYXRhID8gJ3RvZ2dsZScgOiAkdGhpcy5kYXRhKClcblxuICAgIFBsdWdpbi5jYWxsKCR0YXJnZXQsIG9wdGlvbilcbiAgfSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogZHJvcGRvd24uanMgdjMuMy43XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNkcm9wZG93bnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNiBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBEUk9QRE9XTiBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgYmFja2Ryb3AgPSAnLmRyb3Bkb3duLWJhY2tkcm9wJ1xuICB2YXIgdG9nZ2xlICAgPSAnW2RhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIl0nXG4gIHZhciBEcm9wZG93biA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgJChlbGVtZW50KS5vbignY2xpY2suYnMuZHJvcGRvd24nLCB0aGlzLnRvZ2dsZSlcbiAgfVxuXG4gIERyb3Bkb3duLlZFUlNJT04gPSAnMy4zLjcnXG5cbiAgZnVuY3Rpb24gZ2V0UGFyZW50KCR0aGlzKSB7XG4gICAgdmFyIHNlbGVjdG9yID0gJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKVxuXG4gICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgc2VsZWN0b3IgPSAkdGhpcy5hdHRyKCdocmVmJylcbiAgICAgIHNlbGVjdG9yID0gc2VsZWN0b3IgJiYgLyNbQS1aYS16XS8udGVzdChzZWxlY3RvcikgJiYgc2VsZWN0b3IucmVwbGFjZSgvLiooPz0jW15cXHNdKiQpLywgJycpIC8vIHN0cmlwIGZvciBpZTdcbiAgICB9XG5cbiAgICB2YXIgJHBhcmVudCA9IHNlbGVjdG9yICYmICQoc2VsZWN0b3IpXG5cbiAgICByZXR1cm4gJHBhcmVudCAmJiAkcGFyZW50Lmxlbmd0aCA/ICRwYXJlbnQgOiAkdGhpcy5wYXJlbnQoKVxuICB9XG5cbiAgZnVuY3Rpb24gY2xlYXJNZW51cyhlKSB7XG4gICAgaWYgKGUgJiYgZS53aGljaCA9PT0gMykgcmV0dXJuXG4gICAgJChiYWNrZHJvcCkucmVtb3ZlKClcbiAgICAkKHRvZ2dsZSkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICAgICAgICA9ICQodGhpcylcbiAgICAgIHZhciAkcGFyZW50ICAgICAgID0gZ2V0UGFyZW50KCR0aGlzKVxuICAgICAgdmFyIHJlbGF0ZWRUYXJnZXQgPSB7IHJlbGF0ZWRUYXJnZXQ6IHRoaXMgfVxuXG4gICAgICBpZiAoISRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKSkgcmV0dXJuXG5cbiAgICAgIGlmIChlICYmIGUudHlwZSA9PSAnY2xpY2snICYmIC9pbnB1dHx0ZXh0YXJlYS9pLnRlc3QoZS50YXJnZXQudGFnTmFtZSkgJiYgJC5jb250YWlucygkcGFyZW50WzBdLCBlLnRhcmdldCkpIHJldHVyblxuXG4gICAgICAkcGFyZW50LnRyaWdnZXIoZSA9ICQuRXZlbnQoJ2hpZGUuYnMuZHJvcGRvd24nLCByZWxhdGVkVGFyZ2V0KSlcblxuICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgICAkdGhpcy5hdHRyKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJylcbiAgICAgICRwYXJlbnQucmVtb3ZlQ2xhc3MoJ29wZW4nKS50cmlnZ2VyKCQuRXZlbnQoJ2hpZGRlbi5icy5kcm9wZG93bicsIHJlbGF0ZWRUYXJnZXQpKVxuICAgIH0pXG4gIH1cblxuICBEcm9wZG93bi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG5cbiAgICBpZiAoJHRoaXMuaXMoJy5kaXNhYmxlZCwgOmRpc2FibGVkJykpIHJldHVyblxuXG4gICAgdmFyICRwYXJlbnQgID0gZ2V0UGFyZW50KCR0aGlzKVxuICAgIHZhciBpc0FjdGl2ZSA9ICRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKVxuXG4gICAgY2xlYXJNZW51cygpXG5cbiAgICBpZiAoIWlzQWN0aXZlKSB7XG4gICAgICBpZiAoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmICEkcGFyZW50LmNsb3Nlc3QoJy5uYXZiYXItbmF2JykubGVuZ3RoKSB7XG4gICAgICAgIC8vIGlmIG1vYmlsZSB3ZSB1c2UgYSBiYWNrZHJvcCBiZWNhdXNlIGNsaWNrIGV2ZW50cyBkb24ndCBkZWxlZ2F0ZVxuICAgICAgICAkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKVxuICAgICAgICAgIC5hZGRDbGFzcygnZHJvcGRvd24tYmFja2Ryb3AnKVxuICAgICAgICAgIC5pbnNlcnRBZnRlcigkKHRoaXMpKVxuICAgICAgICAgIC5vbignY2xpY2snLCBjbGVhck1lbnVzKVxuICAgICAgfVxuXG4gICAgICB2YXIgcmVsYXRlZFRhcmdldCA9IHsgcmVsYXRlZFRhcmdldDogdGhpcyB9XG4gICAgICAkcGFyZW50LnRyaWdnZXIoZSA9ICQuRXZlbnQoJ3Nob3cuYnMuZHJvcGRvd24nLCByZWxhdGVkVGFyZ2V0KSlcblxuICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgICAkdGhpc1xuICAgICAgICAudHJpZ2dlcignZm9jdXMnKVxuICAgICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsICd0cnVlJylcblxuICAgICAgJHBhcmVudFxuICAgICAgICAudG9nZ2xlQ2xhc3MoJ29wZW4nKVxuICAgICAgICAudHJpZ2dlcigkLkV2ZW50KCdzaG93bi5icy5kcm9wZG93bicsIHJlbGF0ZWRUYXJnZXQpKVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgRHJvcGRvd24ucHJvdG90eXBlLmtleWRvd24gPSBmdW5jdGlvbiAoZSkge1xuICAgIGlmICghLygzOHw0MHwyN3wzMikvLnRlc3QoZS53aGljaCkgfHwgL2lucHV0fHRleHRhcmVhL2kudGVzdChlLnRhcmdldC50YWdOYW1lKSkgcmV0dXJuXG5cbiAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG5cbiAgICBpZiAoJHRoaXMuaXMoJy5kaXNhYmxlZCwgOmRpc2FibGVkJykpIHJldHVyblxuXG4gICAgdmFyICRwYXJlbnQgID0gZ2V0UGFyZW50KCR0aGlzKVxuICAgIHZhciBpc0FjdGl2ZSA9ICRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKVxuXG4gICAgaWYgKCFpc0FjdGl2ZSAmJiBlLndoaWNoICE9IDI3IHx8IGlzQWN0aXZlICYmIGUud2hpY2ggPT0gMjcpIHtcbiAgICAgIGlmIChlLndoaWNoID09IDI3KSAkcGFyZW50LmZpbmQodG9nZ2xlKS50cmlnZ2VyKCdmb2N1cycpXG4gICAgICByZXR1cm4gJHRoaXMudHJpZ2dlcignY2xpY2snKVxuICAgIH1cblxuICAgIHZhciBkZXNjID0gJyBsaTpub3QoLmRpc2FibGVkKTp2aXNpYmxlIGEnXG4gICAgdmFyICRpdGVtcyA9ICRwYXJlbnQuZmluZCgnLmRyb3Bkb3duLW1lbnUnICsgZGVzYylcblxuICAgIGlmICghJGl0ZW1zLmxlbmd0aCkgcmV0dXJuXG5cbiAgICB2YXIgaW5kZXggPSAkaXRlbXMuaW5kZXgoZS50YXJnZXQpXG5cbiAgICBpZiAoZS53aGljaCA9PSAzOCAmJiBpbmRleCA+IDApICAgICAgICAgICAgICAgICBpbmRleC0tICAgICAgICAgLy8gdXBcbiAgICBpZiAoZS53aGljaCA9PSA0MCAmJiBpbmRleCA8ICRpdGVtcy5sZW5ndGggLSAxKSBpbmRleCsrICAgICAgICAgLy8gZG93blxuICAgIGlmICghfmluZGV4KSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gMFxuXG4gICAgJGl0ZW1zLmVxKGluZGV4KS50cmlnZ2VyKCdmb2N1cycpXG4gIH1cblxuXG4gIC8vIERST1BET1dOIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgID0gJHRoaXMuZGF0YSgnYnMuZHJvcGRvd24nKVxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLmRyb3Bkb3duJywgKGRhdGEgPSBuZXcgRHJvcGRvd24odGhpcykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi5kcm9wZG93blxuXG4gICQuZm4uZHJvcGRvd24gICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5kcm9wZG93bi5Db25zdHJ1Y3RvciA9IERyb3Bkb3duXG5cblxuICAvLyBEUk9QRE9XTiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT09PVxuXG4gICQuZm4uZHJvcGRvd24ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmRyb3Bkb3duID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gQVBQTFkgVE8gU1RBTkRBUkQgRFJPUERPV04gRUxFTUVOVFNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAkKGRvY3VtZW50KVxuICAgIC5vbignY2xpY2suYnMuZHJvcGRvd24uZGF0YS1hcGknLCBjbGVhck1lbnVzKVxuICAgIC5vbignY2xpY2suYnMuZHJvcGRvd24uZGF0YS1hcGknLCAnLmRyb3Bkb3duIGZvcm0nLCBmdW5jdGlvbiAoZSkgeyBlLnN0b3BQcm9wYWdhdGlvbigpIH0pXG4gICAgLm9uKCdjbGljay5icy5kcm9wZG93bi5kYXRhLWFwaScsIHRvZ2dsZSwgRHJvcGRvd24ucHJvdG90eXBlLnRvZ2dsZSlcbiAgICAub24oJ2tleWRvd24uYnMuZHJvcGRvd24uZGF0YS1hcGknLCB0b2dnbGUsIERyb3Bkb3duLnByb3RvdHlwZS5rZXlkb3duKVxuICAgIC5vbigna2V5ZG93bi5icy5kcm9wZG93bi5kYXRhLWFwaScsICcuZHJvcGRvd24tbWVudScsIERyb3Bkb3duLnByb3RvdHlwZS5rZXlkb3duKVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiBtb2RhbC5qcyB2My4zLjdcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI21vZGFsc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE2IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIE1PREFMIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBNb2RhbCA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zICAgICAgICAgICAgID0gb3B0aW9uc1xuICAgIHRoaXMuJGJvZHkgICAgICAgICAgICAgICA9ICQoZG9jdW1lbnQuYm9keSlcbiAgICB0aGlzLiRlbGVtZW50ICAgICAgICAgICAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy4kZGlhbG9nICAgICAgICAgICAgID0gdGhpcy4kZWxlbWVudC5maW5kKCcubW9kYWwtZGlhbG9nJylcbiAgICB0aGlzLiRiYWNrZHJvcCAgICAgICAgICAgPSBudWxsXG4gICAgdGhpcy5pc1Nob3duICAgICAgICAgICAgID0gbnVsbFxuICAgIHRoaXMub3JpZ2luYWxCb2R5UGFkICAgICA9IG51bGxcbiAgICB0aGlzLnNjcm9sbGJhcldpZHRoICAgICAgPSAwXG4gICAgdGhpcy5pZ25vcmVCYWNrZHJvcENsaWNrID0gZmFsc2VcblxuICAgIGlmICh0aGlzLm9wdGlvbnMucmVtb3RlKSB7XG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5maW5kKCcubW9kYWwtY29udGVudCcpXG4gICAgICAgIC5sb2FkKHRoaXMub3B0aW9ucy5yZW1vdGUsICQucHJveHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcignbG9hZGVkLmJzLm1vZGFsJylcbiAgICAgICAgfSwgdGhpcykpXG4gICAgfVxuICB9XG5cbiAgTW9kYWwuVkVSU0lPTiAgPSAnMy4zLjcnXG5cbiAgTW9kYWwuVFJBTlNJVElPTl9EVVJBVElPTiA9IDMwMFxuICBNb2RhbC5CQUNLRFJPUF9UUkFOU0lUSU9OX0RVUkFUSU9OID0gMTUwXG5cbiAgTW9kYWwuREVGQVVMVFMgPSB7XG4gICAgYmFja2Ryb3A6IHRydWUsXG4gICAga2V5Ym9hcmQ6IHRydWUsXG4gICAgc2hvdzogdHJ1ZVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uIChfcmVsYXRlZFRhcmdldCkge1xuICAgIHJldHVybiB0aGlzLmlzU2hvd24gPyB0aGlzLmhpZGUoKSA6IHRoaXMuc2hvdyhfcmVsYXRlZFRhcmdldClcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKF9yZWxhdGVkVGFyZ2V0KSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzXG4gICAgdmFyIGUgICAgPSAkLkV2ZW50KCdzaG93LmJzLm1vZGFsJywgeyByZWxhdGVkVGFyZ2V0OiBfcmVsYXRlZFRhcmdldCB9KVxuXG4gICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKGUpXG5cbiAgICBpZiAodGhpcy5pc1Nob3duIHx8IGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgdGhpcy5pc1Nob3duID0gdHJ1ZVxuXG4gICAgdGhpcy5jaGVja1Njcm9sbGJhcigpXG4gICAgdGhpcy5zZXRTY3JvbGxiYXIoKVxuICAgIHRoaXMuJGJvZHkuYWRkQ2xhc3MoJ21vZGFsLW9wZW4nKVxuXG4gICAgdGhpcy5lc2NhcGUoKVxuICAgIHRoaXMucmVzaXplKClcblxuICAgIHRoaXMuJGVsZW1lbnQub24oJ2NsaWNrLmRpc21pc3MuYnMubW9kYWwnLCAnW2RhdGEtZGlzbWlzcz1cIm1vZGFsXCJdJywgJC5wcm94eSh0aGlzLmhpZGUsIHRoaXMpKVxuXG4gICAgdGhpcy4kZGlhbG9nLm9uKCdtb3VzZWRvd24uZGlzbWlzcy5icy5tb2RhbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoYXQuJGVsZW1lbnQub25lKCdtb3VzZXVwLmRpc21pc3MuYnMubW9kYWwnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoJChlLnRhcmdldCkuaXModGhhdC4kZWxlbWVudCkpIHRoYXQuaWdub3JlQmFja2Ryb3BDbGljayA9IHRydWVcbiAgICAgIH0pXG4gICAgfSlcblxuICAgIHRoaXMuYmFja2Ryb3AoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHRyYW5zaXRpb24gPSAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGF0LiRlbGVtZW50Lmhhc0NsYXNzKCdmYWRlJylcblxuICAgICAgaWYgKCF0aGF0LiRlbGVtZW50LnBhcmVudCgpLmxlbmd0aCkge1xuICAgICAgICB0aGF0LiRlbGVtZW50LmFwcGVuZFRvKHRoYXQuJGJvZHkpIC8vIGRvbid0IG1vdmUgbW9kYWxzIGRvbSBwb3NpdGlvblxuICAgICAgfVxuXG4gICAgICB0aGF0LiRlbGVtZW50XG4gICAgICAgIC5zaG93KClcbiAgICAgICAgLnNjcm9sbFRvcCgwKVxuXG4gICAgICB0aGF0LmFkanVzdERpYWxvZygpXG5cbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XG4gICAgICAgIHRoYXQuJGVsZW1lbnRbMF0ub2Zmc2V0V2lkdGggLy8gZm9yY2UgcmVmbG93XG4gICAgICB9XG5cbiAgICAgIHRoYXQuJGVsZW1lbnQuYWRkQ2xhc3MoJ2luJylcblxuICAgICAgdGhhdC5lbmZvcmNlRm9jdXMoKVxuXG4gICAgICB2YXIgZSA9ICQuRXZlbnQoJ3Nob3duLmJzLm1vZGFsJywgeyByZWxhdGVkVGFyZ2V0OiBfcmVsYXRlZFRhcmdldCB9KVxuXG4gICAgICB0cmFuc2l0aW9uID9cbiAgICAgICAgdGhhdC4kZGlhbG9nIC8vIHdhaXQgZm9yIG1vZGFsIHRvIHNsaWRlIGluXG4gICAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKCdmb2N1cycpLnRyaWdnZXIoZSlcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChNb2RhbC5UUkFOU0lUSU9OX0RVUkFUSU9OKSA6XG4gICAgICAgIHRoYXQuJGVsZW1lbnQudHJpZ2dlcignZm9jdXMnKS50cmlnZ2VyKGUpXG4gICAgfSlcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKGUpIHtcbiAgICBpZiAoZSkgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBlID0gJC5FdmVudCgnaGlkZS5icy5tb2RhbCcpXG5cbiAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoZSlcblxuICAgIGlmICghdGhpcy5pc1Nob3duIHx8IGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgdGhpcy5pc1Nob3duID0gZmFsc2VcblxuICAgIHRoaXMuZXNjYXBlKClcbiAgICB0aGlzLnJlc2l6ZSgpXG5cbiAgICAkKGRvY3VtZW50KS5vZmYoJ2ZvY3VzaW4uYnMubW9kYWwnKVxuXG4gICAgdGhpcy4kZWxlbWVudFxuICAgICAgLnJlbW92ZUNsYXNzKCdpbicpXG4gICAgICAub2ZmKCdjbGljay5kaXNtaXNzLmJzLm1vZGFsJylcbiAgICAgIC5vZmYoJ21vdXNldXAuZGlzbWlzcy5icy5tb2RhbCcpXG5cbiAgICB0aGlzLiRkaWFsb2cub2ZmKCdtb3VzZWRvd24uZGlzbWlzcy5icy5tb2RhbCcpXG5cbiAgICAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdmYWRlJykgP1xuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCAkLnByb3h5KHRoaXMuaGlkZU1vZGFsLCB0aGlzKSlcbiAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKE1vZGFsLlRSQU5TSVRJT05fRFVSQVRJT04pIDpcbiAgICAgIHRoaXMuaGlkZU1vZGFsKClcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5lbmZvcmNlRm9jdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJChkb2N1bWVudClcbiAgICAgIC5vZmYoJ2ZvY3VzaW4uYnMubW9kYWwnKSAvLyBndWFyZCBhZ2FpbnN0IGluZmluaXRlIGZvY3VzIGxvb3BcbiAgICAgIC5vbignZm9jdXNpbi5icy5tb2RhbCcsICQucHJveHkoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50ICE9PSBlLnRhcmdldCAmJlxuICAgICAgICAgICAgdGhpcy4kZWxlbWVudFswXSAhPT0gZS50YXJnZXQgJiZcbiAgICAgICAgICAgICF0aGlzLiRlbGVtZW50LmhhcyhlLnRhcmdldCkubGVuZ3RoKSB7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKCdmb2N1cycpXG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpKVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmVzY2FwZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5pc1Nob3duICYmIHRoaXMub3B0aW9ucy5rZXlib2FyZCkge1xuICAgICAgdGhpcy4kZWxlbWVudC5vbigna2V5ZG93bi5kaXNtaXNzLmJzLm1vZGFsJywgJC5wcm94eShmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLndoaWNoID09IDI3ICYmIHRoaXMuaGlkZSgpXG4gICAgICB9LCB0aGlzKSlcbiAgICB9IGVsc2UgaWYgKCF0aGlzLmlzU2hvd24pIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQub2ZmKCdrZXlkb3duLmRpc21pc3MuYnMubW9kYWwnKVxuICAgIH1cbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5yZXNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuaXNTaG93bikge1xuICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUuYnMubW9kYWwnLCAkLnByb3h5KHRoaXMuaGFuZGxlVXBkYXRlLCB0aGlzKSlcbiAgICB9IGVsc2Uge1xuICAgICAgJCh3aW5kb3cpLm9mZigncmVzaXplLmJzLm1vZGFsJylcbiAgICB9XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuaGlkZU1vZGFsID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIHRoaXMuJGVsZW1lbnQuaGlkZSgpXG4gICAgdGhpcy5iYWNrZHJvcChmdW5jdGlvbiAoKSB7XG4gICAgICB0aGF0LiRib2R5LnJlbW92ZUNsYXNzKCdtb2RhbC1vcGVuJylcbiAgICAgIHRoYXQucmVzZXRBZGp1c3RtZW50cygpXG4gICAgICB0aGF0LnJlc2V0U2Nyb2xsYmFyKClcbiAgICAgIHRoYXQuJGVsZW1lbnQudHJpZ2dlcignaGlkZGVuLmJzLm1vZGFsJylcbiAgICB9KVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLnJlbW92ZUJhY2tkcm9wID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuJGJhY2tkcm9wICYmIHRoaXMuJGJhY2tkcm9wLnJlbW92ZSgpXG4gICAgdGhpcy4kYmFja2Ryb3AgPSBudWxsXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuYmFja2Ryb3AgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICB2YXIgdGhhdCA9IHRoaXNcbiAgICB2YXIgYW5pbWF0ZSA9IHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2ZhZGUnKSA/ICdmYWRlJyA6ICcnXG5cbiAgICBpZiAodGhpcy5pc1Nob3duICYmIHRoaXMub3B0aW9ucy5iYWNrZHJvcCkge1xuICAgICAgdmFyIGRvQW5pbWF0ZSA9ICQuc3VwcG9ydC50cmFuc2l0aW9uICYmIGFuaW1hdGVcblxuICAgICAgdGhpcy4kYmFja2Ryb3AgPSAkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKVxuICAgICAgICAuYWRkQ2xhc3MoJ21vZGFsLWJhY2tkcm9wICcgKyBhbmltYXRlKVxuICAgICAgICAuYXBwZW5kVG8odGhpcy4kYm9keSlcblxuICAgICAgdGhpcy4kZWxlbWVudC5vbignY2xpY2suZGlzbWlzcy5icy5tb2RhbCcsICQucHJveHkoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuaWdub3JlQmFja2Ryb3BDbGljaykge1xuICAgICAgICAgIHRoaXMuaWdub3JlQmFja2Ryb3BDbGljayA9IGZhbHNlXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSBlLmN1cnJlbnRUYXJnZXQpIHJldHVyblxuICAgICAgICB0aGlzLm9wdGlvbnMuYmFja2Ryb3AgPT0gJ3N0YXRpYydcbiAgICAgICAgICA/IHRoaXMuJGVsZW1lbnRbMF0uZm9jdXMoKVxuICAgICAgICAgIDogdGhpcy5oaWRlKClcbiAgICAgIH0sIHRoaXMpKVxuXG4gICAgICBpZiAoZG9BbmltYXRlKSB0aGlzLiRiYWNrZHJvcFswXS5vZmZzZXRXaWR0aCAvLyBmb3JjZSByZWZsb3dcblxuICAgICAgdGhpcy4kYmFja2Ryb3AuYWRkQ2xhc3MoJ2luJylcblxuICAgICAgaWYgKCFjYWxsYmFjaykgcmV0dXJuXG5cbiAgICAgIGRvQW5pbWF0ZSA/XG4gICAgICAgIHRoaXMuJGJhY2tkcm9wXG4gICAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgY2FsbGJhY2spXG4gICAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKE1vZGFsLkJBQ0tEUk9QX1RSQU5TSVRJT05fRFVSQVRJT04pIDpcbiAgICAgICAgY2FsbGJhY2soKVxuXG4gICAgfSBlbHNlIGlmICghdGhpcy5pc1Nob3duICYmIHRoaXMuJGJhY2tkcm9wKSB7XG4gICAgICB0aGlzLiRiYWNrZHJvcC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgICB2YXIgY2FsbGJhY2tSZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoYXQucmVtb3ZlQmFja2Ryb3AoKVxuICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpXG4gICAgICB9XG4gICAgICAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdmYWRlJykgP1xuICAgICAgICB0aGlzLiRiYWNrZHJvcFxuICAgICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGNhbGxiYWNrUmVtb3ZlKVxuICAgICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChNb2RhbC5CQUNLRFJPUF9UUkFOU0lUSU9OX0RVUkFUSU9OKSA6XG4gICAgICAgIGNhbGxiYWNrUmVtb3ZlKClcblxuICAgIH0gZWxzZSBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrKClcbiAgICB9XG4gIH1cblxuICAvLyB0aGVzZSBmb2xsb3dpbmcgbWV0aG9kcyBhcmUgdXNlZCB0byBoYW5kbGUgb3ZlcmZsb3dpbmcgbW9kYWxzXG5cbiAgTW9kYWwucHJvdG90eXBlLmhhbmRsZVVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmFkanVzdERpYWxvZygpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuYWRqdXN0RGlhbG9nID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBtb2RhbElzT3ZlcmZsb3dpbmcgPSB0aGlzLiRlbGVtZW50WzBdLnNjcm9sbEhlaWdodCA+IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHRcblxuICAgIHRoaXMuJGVsZW1lbnQuY3NzKHtcbiAgICAgIHBhZGRpbmdMZWZ0OiAgIXRoaXMuYm9keUlzT3ZlcmZsb3dpbmcgJiYgbW9kYWxJc092ZXJmbG93aW5nID8gdGhpcy5zY3JvbGxiYXJXaWR0aCA6ICcnLFxuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGlzLmJvZHlJc092ZXJmbG93aW5nICYmICFtb2RhbElzT3ZlcmZsb3dpbmcgPyB0aGlzLnNjcm9sbGJhcldpZHRoIDogJydcbiAgICB9KVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLnJlc2V0QWRqdXN0bWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy4kZWxlbWVudC5jc3Moe1xuICAgICAgcGFkZGluZ0xlZnQ6ICcnLFxuICAgICAgcGFkZGluZ1JpZ2h0OiAnJ1xuICAgIH0pXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuY2hlY2tTY3JvbGxiYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGZ1bGxXaW5kb3dXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoXG4gICAgaWYgKCFmdWxsV2luZG93V2lkdGgpIHsgLy8gd29ya2Fyb3VuZCBmb3IgbWlzc2luZyB3aW5kb3cuaW5uZXJXaWR0aCBpbiBJRThcbiAgICAgIHZhciBkb2N1bWVudEVsZW1lbnRSZWN0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICBmdWxsV2luZG93V2lkdGggPSBkb2N1bWVudEVsZW1lbnRSZWN0LnJpZ2h0IC0gTWF0aC5hYnMoZG9jdW1lbnRFbGVtZW50UmVjdC5sZWZ0KVxuICAgIH1cbiAgICB0aGlzLmJvZHlJc092ZXJmbG93aW5nID0gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCA8IGZ1bGxXaW5kb3dXaWR0aFxuICAgIHRoaXMuc2Nyb2xsYmFyV2lkdGggPSB0aGlzLm1lYXN1cmVTY3JvbGxiYXIoKVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLnNldFNjcm9sbGJhciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYm9keVBhZCA9IHBhcnNlSW50KCh0aGlzLiRib2R5LmNzcygncGFkZGluZy1yaWdodCcpIHx8IDApLCAxMClcbiAgICB0aGlzLm9yaWdpbmFsQm9keVBhZCA9IGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0IHx8ICcnXG4gICAgaWYgKHRoaXMuYm9keUlzT3ZlcmZsb3dpbmcpIHRoaXMuJGJvZHkuY3NzKCdwYWRkaW5nLXJpZ2h0JywgYm9keVBhZCArIHRoaXMuc2Nyb2xsYmFyV2lkdGgpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUucmVzZXRTY3JvbGxiYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy4kYm9keS5jc3MoJ3BhZGRpbmctcmlnaHQnLCB0aGlzLm9yaWdpbmFsQm9keVBhZClcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5tZWFzdXJlU2Nyb2xsYmFyID0gZnVuY3Rpb24gKCkgeyAvLyB0aHggd2Fsc2hcbiAgICB2YXIgc2Nyb2xsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBzY3JvbGxEaXYuY2xhc3NOYW1lID0gJ21vZGFsLXNjcm9sbGJhci1tZWFzdXJlJ1xuICAgIHRoaXMuJGJvZHkuYXBwZW5kKHNjcm9sbERpdilcbiAgICB2YXIgc2Nyb2xsYmFyV2lkdGggPSBzY3JvbGxEaXYub2Zmc2V0V2lkdGggLSBzY3JvbGxEaXYuY2xpZW50V2lkdGhcbiAgICB0aGlzLiRib2R5WzBdLnJlbW92ZUNoaWxkKHNjcm9sbERpdilcbiAgICByZXR1cm4gc2Nyb2xsYmFyV2lkdGhcbiAgfVxuXG5cbiAgLy8gTU9EQUwgUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uLCBfcmVsYXRlZFRhcmdldCkge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLm1vZGFsJylcbiAgICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe30sIE1vZGFsLkRFRkFVTFRTLCAkdGhpcy5kYXRhKCksIHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uKVxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLm1vZGFsJywgKGRhdGEgPSBuZXcgTW9kYWwodGhpcywgb3B0aW9ucykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXShfcmVsYXRlZFRhcmdldClcbiAgICAgIGVsc2UgaWYgKG9wdGlvbnMuc2hvdykgZGF0YS5zaG93KF9yZWxhdGVkVGFyZ2V0KVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi5tb2RhbFxuXG4gICQuZm4ubW9kYWwgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5tb2RhbC5Db25zdHJ1Y3RvciA9IE1vZGFsXG5cblxuICAvLyBNT0RBTCBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gICQuZm4ubW9kYWwubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLm1vZGFsID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gTU9EQUwgREFUQS1BUElcbiAgLy8gPT09PT09PT09PT09PT1cblxuICAkKGRvY3VtZW50KS5vbignY2xpY2suYnMubW9kYWwuZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlPVwibW9kYWxcIl0nLCBmdW5jdGlvbiAoZSkge1xuICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgIHZhciBocmVmICAgID0gJHRoaXMuYXR0cignaHJlZicpXG4gICAgdmFyICR0YXJnZXQgPSAkKCR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykgfHwgKGhyZWYgJiYgaHJlZi5yZXBsYWNlKC8uKig/PSNbXlxcc10rJCkvLCAnJykpKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgdmFyIG9wdGlvbiAgPSAkdGFyZ2V0LmRhdGEoJ2JzLm1vZGFsJykgPyAndG9nZ2xlJyA6ICQuZXh0ZW5kKHsgcmVtb3RlOiAhLyMvLnRlc3QoaHJlZikgJiYgaHJlZiB9LCAkdGFyZ2V0LmRhdGEoKSwgJHRoaXMuZGF0YSgpKVxuXG4gICAgaWYgKCR0aGlzLmlzKCdhJykpIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgJHRhcmdldC5vbmUoJ3Nob3cuYnMubW9kYWwnLCBmdW5jdGlvbiAoc2hvd0V2ZW50KSB7XG4gICAgICBpZiAoc2hvd0V2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm4gLy8gb25seSByZWdpc3RlciBmb2N1cyByZXN0b3JlciBpZiBtb2RhbCB3aWxsIGFjdHVhbGx5IGdldCBzaG93blxuICAgICAgJHRhcmdldC5vbmUoJ2hpZGRlbi5icy5tb2RhbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJHRoaXMuaXMoJzp2aXNpYmxlJykgJiYgJHRoaXMudHJpZ2dlcignZm9jdXMnKVxuICAgICAgfSlcbiAgICB9KVxuICAgIFBsdWdpbi5jYWxsKCR0YXJnZXQsIG9wdGlvbiwgdGhpcylcbiAgfSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogdG9vbHRpcC5qcyB2My4zLjdcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI3Rvb2x0aXBcbiAqIEluc3BpcmVkIGJ5IHRoZSBvcmlnaW5hbCBqUXVlcnkudGlwc3kgYnkgSmFzb24gRnJhbWVcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNiBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBUT09MVElQIFBVQkxJQyBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgVG9vbHRpcCA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlICAgICAgID0gbnVsbFxuICAgIHRoaXMub3B0aW9ucyAgICA9IG51bGxcbiAgICB0aGlzLmVuYWJsZWQgICAgPSBudWxsXG4gICAgdGhpcy50aW1lb3V0ICAgID0gbnVsbFxuICAgIHRoaXMuaG92ZXJTdGF0ZSA9IG51bGxcbiAgICB0aGlzLiRlbGVtZW50ICAgPSBudWxsXG4gICAgdGhpcy5pblN0YXRlICAgID0gbnVsbFxuXG4gICAgdGhpcy5pbml0KCd0b29sdGlwJywgZWxlbWVudCwgb3B0aW9ucylcbiAgfVxuXG4gIFRvb2x0aXAuVkVSU0lPTiAgPSAnMy4zLjcnXG5cbiAgVG9vbHRpcC5UUkFOU0lUSU9OX0RVUkFUSU9OID0gMTUwXG5cbiAgVG9vbHRpcC5ERUZBVUxUUyA9IHtcbiAgICBhbmltYXRpb246IHRydWUsXG4gICAgcGxhY2VtZW50OiAndG9wJyxcbiAgICBzZWxlY3RvcjogZmFsc2UsXG4gICAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwidG9vbHRpcFwiIHJvbGU9XCJ0b29sdGlwXCI+PGRpdiBjbGFzcz1cInRvb2x0aXAtYXJyb3dcIj48L2Rpdj48ZGl2IGNsYXNzPVwidG9vbHRpcC1pbm5lclwiPjwvZGl2PjwvZGl2PicsXG4gICAgdHJpZ2dlcjogJ2hvdmVyIGZvY3VzJyxcbiAgICB0aXRsZTogJycsXG4gICAgZGVsYXk6IDAsXG4gICAgaHRtbDogZmFsc2UsXG4gICAgY29udGFpbmVyOiBmYWxzZSxcbiAgICB2aWV3cG9ydDoge1xuICAgICAgc2VsZWN0b3I6ICdib2R5JyxcbiAgICAgIHBhZGRpbmc6IDBcbiAgICB9XG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKHR5cGUsIGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmVuYWJsZWQgICA9IHRydWVcbiAgICB0aGlzLnR5cGUgICAgICA9IHR5cGVcbiAgICB0aGlzLiRlbGVtZW50ICA9ICQoZWxlbWVudClcbiAgICB0aGlzLm9wdGlvbnMgICA9IHRoaXMuZ2V0T3B0aW9ucyhvcHRpb25zKVxuICAgIHRoaXMuJHZpZXdwb3J0ID0gdGhpcy5vcHRpb25zLnZpZXdwb3J0ICYmICQoJC5pc0Z1bmN0aW9uKHRoaXMub3B0aW9ucy52aWV3cG9ydCkgPyB0aGlzLm9wdGlvbnMudmlld3BvcnQuY2FsbCh0aGlzLCB0aGlzLiRlbGVtZW50KSA6ICh0aGlzLm9wdGlvbnMudmlld3BvcnQuc2VsZWN0b3IgfHwgdGhpcy5vcHRpb25zLnZpZXdwb3J0KSlcbiAgICB0aGlzLmluU3RhdGUgICA9IHsgY2xpY2s6IGZhbHNlLCBob3ZlcjogZmFsc2UsIGZvY3VzOiBmYWxzZSB9XG5cbiAgICBpZiAodGhpcy4kZWxlbWVudFswXSBpbnN0YW5jZW9mIGRvY3VtZW50LmNvbnN0cnVjdG9yICYmICF0aGlzLm9wdGlvbnMuc2VsZWN0b3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYHNlbGVjdG9yYCBvcHRpb24gbXVzdCBiZSBzcGVjaWZpZWQgd2hlbiBpbml0aWFsaXppbmcgJyArIHRoaXMudHlwZSArICcgb24gdGhlIHdpbmRvdy5kb2N1bWVudCBvYmplY3QhJylcbiAgICB9XG5cbiAgICB2YXIgdHJpZ2dlcnMgPSB0aGlzLm9wdGlvbnMudHJpZ2dlci5zcGxpdCgnICcpXG5cbiAgICBmb3IgKHZhciBpID0gdHJpZ2dlcnMubGVuZ3RoOyBpLS07KSB7XG4gICAgICB2YXIgdHJpZ2dlciA9IHRyaWdnZXJzW2ldXG5cbiAgICAgIGlmICh0cmlnZ2VyID09ICdjbGljaycpIHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5vbignY2xpY2suJyArIHRoaXMudHlwZSwgdGhpcy5vcHRpb25zLnNlbGVjdG9yLCAkLnByb3h5KHRoaXMudG9nZ2xlLCB0aGlzKSlcbiAgICAgIH0gZWxzZSBpZiAodHJpZ2dlciAhPSAnbWFudWFsJykge1xuICAgICAgICB2YXIgZXZlbnRJbiAgPSB0cmlnZ2VyID09ICdob3ZlcicgPyAnbW91c2VlbnRlcicgOiAnZm9jdXNpbidcbiAgICAgICAgdmFyIGV2ZW50T3V0ID0gdHJpZ2dlciA9PSAnaG92ZXInID8gJ21vdXNlbGVhdmUnIDogJ2ZvY3Vzb3V0J1xuXG4gICAgICAgIHRoaXMuJGVsZW1lbnQub24oZXZlbnRJbiAgKyAnLicgKyB0aGlzLnR5cGUsIHRoaXMub3B0aW9ucy5zZWxlY3RvciwgJC5wcm94eSh0aGlzLmVudGVyLCB0aGlzKSlcbiAgICAgICAgdGhpcy4kZWxlbWVudC5vbihldmVudE91dCArICcuJyArIHRoaXMudHlwZSwgdGhpcy5vcHRpb25zLnNlbGVjdG9yLCAkLnByb3h5KHRoaXMubGVhdmUsIHRoaXMpKVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMub3B0aW9ucy5zZWxlY3RvciA/XG4gICAgICAodGhpcy5fb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCB0aGlzLm9wdGlvbnMsIHsgdHJpZ2dlcjogJ21hbnVhbCcsIHNlbGVjdG9yOiAnJyB9KSkgOlxuICAgICAgdGhpcy5maXhUaXRsZSgpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5nZXREZWZhdWx0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gVG9vbHRpcC5ERUZBVUxUU1xuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0T3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCB0aGlzLmdldERlZmF1bHRzKCksIHRoaXMuJGVsZW1lbnQuZGF0YSgpLCBvcHRpb25zKVxuXG4gICAgaWYgKG9wdGlvbnMuZGVsYXkgJiYgdHlwZW9mIG9wdGlvbnMuZGVsYXkgPT0gJ251bWJlcicpIHtcbiAgICAgIG9wdGlvbnMuZGVsYXkgPSB7XG4gICAgICAgIHNob3c6IG9wdGlvbnMuZGVsYXksXG4gICAgICAgIGhpZGU6IG9wdGlvbnMuZGVsYXlcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gb3B0aW9uc1xuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0RGVsZWdhdGVPcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBvcHRpb25zICA9IHt9XG4gICAgdmFyIGRlZmF1bHRzID0gdGhpcy5nZXREZWZhdWx0cygpXG5cbiAgICB0aGlzLl9vcHRpb25zICYmICQuZWFjaCh0aGlzLl9vcHRpb25zLCBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgaWYgKGRlZmF1bHRzW2tleV0gIT0gdmFsdWUpIG9wdGlvbnNba2V5XSA9IHZhbHVlXG4gICAgfSlcblxuICAgIHJldHVybiBvcHRpb25zXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5lbnRlciA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICB2YXIgc2VsZiA9IG9iaiBpbnN0YW5jZW9mIHRoaXMuY29uc3RydWN0b3IgP1xuICAgICAgb2JqIDogJChvYmouY3VycmVudFRhcmdldCkuZGF0YSgnYnMuJyArIHRoaXMudHlwZSlcblxuICAgIGlmICghc2VsZikge1xuICAgICAgc2VsZiA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKG9iai5jdXJyZW50VGFyZ2V0LCB0aGlzLmdldERlbGVnYXRlT3B0aW9ucygpKVxuICAgICAgJChvYmouY3VycmVudFRhcmdldCkuZGF0YSgnYnMuJyArIHRoaXMudHlwZSwgc2VsZilcbiAgICB9XG5cbiAgICBpZiAob2JqIGluc3RhbmNlb2YgJC5FdmVudCkge1xuICAgICAgc2VsZi5pblN0YXRlW29iai50eXBlID09ICdmb2N1c2luJyA/ICdmb2N1cycgOiAnaG92ZXInXSA9IHRydWVcbiAgICB9XG5cbiAgICBpZiAoc2VsZi50aXAoKS5oYXNDbGFzcygnaW4nKSB8fCBzZWxmLmhvdmVyU3RhdGUgPT0gJ2luJykge1xuICAgICAgc2VsZi5ob3ZlclN0YXRlID0gJ2luJ1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY2xlYXJUaW1lb3V0KHNlbGYudGltZW91dClcblxuICAgIHNlbGYuaG92ZXJTdGF0ZSA9ICdpbidcblxuICAgIGlmICghc2VsZi5vcHRpb25zLmRlbGF5IHx8ICFzZWxmLm9wdGlvbnMuZGVsYXkuc2hvdykgcmV0dXJuIHNlbGYuc2hvdygpXG5cbiAgICBzZWxmLnRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChzZWxmLmhvdmVyU3RhdGUgPT0gJ2luJykgc2VsZi5zaG93KClcbiAgICB9LCBzZWxmLm9wdGlvbnMuZGVsYXkuc2hvdylcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmlzSW5TdGF0ZVRydWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgZm9yICh2YXIga2V5IGluIHRoaXMuaW5TdGF0ZSkge1xuICAgICAgaWYgKHRoaXMuaW5TdGF0ZVtrZXldKSByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUubGVhdmUgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgdmFyIHNlbGYgPSBvYmogaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yID9cbiAgICAgIG9iaiA6ICQob2JqLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2JzLicgKyB0aGlzLnR5cGUpXG5cbiAgICBpZiAoIXNlbGYpIHtcbiAgICAgIHNlbGYgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihvYmouY3VycmVudFRhcmdldCwgdGhpcy5nZXREZWxlZ2F0ZU9wdGlvbnMoKSlcbiAgICAgICQob2JqLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2JzLicgKyB0aGlzLnR5cGUsIHNlbGYpXG4gICAgfVxuXG4gICAgaWYgKG9iaiBpbnN0YW5jZW9mICQuRXZlbnQpIHtcbiAgICAgIHNlbGYuaW5TdGF0ZVtvYmoudHlwZSA9PSAnZm9jdXNvdXQnID8gJ2ZvY3VzJyA6ICdob3ZlciddID0gZmFsc2VcbiAgICB9XG5cbiAgICBpZiAoc2VsZi5pc0luU3RhdGVUcnVlKCkpIHJldHVyblxuXG4gICAgY2xlYXJUaW1lb3V0KHNlbGYudGltZW91dClcblxuICAgIHNlbGYuaG92ZXJTdGF0ZSA9ICdvdXQnXG5cbiAgICBpZiAoIXNlbGYub3B0aW9ucy5kZWxheSB8fCAhc2VsZi5vcHRpb25zLmRlbGF5LmhpZGUpIHJldHVybiBzZWxmLmhpZGUoKVxuXG4gICAgc2VsZi50aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoc2VsZi5ob3ZlclN0YXRlID09ICdvdXQnKSBzZWxmLmhpZGUoKVxuICAgIH0sIHNlbGYub3B0aW9ucy5kZWxheS5oaWRlKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZSA9ICQuRXZlbnQoJ3Nob3cuYnMuJyArIHRoaXMudHlwZSlcblxuICAgIGlmICh0aGlzLmhhc0NvbnRlbnQoKSAmJiB0aGlzLmVuYWJsZWQpIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgICB2YXIgaW5Eb20gPSAkLmNvbnRhaW5zKHRoaXMuJGVsZW1lbnRbMF0ub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHRoaXMuJGVsZW1lbnRbMF0pXG4gICAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSB8fCAhaW5Eb20pIHJldHVyblxuICAgICAgdmFyIHRoYXQgPSB0aGlzXG5cbiAgICAgIHZhciAkdGlwID0gdGhpcy50aXAoKVxuXG4gICAgICB2YXIgdGlwSWQgPSB0aGlzLmdldFVJRCh0aGlzLnR5cGUpXG5cbiAgICAgIHRoaXMuc2V0Q29udGVudCgpXG4gICAgICAkdGlwLmF0dHIoJ2lkJywgdGlwSWQpXG4gICAgICB0aGlzLiRlbGVtZW50LmF0dHIoJ2FyaWEtZGVzY3JpYmVkYnknLCB0aXBJZClcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5hbmltYXRpb24pICR0aXAuYWRkQ2xhc3MoJ2ZhZGUnKVxuXG4gICAgICB2YXIgcGxhY2VtZW50ID0gdHlwZW9mIHRoaXMub3B0aW9ucy5wbGFjZW1lbnQgPT0gJ2Z1bmN0aW9uJyA/XG4gICAgICAgIHRoaXMub3B0aW9ucy5wbGFjZW1lbnQuY2FsbCh0aGlzLCAkdGlwWzBdLCB0aGlzLiRlbGVtZW50WzBdKSA6XG4gICAgICAgIHRoaXMub3B0aW9ucy5wbGFjZW1lbnRcblxuICAgICAgdmFyIGF1dG9Ub2tlbiA9IC9cXHM/YXV0bz9cXHM/L2lcbiAgICAgIHZhciBhdXRvUGxhY2UgPSBhdXRvVG9rZW4udGVzdChwbGFjZW1lbnQpXG4gICAgICBpZiAoYXV0b1BsYWNlKSBwbGFjZW1lbnQgPSBwbGFjZW1lbnQucmVwbGFjZShhdXRvVG9rZW4sICcnKSB8fCAndG9wJ1xuXG4gICAgICAkdGlwXG4gICAgICAgIC5kZXRhY2goKVxuICAgICAgICAuY3NzKHsgdG9wOiAwLCBsZWZ0OiAwLCBkaXNwbGF5OiAnYmxvY2snIH0pXG4gICAgICAgIC5hZGRDbGFzcyhwbGFjZW1lbnQpXG4gICAgICAgIC5kYXRhKCdicy4nICsgdGhpcy50eXBlLCB0aGlzKVxuXG4gICAgICB0aGlzLm9wdGlvbnMuY29udGFpbmVyID8gJHRpcC5hcHBlbmRUbyh0aGlzLm9wdGlvbnMuY29udGFpbmVyKSA6ICR0aXAuaW5zZXJ0QWZ0ZXIodGhpcy4kZWxlbWVudClcbiAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcignaW5zZXJ0ZWQuYnMuJyArIHRoaXMudHlwZSlcblxuICAgICAgdmFyIHBvcyAgICAgICAgICA9IHRoaXMuZ2V0UG9zaXRpb24oKVxuICAgICAgdmFyIGFjdHVhbFdpZHRoICA9ICR0aXBbMF0ub2Zmc2V0V2lkdGhcbiAgICAgIHZhciBhY3R1YWxIZWlnaHQgPSAkdGlwWzBdLm9mZnNldEhlaWdodFxuXG4gICAgICBpZiAoYXV0b1BsYWNlKSB7XG4gICAgICAgIHZhciBvcmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRcbiAgICAgICAgdmFyIHZpZXdwb3J0RGltID0gdGhpcy5nZXRQb3NpdGlvbih0aGlzLiR2aWV3cG9ydClcblxuICAgICAgICBwbGFjZW1lbnQgPSBwbGFjZW1lbnQgPT0gJ2JvdHRvbScgJiYgcG9zLmJvdHRvbSArIGFjdHVhbEhlaWdodCA+IHZpZXdwb3J0RGltLmJvdHRvbSA/ICd0b3AnICAgIDpcbiAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50ID09ICd0b3AnICAgICYmIHBvcy50b3AgICAgLSBhY3R1YWxIZWlnaHQgPCB2aWV3cG9ydERpbS50b3AgICAgPyAnYm90dG9tJyA6XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudCA9PSAncmlnaHQnICAmJiBwb3MucmlnaHQgICsgYWN0dWFsV2lkdGggID4gdmlld3BvcnREaW0ud2lkdGggID8gJ2xlZnQnICAgOlxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQgPT0gJ2xlZnQnICAgJiYgcG9zLmxlZnQgICAtIGFjdHVhbFdpZHRoICA8IHZpZXdwb3J0RGltLmxlZnQgICA/ICdyaWdodCcgIDpcbiAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50XG5cbiAgICAgICAgJHRpcFxuICAgICAgICAgIC5yZW1vdmVDbGFzcyhvcmdQbGFjZW1lbnQpXG4gICAgICAgICAgLmFkZENsYXNzKHBsYWNlbWVudClcbiAgICAgIH1cblxuICAgICAgdmFyIGNhbGN1bGF0ZWRPZmZzZXQgPSB0aGlzLmdldENhbGN1bGF0ZWRPZmZzZXQocGxhY2VtZW50LCBwb3MsIGFjdHVhbFdpZHRoLCBhY3R1YWxIZWlnaHQpXG5cbiAgICAgIHRoaXMuYXBwbHlQbGFjZW1lbnQoY2FsY3VsYXRlZE9mZnNldCwgcGxhY2VtZW50KVxuXG4gICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwcmV2SG92ZXJTdGF0ZSA9IHRoYXQuaG92ZXJTdGF0ZVxuICAgICAgICB0aGF0LiRlbGVtZW50LnRyaWdnZXIoJ3Nob3duLmJzLicgKyB0aGF0LnR5cGUpXG4gICAgICAgIHRoYXQuaG92ZXJTdGF0ZSA9IG51bGxcblxuICAgICAgICBpZiAocHJldkhvdmVyU3RhdGUgPT0gJ291dCcpIHRoYXQubGVhdmUodGhhdClcbiAgICAgIH1cblxuICAgICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kdGlwLmhhc0NsYXNzKCdmYWRlJykgP1xuICAgICAgICAkdGlwXG4gICAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgY29tcGxldGUpXG4gICAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRvb2x0aXAuVFJBTlNJVElPTl9EVVJBVElPTikgOlxuICAgICAgICBjb21wbGV0ZSgpXG4gICAgfVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuYXBwbHlQbGFjZW1lbnQgPSBmdW5jdGlvbiAob2Zmc2V0LCBwbGFjZW1lbnQpIHtcbiAgICB2YXIgJHRpcCAgID0gdGhpcy50aXAoKVxuICAgIHZhciB3aWR0aCAgPSAkdGlwWzBdLm9mZnNldFdpZHRoXG4gICAgdmFyIGhlaWdodCA9ICR0aXBbMF0ub2Zmc2V0SGVpZ2h0XG5cbiAgICAvLyBtYW51YWxseSByZWFkIG1hcmdpbnMgYmVjYXVzZSBnZXRCb3VuZGluZ0NsaWVudFJlY3QgaW5jbHVkZXMgZGlmZmVyZW5jZVxuICAgIHZhciBtYXJnaW5Ub3AgPSBwYXJzZUludCgkdGlwLmNzcygnbWFyZ2luLXRvcCcpLCAxMClcbiAgICB2YXIgbWFyZ2luTGVmdCA9IHBhcnNlSW50KCR0aXAuY3NzKCdtYXJnaW4tbGVmdCcpLCAxMClcblxuICAgIC8vIHdlIG11c3QgY2hlY2sgZm9yIE5hTiBmb3IgaWUgOC85XG4gICAgaWYgKGlzTmFOKG1hcmdpblRvcCkpICBtYXJnaW5Ub3AgID0gMFxuICAgIGlmIChpc05hTihtYXJnaW5MZWZ0KSkgbWFyZ2luTGVmdCA9IDBcblxuICAgIG9mZnNldC50b3AgICs9IG1hcmdpblRvcFxuICAgIG9mZnNldC5sZWZ0ICs9IG1hcmdpbkxlZnRcblxuICAgIC8vICQuZm4ub2Zmc2V0IGRvZXNuJ3Qgcm91bmQgcGl4ZWwgdmFsdWVzXG4gICAgLy8gc28gd2UgdXNlIHNldE9mZnNldCBkaXJlY3RseSB3aXRoIG91ciBvd24gZnVuY3Rpb24gQi0wXG4gICAgJC5vZmZzZXQuc2V0T2Zmc2V0KCR0aXBbMF0sICQuZXh0ZW5kKHtcbiAgICAgIHVzaW5nOiBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgJHRpcC5jc3Moe1xuICAgICAgICAgIHRvcDogTWF0aC5yb3VuZChwcm9wcy50b3ApLFxuICAgICAgICAgIGxlZnQ6IE1hdGgucm91bmQocHJvcHMubGVmdClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9LCBvZmZzZXQpLCAwKVxuXG4gICAgJHRpcC5hZGRDbGFzcygnaW4nKVxuXG4gICAgLy8gY2hlY2sgdG8gc2VlIGlmIHBsYWNpbmcgdGlwIGluIG5ldyBvZmZzZXQgY2F1c2VkIHRoZSB0aXAgdG8gcmVzaXplIGl0c2VsZlxuICAgIHZhciBhY3R1YWxXaWR0aCAgPSAkdGlwWzBdLm9mZnNldFdpZHRoXG4gICAgdmFyIGFjdHVhbEhlaWdodCA9ICR0aXBbMF0ub2Zmc2V0SGVpZ2h0XG5cbiAgICBpZiAocGxhY2VtZW50ID09ICd0b3AnICYmIGFjdHVhbEhlaWdodCAhPSBoZWlnaHQpIHtcbiAgICAgIG9mZnNldC50b3AgPSBvZmZzZXQudG9wICsgaGVpZ2h0IC0gYWN0dWFsSGVpZ2h0XG4gICAgfVxuXG4gICAgdmFyIGRlbHRhID0gdGhpcy5nZXRWaWV3cG9ydEFkanVzdGVkRGVsdGEocGxhY2VtZW50LCBvZmZzZXQsIGFjdHVhbFdpZHRoLCBhY3R1YWxIZWlnaHQpXG5cbiAgICBpZiAoZGVsdGEubGVmdCkgb2Zmc2V0LmxlZnQgKz0gZGVsdGEubGVmdFxuICAgIGVsc2Ugb2Zmc2V0LnRvcCArPSBkZWx0YS50b3BcblxuICAgIHZhciBpc1ZlcnRpY2FsICAgICAgICAgID0gL3RvcHxib3R0b20vLnRlc3QocGxhY2VtZW50KVxuICAgIHZhciBhcnJvd0RlbHRhICAgICAgICAgID0gaXNWZXJ0aWNhbCA/IGRlbHRhLmxlZnQgKiAyIC0gd2lkdGggKyBhY3R1YWxXaWR0aCA6IGRlbHRhLnRvcCAqIDIgLSBoZWlnaHQgKyBhY3R1YWxIZWlnaHRcbiAgICB2YXIgYXJyb3dPZmZzZXRQb3NpdGlvbiA9IGlzVmVydGljYWwgPyAnb2Zmc2V0V2lkdGgnIDogJ29mZnNldEhlaWdodCdcblxuICAgICR0aXAub2Zmc2V0KG9mZnNldClcbiAgICB0aGlzLnJlcGxhY2VBcnJvdyhhcnJvd0RlbHRhLCAkdGlwWzBdW2Fycm93T2Zmc2V0UG9zaXRpb25dLCBpc1ZlcnRpY2FsKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUucmVwbGFjZUFycm93ID0gZnVuY3Rpb24gKGRlbHRhLCBkaW1lbnNpb24sIGlzVmVydGljYWwpIHtcbiAgICB0aGlzLmFycm93KClcbiAgICAgIC5jc3MoaXNWZXJ0aWNhbCA/ICdsZWZ0JyA6ICd0b3AnLCA1MCAqICgxIC0gZGVsdGEgLyBkaW1lbnNpb24pICsgJyUnKVxuICAgICAgLmNzcyhpc1ZlcnRpY2FsID8gJ3RvcCcgOiAnbGVmdCcsICcnKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuc2V0Q29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJHRpcCAgPSB0aGlzLnRpcCgpXG4gICAgdmFyIHRpdGxlID0gdGhpcy5nZXRUaXRsZSgpXG5cbiAgICAkdGlwLmZpbmQoJy50b29sdGlwLWlubmVyJylbdGhpcy5vcHRpb25zLmh0bWwgPyAnaHRtbCcgOiAndGV4dCddKHRpdGxlKVxuICAgICR0aXAucmVtb3ZlQ2xhc3MoJ2ZhZGUgaW4gdG9wIGJvdHRvbSBsZWZ0IHJpZ2h0JylcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICB2YXIgdGhhdCA9IHRoaXNcbiAgICB2YXIgJHRpcCA9ICQodGhpcy4kdGlwKVxuICAgIHZhciBlICAgID0gJC5FdmVudCgnaGlkZS5icy4nICsgdGhpcy50eXBlKVxuXG4gICAgZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gICAgICBpZiAodGhhdC5ob3ZlclN0YXRlICE9ICdpbicpICR0aXAuZGV0YWNoKClcbiAgICAgIGlmICh0aGF0LiRlbGVtZW50KSB7IC8vIFRPRE86IENoZWNrIHdoZXRoZXIgZ3VhcmRpbmcgdGhpcyBjb2RlIHdpdGggdGhpcyBgaWZgIGlzIHJlYWxseSBuZWNlc3NhcnkuXG4gICAgICAgIHRoYXQuJGVsZW1lbnRcbiAgICAgICAgICAucmVtb3ZlQXR0cignYXJpYS1kZXNjcmliZWRieScpXG4gICAgICAgICAgLnRyaWdnZXIoJ2hpZGRlbi5icy4nICsgdGhhdC50eXBlKVxuICAgICAgfVxuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKVxuICAgIH1cblxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgJHRpcC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgJHRpcC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgICR0aXBcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgY29tcGxldGUpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChUb29sdGlwLlRSQU5TSVRJT05fRFVSQVRJT04pIDpcbiAgICAgIGNvbXBsZXRlKClcblxuICAgIHRoaXMuaG92ZXJTdGF0ZSA9IG51bGxcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5maXhUaXRsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJGUgPSB0aGlzLiRlbGVtZW50XG4gICAgaWYgKCRlLmF0dHIoJ3RpdGxlJykgfHwgdHlwZW9mICRlLmF0dHIoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKSAhPSAnc3RyaW5nJykge1xuICAgICAgJGUuYXR0cignZGF0YS1vcmlnaW5hbC10aXRsZScsICRlLmF0dHIoJ3RpdGxlJykgfHwgJycpLmF0dHIoJ3RpdGxlJywgJycpXG4gICAgfVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuaGFzQ29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRUaXRsZSgpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5nZXRQb3NpdGlvbiA9IGZ1bmN0aW9uICgkZWxlbWVudCkge1xuICAgICRlbGVtZW50ICAgPSAkZWxlbWVudCB8fCB0aGlzLiRlbGVtZW50XG5cbiAgICB2YXIgZWwgICAgID0gJGVsZW1lbnRbMF1cbiAgICB2YXIgaXNCb2R5ID0gZWwudGFnTmFtZSA9PSAnQk9EWSdcblxuICAgIHZhciBlbFJlY3QgICAgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGlmIChlbFJlY3Qud2lkdGggPT0gbnVsbCkge1xuICAgICAgLy8gd2lkdGggYW5kIGhlaWdodCBhcmUgbWlzc2luZyBpbiBJRTgsIHNvIGNvbXB1dGUgdGhlbSBtYW51YWxseTsgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9pc3N1ZXMvMTQwOTNcbiAgICAgIGVsUmVjdCA9ICQuZXh0ZW5kKHt9LCBlbFJlY3QsIHsgd2lkdGg6IGVsUmVjdC5yaWdodCAtIGVsUmVjdC5sZWZ0LCBoZWlnaHQ6IGVsUmVjdC5ib3R0b20gLSBlbFJlY3QudG9wIH0pXG4gICAgfVxuICAgIHZhciBpc1N2ZyA9IHdpbmRvdy5TVkdFbGVtZW50ICYmIGVsIGluc3RhbmNlb2Ygd2luZG93LlNWR0VsZW1lbnRcbiAgICAvLyBBdm9pZCB1c2luZyAkLm9mZnNldCgpIG9uIFNWR3Mgc2luY2UgaXQgZ2l2ZXMgaW5jb3JyZWN0IHJlc3VsdHMgaW4galF1ZXJ5IDMuXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9pc3N1ZXMvMjAyODBcbiAgICB2YXIgZWxPZmZzZXQgID0gaXNCb2R5ID8geyB0b3A6IDAsIGxlZnQ6IDAgfSA6IChpc1N2ZyA/IG51bGwgOiAkZWxlbWVudC5vZmZzZXQoKSlcbiAgICB2YXIgc2Nyb2xsICAgID0geyBzY3JvbGw6IGlzQm9keSA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgOiAkZWxlbWVudC5zY3JvbGxUb3AoKSB9XG4gICAgdmFyIG91dGVyRGltcyA9IGlzQm9keSA/IHsgd2lkdGg6ICQod2luZG93KS53aWR0aCgpLCBoZWlnaHQ6ICQod2luZG93KS5oZWlnaHQoKSB9IDogbnVsbFxuXG4gICAgcmV0dXJuICQuZXh0ZW5kKHt9LCBlbFJlY3QsIHNjcm9sbCwgb3V0ZXJEaW1zLCBlbE9mZnNldClcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldENhbGN1bGF0ZWRPZmZzZXQgPSBmdW5jdGlvbiAocGxhY2VtZW50LCBwb3MsIGFjdHVhbFdpZHRoLCBhY3R1YWxIZWlnaHQpIHtcbiAgICByZXR1cm4gcGxhY2VtZW50ID09ICdib3R0b20nID8geyB0b3A6IHBvcy50b3AgKyBwb3MuaGVpZ2h0LCAgIGxlZnQ6IHBvcy5sZWZ0ICsgcG9zLndpZHRoIC8gMiAtIGFjdHVhbFdpZHRoIC8gMiB9IDpcbiAgICAgICAgICAgcGxhY2VtZW50ID09ICd0b3AnICAgID8geyB0b3A6IHBvcy50b3AgLSBhY3R1YWxIZWlnaHQsIGxlZnQ6IHBvcy5sZWZ0ICsgcG9zLndpZHRoIC8gMiAtIGFjdHVhbFdpZHRoIC8gMiB9IDpcbiAgICAgICAgICAgcGxhY2VtZW50ID09ICdsZWZ0JyAgID8geyB0b3A6IHBvcy50b3AgKyBwb3MuaGVpZ2h0IC8gMiAtIGFjdHVhbEhlaWdodCAvIDIsIGxlZnQ6IHBvcy5sZWZ0IC0gYWN0dWFsV2lkdGggfSA6XG4gICAgICAgIC8qIHBsYWNlbWVudCA9PSAncmlnaHQnICovIHsgdG9wOiBwb3MudG9wICsgcG9zLmhlaWdodCAvIDIgLSBhY3R1YWxIZWlnaHQgLyAyLCBsZWZ0OiBwb3MubGVmdCArIHBvcy53aWR0aCB9XG5cbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldFZpZXdwb3J0QWRqdXN0ZWREZWx0YSA9IGZ1bmN0aW9uIChwbGFjZW1lbnQsIHBvcywgYWN0dWFsV2lkdGgsIGFjdHVhbEhlaWdodCkge1xuICAgIHZhciBkZWx0YSA9IHsgdG9wOiAwLCBsZWZ0OiAwIH1cbiAgICBpZiAoIXRoaXMuJHZpZXdwb3J0KSByZXR1cm4gZGVsdGFcblxuICAgIHZhciB2aWV3cG9ydFBhZGRpbmcgPSB0aGlzLm9wdGlvbnMudmlld3BvcnQgJiYgdGhpcy5vcHRpb25zLnZpZXdwb3J0LnBhZGRpbmcgfHwgMFxuICAgIHZhciB2aWV3cG9ydERpbWVuc2lvbnMgPSB0aGlzLmdldFBvc2l0aW9uKHRoaXMuJHZpZXdwb3J0KVxuXG4gICAgaWYgKC9yaWdodHxsZWZ0Ly50ZXN0KHBsYWNlbWVudCkpIHtcbiAgICAgIHZhciB0b3BFZGdlT2Zmc2V0ICAgID0gcG9zLnRvcCAtIHZpZXdwb3J0UGFkZGluZyAtIHZpZXdwb3J0RGltZW5zaW9ucy5zY3JvbGxcbiAgICAgIHZhciBib3R0b21FZGdlT2Zmc2V0ID0gcG9zLnRvcCArIHZpZXdwb3J0UGFkZGluZyAtIHZpZXdwb3J0RGltZW5zaW9ucy5zY3JvbGwgKyBhY3R1YWxIZWlnaHRcbiAgICAgIGlmICh0b3BFZGdlT2Zmc2V0IDwgdmlld3BvcnREaW1lbnNpb25zLnRvcCkgeyAvLyB0b3Agb3ZlcmZsb3dcbiAgICAgICAgZGVsdGEudG9wID0gdmlld3BvcnREaW1lbnNpb25zLnRvcCAtIHRvcEVkZ2VPZmZzZXRcbiAgICAgIH0gZWxzZSBpZiAoYm90dG9tRWRnZU9mZnNldCA+IHZpZXdwb3J0RGltZW5zaW9ucy50b3AgKyB2aWV3cG9ydERpbWVuc2lvbnMuaGVpZ2h0KSB7IC8vIGJvdHRvbSBvdmVyZmxvd1xuICAgICAgICBkZWx0YS50b3AgPSB2aWV3cG9ydERpbWVuc2lvbnMudG9wICsgdmlld3BvcnREaW1lbnNpb25zLmhlaWdodCAtIGJvdHRvbUVkZ2VPZmZzZXRcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxlZnRFZGdlT2Zmc2V0ICA9IHBvcy5sZWZ0IC0gdmlld3BvcnRQYWRkaW5nXG4gICAgICB2YXIgcmlnaHRFZGdlT2Zmc2V0ID0gcG9zLmxlZnQgKyB2aWV3cG9ydFBhZGRpbmcgKyBhY3R1YWxXaWR0aFxuICAgICAgaWYgKGxlZnRFZGdlT2Zmc2V0IDwgdmlld3BvcnREaW1lbnNpb25zLmxlZnQpIHsgLy8gbGVmdCBvdmVyZmxvd1xuICAgICAgICBkZWx0YS5sZWZ0ID0gdmlld3BvcnREaW1lbnNpb25zLmxlZnQgLSBsZWZ0RWRnZU9mZnNldFxuICAgICAgfSBlbHNlIGlmIChyaWdodEVkZ2VPZmZzZXQgPiB2aWV3cG9ydERpbWVuc2lvbnMucmlnaHQpIHsgLy8gcmlnaHQgb3ZlcmZsb3dcbiAgICAgICAgZGVsdGEubGVmdCA9IHZpZXdwb3J0RGltZW5zaW9ucy5sZWZ0ICsgdmlld3BvcnREaW1lbnNpb25zLndpZHRoIC0gcmlnaHRFZGdlT2Zmc2V0XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRlbHRhXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5nZXRUaXRsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGl0bGVcbiAgICB2YXIgJGUgPSB0aGlzLiRlbGVtZW50XG4gICAgdmFyIG8gID0gdGhpcy5vcHRpb25zXG5cbiAgICB0aXRsZSA9ICRlLmF0dHIoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKVxuICAgICAgfHwgKHR5cGVvZiBvLnRpdGxlID09ICdmdW5jdGlvbicgPyBvLnRpdGxlLmNhbGwoJGVbMF0pIDogIG8udGl0bGUpXG5cbiAgICByZXR1cm4gdGl0bGVcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldFVJRCA9IGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBkbyBwcmVmaXggKz0gfn4oTWF0aC5yYW5kb20oKSAqIDEwMDAwMDApXG4gICAgd2hpbGUgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCkpXG4gICAgcmV0dXJuIHByZWZpeFxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUudGlwID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcy4kdGlwKSB7XG4gICAgICB0aGlzLiR0aXAgPSAkKHRoaXMub3B0aW9ucy50ZW1wbGF0ZSlcbiAgICAgIGlmICh0aGlzLiR0aXAubGVuZ3RoICE9IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMudHlwZSArICcgYHRlbXBsYXRlYCBvcHRpb24gbXVzdCBjb25zaXN0IG9mIGV4YWN0bHkgMSB0b3AtbGV2ZWwgZWxlbWVudCEnKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy4kdGlwXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5hcnJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKHRoaXMuJGFycm93ID0gdGhpcy4kYXJyb3cgfHwgdGhpcy50aXAoKS5maW5kKCcudG9vbHRpcC1hcnJvdycpKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZW5hYmxlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZW5hYmxlZCA9IHRydWVcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2VcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnRvZ2dsZUVuYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gIXRoaXMuZW5hYmxlZFxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBpZiAoZSkge1xuICAgICAgc2VsZiA9ICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlKVxuICAgICAgaWYgKCFzZWxmKSB7XG4gICAgICAgIHNlbGYgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihlLmN1cnJlbnRUYXJnZXQsIHRoaXMuZ2V0RGVsZWdhdGVPcHRpb25zKCkpXG4gICAgICAgICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlLCBzZWxmKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChlKSB7XG4gICAgICBzZWxmLmluU3RhdGUuY2xpY2sgPSAhc2VsZi5pblN0YXRlLmNsaWNrXG4gICAgICBpZiAoc2VsZi5pc0luU3RhdGVUcnVlKCkpIHNlbGYuZW50ZXIoc2VsZilcbiAgICAgIGVsc2Ugc2VsZi5sZWF2ZShzZWxmKVxuICAgIH0gZWxzZSB7XG4gICAgICBzZWxmLnRpcCgpLmhhc0NsYXNzKCdpbicpID8gc2VsZi5sZWF2ZShzZWxmKSA6IHNlbGYuZW50ZXIoc2VsZilcbiAgICB9XG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpXG4gICAgdGhpcy5oaWRlKGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoYXQuJGVsZW1lbnQub2ZmKCcuJyArIHRoYXQudHlwZSkucmVtb3ZlRGF0YSgnYnMuJyArIHRoYXQudHlwZSlcbiAgICAgIGlmICh0aGF0LiR0aXApIHtcbiAgICAgICAgdGhhdC4kdGlwLmRldGFjaCgpXG4gICAgICB9XG4gICAgICB0aGF0LiR0aXAgPSBudWxsXG4gICAgICB0aGF0LiRhcnJvdyA9IG51bGxcbiAgICAgIHRoYXQuJHZpZXdwb3J0ID0gbnVsbFxuICAgICAgdGhhdC4kZWxlbWVudCA9IG51bGxcbiAgICB9KVxuICB9XG5cblxuICAvLyBUT09MVElQIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICAgID0gJHRoaXMuZGF0YSgnYnMudG9vbHRpcCcpXG4gICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uXG5cbiAgICAgIGlmICghZGF0YSAmJiAvZGVzdHJveXxoaWRlLy50ZXN0KG9wdGlvbikpIHJldHVyblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy50b29sdGlwJywgKGRhdGEgPSBuZXcgVG9vbHRpcCh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4udG9vbHRpcFxuXG4gICQuZm4udG9vbHRpcCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLnRvb2x0aXAuQ29uc3RydWN0b3IgPSBUb29sdGlwXG5cblxuICAvLyBUT09MVElQIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLnRvb2x0aXAubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLnRvb2x0aXAgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHBvcG92ZXIuanMgdjMuMy43XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNwb3BvdmVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE2IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIFBPUE9WRVIgUFVCTElDIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBQb3BvdmVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmluaXQoJ3BvcG92ZXInLCBlbGVtZW50LCBvcHRpb25zKVxuICB9XG5cbiAgaWYgKCEkLmZuLnRvb2x0aXApIHRocm93IG5ldyBFcnJvcignUG9wb3ZlciByZXF1aXJlcyB0b29sdGlwLmpzJylcblxuICBQb3BvdmVyLlZFUlNJT04gID0gJzMuMy43J1xuXG4gIFBvcG92ZXIuREVGQVVMVFMgPSAkLmV4dGVuZCh7fSwgJC5mbi50b29sdGlwLkNvbnN0cnVjdG9yLkRFRkFVTFRTLCB7XG4gICAgcGxhY2VtZW50OiAncmlnaHQnLFxuICAgIHRyaWdnZXI6ICdjbGljaycsXG4gICAgY29udGVudDogJycsXG4gICAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwicG9wb3ZlclwiIHJvbGU9XCJ0b29sdGlwXCI+PGRpdiBjbGFzcz1cImFycm93XCI+PC9kaXY+PGgzIGNsYXNzPVwicG9wb3Zlci10aXRsZVwiPjwvaDM+PGRpdiBjbGFzcz1cInBvcG92ZXItY29udGVudFwiPjwvZGl2PjwvZGl2PidcbiAgfSlcblxuXG4gIC8vIE5PVEU6IFBPUE9WRVIgRVhURU5EUyB0b29sdGlwLmpzXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgUG9wb3Zlci5wcm90b3R5cGUgPSAkLmV4dGVuZCh7fSwgJC5mbi50b29sdGlwLkNvbnN0cnVjdG9yLnByb3RvdHlwZSlcblxuICBQb3BvdmVyLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFBvcG92ZXJcblxuICBQb3BvdmVyLnByb3RvdHlwZS5nZXREZWZhdWx0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gUG9wb3Zlci5ERUZBVUxUU1xuICB9XG5cbiAgUG9wb3Zlci5wcm90b3R5cGUuc2V0Q29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJHRpcCAgICA9IHRoaXMudGlwKClcbiAgICB2YXIgdGl0bGUgICA9IHRoaXMuZ2V0VGl0bGUoKVxuICAgIHZhciBjb250ZW50ID0gdGhpcy5nZXRDb250ZW50KClcblxuICAgICR0aXAuZmluZCgnLnBvcG92ZXItdGl0bGUnKVt0aGlzLm9wdGlvbnMuaHRtbCA/ICdodG1sJyA6ICd0ZXh0J10odGl0bGUpXG4gICAgJHRpcC5maW5kKCcucG9wb3Zlci1jb250ZW50JykuY2hpbGRyZW4oKS5kZXRhY2goKS5lbmQoKVsgLy8gd2UgdXNlIGFwcGVuZCBmb3IgaHRtbCBvYmplY3RzIHRvIG1haW50YWluIGpzIGV2ZW50c1xuICAgICAgdGhpcy5vcHRpb25zLmh0bWwgPyAodHlwZW9mIGNvbnRlbnQgPT0gJ3N0cmluZycgPyAnaHRtbCcgOiAnYXBwZW5kJykgOiAndGV4dCdcbiAgICBdKGNvbnRlbnQpXG5cbiAgICAkdGlwLnJlbW92ZUNsYXNzKCdmYWRlIHRvcCBib3R0b20gbGVmdCByaWdodCBpbicpXG5cbiAgICAvLyBJRTggZG9lc24ndCBhY2NlcHQgaGlkaW5nIHZpYSB0aGUgYDplbXB0eWAgcHNldWRvIHNlbGVjdG9yLCB3ZSBoYXZlIHRvIGRvXG4gICAgLy8gdGhpcyBtYW51YWxseSBieSBjaGVja2luZyB0aGUgY29udGVudHMuXG4gICAgaWYgKCEkdGlwLmZpbmQoJy5wb3BvdmVyLXRpdGxlJykuaHRtbCgpKSAkdGlwLmZpbmQoJy5wb3BvdmVyLXRpdGxlJykuaGlkZSgpXG4gIH1cblxuICBQb3BvdmVyLnByb3RvdHlwZS5oYXNDb250ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmdldFRpdGxlKCkgfHwgdGhpcy5nZXRDb250ZW50KClcbiAgfVxuXG4gIFBvcG92ZXIucHJvdG90eXBlLmdldENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICRlID0gdGhpcy4kZWxlbWVudFxuICAgIHZhciBvICA9IHRoaXMub3B0aW9uc1xuXG4gICAgcmV0dXJuICRlLmF0dHIoJ2RhdGEtY29udGVudCcpXG4gICAgICB8fCAodHlwZW9mIG8uY29udGVudCA9PSAnZnVuY3Rpb24nID9cbiAgICAgICAgICAgIG8uY29udGVudC5jYWxsKCRlWzBdKSA6XG4gICAgICAgICAgICBvLmNvbnRlbnQpXG4gIH1cblxuICBQb3BvdmVyLnByb3RvdHlwZS5hcnJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKHRoaXMuJGFycm93ID0gdGhpcy4kYXJyb3cgfHwgdGhpcy50aXAoKS5maW5kKCcuYXJyb3cnKSlcbiAgfVxuXG5cbiAgLy8gUE9QT1ZFUiBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLnBvcG92ZXInKVxuICAgICAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvblxuXG4gICAgICBpZiAoIWRhdGEgJiYgL2Rlc3Ryb3l8aGlkZS8udGVzdChvcHRpb24pKSByZXR1cm5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMucG9wb3ZlcicsIChkYXRhID0gbmV3IFBvcG92ZXIodGhpcywgb3B0aW9ucykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLnBvcG92ZXJcblxuICAkLmZuLnBvcG92ZXIgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5wb3BvdmVyLkNvbnN0cnVjdG9yID0gUG9wb3ZlclxuXG5cbiAgLy8gUE9QT1ZFUiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5wb3BvdmVyLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5wb3BvdmVyID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiBzY3JvbGxzcHkuanMgdjMuMy43XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNzY3JvbGxzcHlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNiBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBTQ1JPTExTUFkgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFNjcm9sbFNweShlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy4kYm9keSAgICAgICAgICA9ICQoZG9jdW1lbnQuYm9keSlcbiAgICB0aGlzLiRzY3JvbGxFbGVtZW50ID0gJChlbGVtZW50KS5pcyhkb2N1bWVudC5ib2R5KSA/ICQod2luZG93KSA6ICQoZWxlbWVudClcbiAgICB0aGlzLm9wdGlvbnMgICAgICAgID0gJC5leHRlbmQoe30sIFNjcm9sbFNweS5ERUZBVUxUUywgb3B0aW9ucylcbiAgICB0aGlzLnNlbGVjdG9yICAgICAgID0gKHRoaXMub3B0aW9ucy50YXJnZXQgfHwgJycpICsgJyAubmF2IGxpID4gYSdcbiAgICB0aGlzLm9mZnNldHMgICAgICAgID0gW11cbiAgICB0aGlzLnRhcmdldHMgICAgICAgID0gW11cbiAgICB0aGlzLmFjdGl2ZVRhcmdldCAgID0gbnVsbFxuICAgIHRoaXMuc2Nyb2xsSGVpZ2h0ICAgPSAwXG5cbiAgICB0aGlzLiRzY3JvbGxFbGVtZW50Lm9uKCdzY3JvbGwuYnMuc2Nyb2xsc3B5JywgJC5wcm94eSh0aGlzLnByb2Nlc3MsIHRoaXMpKVxuICAgIHRoaXMucmVmcmVzaCgpXG4gICAgdGhpcy5wcm9jZXNzKClcbiAgfVxuXG4gIFNjcm9sbFNweS5WRVJTSU9OICA9ICczLjMuNydcblxuICBTY3JvbGxTcHkuREVGQVVMVFMgPSB7XG4gICAgb2Zmc2V0OiAxMFxuICB9XG5cbiAgU2Nyb2xsU3B5LnByb3RvdHlwZS5nZXRTY3JvbGxIZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuJHNjcm9sbEVsZW1lbnRbMF0uc2Nyb2xsSGVpZ2h0IHx8IE1hdGgubWF4KHRoaXMuJGJvZHlbMF0uc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0KVxuICB9XG5cbiAgU2Nyb2xsU3B5LnByb3RvdHlwZS5yZWZyZXNoID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ICAgICAgICAgID0gdGhpc1xuICAgIHZhciBvZmZzZXRNZXRob2QgID0gJ29mZnNldCdcbiAgICB2YXIgb2Zmc2V0QmFzZSAgICA9IDBcblxuICAgIHRoaXMub2Zmc2V0cyAgICAgID0gW11cbiAgICB0aGlzLnRhcmdldHMgICAgICA9IFtdXG4gICAgdGhpcy5zY3JvbGxIZWlnaHQgPSB0aGlzLmdldFNjcm9sbEhlaWdodCgpXG5cbiAgICBpZiAoISQuaXNXaW5kb3codGhpcy4kc2Nyb2xsRWxlbWVudFswXSkpIHtcbiAgICAgIG9mZnNldE1ldGhvZCA9ICdwb3NpdGlvbidcbiAgICAgIG9mZnNldEJhc2UgICA9IHRoaXMuJHNjcm9sbEVsZW1lbnQuc2Nyb2xsVG9wKClcbiAgICB9XG5cbiAgICB0aGlzLiRib2R5XG4gICAgICAuZmluZCh0aGlzLnNlbGVjdG9yKVxuICAgICAgLm1hcChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkZWwgICA9ICQodGhpcylcbiAgICAgICAgdmFyIGhyZWYgID0gJGVsLmRhdGEoJ3RhcmdldCcpIHx8ICRlbC5hdHRyKCdocmVmJylcbiAgICAgICAgdmFyICRocmVmID0gL14jLi8udGVzdChocmVmKSAmJiAkKGhyZWYpXG5cbiAgICAgICAgcmV0dXJuICgkaHJlZlxuICAgICAgICAgICYmICRocmVmLmxlbmd0aFxuICAgICAgICAgICYmICRocmVmLmlzKCc6dmlzaWJsZScpXG4gICAgICAgICAgJiYgW1skaHJlZltvZmZzZXRNZXRob2RdKCkudG9wICsgb2Zmc2V0QmFzZSwgaHJlZl1dKSB8fCBudWxsXG4gICAgICB9KVxuICAgICAgLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGFbMF0gLSBiWzBdIH0pXG4gICAgICAuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoYXQub2Zmc2V0cy5wdXNoKHRoaXNbMF0pXG4gICAgICAgIHRoYXQudGFyZ2V0cy5wdXNoKHRoaXNbMV0pXG4gICAgICB9KVxuICB9XG5cbiAgU2Nyb2xsU3B5LnByb3RvdHlwZS5wcm9jZXNzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzY3JvbGxUb3AgICAgPSB0aGlzLiRzY3JvbGxFbGVtZW50LnNjcm9sbFRvcCgpICsgdGhpcy5vcHRpb25zLm9mZnNldFxuICAgIHZhciBzY3JvbGxIZWlnaHQgPSB0aGlzLmdldFNjcm9sbEhlaWdodCgpXG4gICAgdmFyIG1heFNjcm9sbCAgICA9IHRoaXMub3B0aW9ucy5vZmZzZXQgKyBzY3JvbGxIZWlnaHQgLSB0aGlzLiRzY3JvbGxFbGVtZW50LmhlaWdodCgpXG4gICAgdmFyIG9mZnNldHMgICAgICA9IHRoaXMub2Zmc2V0c1xuICAgIHZhciB0YXJnZXRzICAgICAgPSB0aGlzLnRhcmdldHNcbiAgICB2YXIgYWN0aXZlVGFyZ2V0ID0gdGhpcy5hY3RpdmVUYXJnZXRcbiAgICB2YXIgaVxuXG4gICAgaWYgKHRoaXMuc2Nyb2xsSGVpZ2h0ICE9IHNjcm9sbEhlaWdodCkge1xuICAgICAgdGhpcy5yZWZyZXNoKClcbiAgICB9XG5cbiAgICBpZiAoc2Nyb2xsVG9wID49IG1heFNjcm9sbCkge1xuICAgICAgcmV0dXJuIGFjdGl2ZVRhcmdldCAhPSAoaSA9IHRhcmdldHNbdGFyZ2V0cy5sZW5ndGggLSAxXSkgJiYgdGhpcy5hY3RpdmF0ZShpKVxuICAgIH1cblxuICAgIGlmIChhY3RpdmVUYXJnZXQgJiYgc2Nyb2xsVG9wIDwgb2Zmc2V0c1swXSkge1xuICAgICAgdGhpcy5hY3RpdmVUYXJnZXQgPSBudWxsXG4gICAgICByZXR1cm4gdGhpcy5jbGVhcigpXG4gICAgfVxuXG4gICAgZm9yIChpID0gb2Zmc2V0cy5sZW5ndGg7IGktLTspIHtcbiAgICAgIGFjdGl2ZVRhcmdldCAhPSB0YXJnZXRzW2ldXG4gICAgICAgICYmIHNjcm9sbFRvcCA+PSBvZmZzZXRzW2ldXG4gICAgICAgICYmIChvZmZzZXRzW2kgKyAxXSA9PT0gdW5kZWZpbmVkIHx8IHNjcm9sbFRvcCA8IG9mZnNldHNbaSArIDFdKVxuICAgICAgICAmJiB0aGlzLmFjdGl2YXRlKHRhcmdldHNbaV0pXG4gICAgfVxuICB9XG5cbiAgU2Nyb2xsU3B5LnByb3RvdHlwZS5hY3RpdmF0ZSA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICB0aGlzLmFjdGl2ZVRhcmdldCA9IHRhcmdldFxuXG4gICAgdGhpcy5jbGVhcigpXG5cbiAgICB2YXIgc2VsZWN0b3IgPSB0aGlzLnNlbGVjdG9yICtcbiAgICAgICdbZGF0YS10YXJnZXQ9XCInICsgdGFyZ2V0ICsgJ1wiXSwnICtcbiAgICAgIHRoaXMuc2VsZWN0b3IgKyAnW2hyZWY9XCInICsgdGFyZ2V0ICsgJ1wiXSdcblxuICAgIHZhciBhY3RpdmUgPSAkKHNlbGVjdG9yKVxuICAgICAgLnBhcmVudHMoJ2xpJylcbiAgICAgIC5hZGRDbGFzcygnYWN0aXZlJylcblxuICAgIGlmIChhY3RpdmUucGFyZW50KCcuZHJvcGRvd24tbWVudScpLmxlbmd0aCkge1xuICAgICAgYWN0aXZlID0gYWN0aXZlXG4gICAgICAgIC5jbG9zZXN0KCdsaS5kcm9wZG93bicpXG4gICAgICAgIC5hZGRDbGFzcygnYWN0aXZlJylcbiAgICB9XG5cbiAgICBhY3RpdmUudHJpZ2dlcignYWN0aXZhdGUuYnMuc2Nyb2xsc3B5JylcbiAgfVxuXG4gIFNjcm9sbFNweS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgJCh0aGlzLnNlbGVjdG9yKVxuICAgICAgLnBhcmVudHNVbnRpbCh0aGlzLm9wdGlvbnMudGFyZ2V0LCAnLmFjdGl2ZScpXG4gICAgICAucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gIH1cblxuXG4gIC8vIFNDUk9MTFNQWSBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICAgID0gJHRoaXMuZGF0YSgnYnMuc2Nyb2xsc3B5JylcbiAgICAgIHZhciBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb25cblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5zY3JvbGxzcHknLCAoZGF0YSA9IG5ldyBTY3JvbGxTcHkodGhpcywgb3B0aW9ucykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLnNjcm9sbHNweVxuXG4gICQuZm4uc2Nyb2xsc3B5ICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uc2Nyb2xsc3B5LkNvbnN0cnVjdG9yID0gU2Nyb2xsU3B5XG5cblxuICAvLyBTQ1JPTExTUFkgTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5zY3JvbGxzcHkubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLnNjcm9sbHNweSA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIFNDUk9MTFNQWSBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PT09PT1cblxuICAkKHdpbmRvdykub24oJ2xvYWQuYnMuc2Nyb2xsc3B5LmRhdGEtYXBpJywgZnVuY3Rpb24gKCkge1xuICAgICQoJ1tkYXRhLXNweT1cInNjcm9sbFwiXScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRzcHkgPSAkKHRoaXMpXG4gICAgICBQbHVnaW4uY2FsbCgkc3B5LCAkc3B5LmRhdGEoKSlcbiAgICB9KVxuICB9KVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiB0YWIuanMgdjMuMy43XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0YWJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTYgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gVEFCIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgVGFiID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAvLyBqc2NzOmRpc2FibGUgcmVxdWlyZURvbGxhckJlZm9yZWpRdWVyeUFzc2lnbm1lbnRcbiAgICB0aGlzLmVsZW1lbnQgPSAkKGVsZW1lbnQpXG4gICAgLy8ganNjczplbmFibGUgcmVxdWlyZURvbGxhckJlZm9yZWpRdWVyeUFzc2lnbm1lbnRcbiAgfVxuXG4gIFRhYi5WRVJTSU9OID0gJzMuMy43J1xuXG4gIFRhYi5UUkFOU0lUSU9OX0RVUkFUSU9OID0gMTUwXG5cbiAgVGFiLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciAkdGhpcyAgICA9IHRoaXMuZWxlbWVudFxuICAgIHZhciAkdWwgICAgICA9ICR0aGlzLmNsb3Nlc3QoJ3VsOm5vdCguZHJvcGRvd24tbWVudSknKVxuICAgIHZhciBzZWxlY3RvciA9ICR0aGlzLmRhdGEoJ3RhcmdldCcpXG5cbiAgICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgICBzZWxlY3RvciA9ICR0aGlzLmF0dHIoJ2hyZWYnKVxuICAgICAgc2VsZWN0b3IgPSBzZWxlY3RvciAmJiBzZWxlY3Rvci5yZXBsYWNlKC8uKig/PSNbXlxcc10qJCkvLCAnJykgLy8gc3RyaXAgZm9yIGllN1xuICAgIH1cblxuICAgIGlmICgkdGhpcy5wYXJlbnQoJ2xpJykuaGFzQ2xhc3MoJ2FjdGl2ZScpKSByZXR1cm5cblxuICAgIHZhciAkcHJldmlvdXMgPSAkdWwuZmluZCgnLmFjdGl2ZTpsYXN0IGEnKVxuICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KCdoaWRlLmJzLnRhYicsIHtcbiAgICAgIHJlbGF0ZWRUYXJnZXQ6ICR0aGlzWzBdXG4gICAgfSlcbiAgICB2YXIgc2hvd0V2ZW50ID0gJC5FdmVudCgnc2hvdy5icy50YWInLCB7XG4gICAgICByZWxhdGVkVGFyZ2V0OiAkcHJldmlvdXNbMF1cbiAgICB9KVxuXG4gICAgJHByZXZpb3VzLnRyaWdnZXIoaGlkZUV2ZW50KVxuICAgICR0aGlzLnRyaWdnZXIoc2hvd0V2ZW50KVxuXG4gICAgaWYgKHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSB8fCBoaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgdmFyICR0YXJnZXQgPSAkKHNlbGVjdG9yKVxuXG4gICAgdGhpcy5hY3RpdmF0ZSgkdGhpcy5jbG9zZXN0KCdsaScpLCAkdWwpXG4gICAgdGhpcy5hY3RpdmF0ZSgkdGFyZ2V0LCAkdGFyZ2V0LnBhcmVudCgpLCBmdW5jdGlvbiAoKSB7XG4gICAgICAkcHJldmlvdXMudHJpZ2dlcih7XG4gICAgICAgIHR5cGU6ICdoaWRkZW4uYnMudGFiJyxcbiAgICAgICAgcmVsYXRlZFRhcmdldDogJHRoaXNbMF1cbiAgICAgIH0pXG4gICAgICAkdGhpcy50cmlnZ2VyKHtcbiAgICAgICAgdHlwZTogJ3Nob3duLmJzLnRhYicsXG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6ICRwcmV2aW91c1swXVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgVGFiLnByb3RvdHlwZS5hY3RpdmF0ZSA9IGZ1bmN0aW9uIChlbGVtZW50LCBjb250YWluZXIsIGNhbGxiYWNrKSB7XG4gICAgdmFyICRhY3RpdmUgICAgPSBjb250YWluZXIuZmluZCgnPiAuYWN0aXZlJylcbiAgICB2YXIgdHJhbnNpdGlvbiA9IGNhbGxiYWNrXG4gICAgICAmJiAkLnN1cHBvcnQudHJhbnNpdGlvblxuICAgICAgJiYgKCRhY3RpdmUubGVuZ3RoICYmICRhY3RpdmUuaGFzQ2xhc3MoJ2ZhZGUnKSB8fCAhIWNvbnRhaW5lci5maW5kKCc+IC5mYWRlJykubGVuZ3RoKVxuXG4gICAgZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICRhY3RpdmVcbiAgICAgICAgLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgICAuZmluZCgnPiAuZHJvcGRvd24tbWVudSA+IC5hY3RpdmUnKVxuICAgICAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgICAgICAgLmVuZCgpXG4gICAgICAgIC5maW5kKCdbZGF0YS10b2dnbGU9XCJ0YWJcIl0nKVxuICAgICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpXG5cbiAgICAgIGVsZW1lbnRcbiAgICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICAuZmluZCgnW2RhdGEtdG9nZ2xlPVwidGFiXCJdJylcbiAgICAgICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsIHRydWUpXG5cbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XG4gICAgICAgIGVsZW1lbnRbMF0ub2Zmc2V0V2lkdGggLy8gcmVmbG93IGZvciB0cmFuc2l0aW9uXG4gICAgICAgIGVsZW1lbnQuYWRkQ2xhc3MoJ2luJylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2ZhZGUnKVxuICAgICAgfVxuXG4gICAgICBpZiAoZWxlbWVudC5wYXJlbnQoJy5kcm9wZG93bi1tZW51JykubGVuZ3RoKSB7XG4gICAgICAgIGVsZW1lbnRcbiAgICAgICAgICAuY2xvc2VzdCgnbGkuZHJvcGRvd24nKVxuICAgICAgICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICAgIC5lbmQoKVxuICAgICAgICAgIC5maW5kKCdbZGF0YS10b2dnbGU9XCJ0YWJcIl0nKVxuICAgICAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKVxuICAgICAgfVxuXG4gICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpXG4gICAgfVxuXG4gICAgJGFjdGl2ZS5sZW5ndGggJiYgdHJhbnNpdGlvbiA/XG4gICAgICAkYWN0aXZlXG4gICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIG5leHQpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChUYWIuVFJBTlNJVElPTl9EVVJBVElPTikgOlxuICAgICAgbmV4dCgpXG5cbiAgICAkYWN0aXZlLnJlbW92ZUNsYXNzKCdpbicpXG4gIH1cblxuXG4gIC8vIFRBQiBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgPSAkdGhpcy5kYXRhKCdicy50YWInKVxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLnRhYicsIChkYXRhID0gbmV3IFRhYih0aGlzKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4udGFiXG5cbiAgJC5mbi50YWIgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi50YWIuQ29uc3RydWN0b3IgPSBUYWJcblxuXG4gIC8vIFRBQiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT1cblxuICAkLmZuLnRhYi5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4udGFiID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gVEFCIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PVxuXG4gIHZhciBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIFBsdWdpbi5jYWxsKCQodGhpcyksICdzaG93JylcbiAgfVxuXG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjbGljay5icy50YWIuZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlPVwidGFiXCJdJywgY2xpY2tIYW5kbGVyKVxuICAgIC5vbignY2xpY2suYnMudGFiLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT1cInBpbGxcIl0nLCBjbGlja0hhbmRsZXIpXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IGFmZml4LmpzIHYzLjMuN1xuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jYWZmaXhcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNiBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBBRkZJWCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQWZmaXggPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBBZmZpeC5ERUZBVUxUUywgb3B0aW9ucylcblxuICAgIHRoaXMuJHRhcmdldCA9ICQodGhpcy5vcHRpb25zLnRhcmdldClcbiAgICAgIC5vbignc2Nyb2xsLmJzLmFmZml4LmRhdGEtYXBpJywgJC5wcm94eSh0aGlzLmNoZWNrUG9zaXRpb24sIHRoaXMpKVxuICAgICAgLm9uKCdjbGljay5icy5hZmZpeC5kYXRhLWFwaScsICAkLnByb3h5KHRoaXMuY2hlY2tQb3NpdGlvbldpdGhFdmVudExvb3AsIHRoaXMpKVxuXG4gICAgdGhpcy4kZWxlbWVudCAgICAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy5hZmZpeGVkICAgICAgPSBudWxsXG4gICAgdGhpcy51bnBpbiAgICAgICAgPSBudWxsXG4gICAgdGhpcy5waW5uZWRPZmZzZXQgPSBudWxsXG5cbiAgICB0aGlzLmNoZWNrUG9zaXRpb24oKVxuICB9XG5cbiAgQWZmaXguVkVSU0lPTiAgPSAnMy4zLjcnXG5cbiAgQWZmaXguUkVTRVQgICAgPSAnYWZmaXggYWZmaXgtdG9wIGFmZml4LWJvdHRvbSdcblxuICBBZmZpeC5ERUZBVUxUUyA9IHtcbiAgICBvZmZzZXQ6IDAsXG4gICAgdGFyZ2V0OiB3aW5kb3dcbiAgfVxuXG4gIEFmZml4LnByb3RvdHlwZS5nZXRTdGF0ZSA9IGZ1bmN0aW9uIChzY3JvbGxIZWlnaHQsIGhlaWdodCwgb2Zmc2V0VG9wLCBvZmZzZXRCb3R0b20pIHtcbiAgICB2YXIgc2Nyb2xsVG9wICAgID0gdGhpcy4kdGFyZ2V0LnNjcm9sbFRvcCgpXG4gICAgdmFyIHBvc2l0aW9uICAgICA9IHRoaXMuJGVsZW1lbnQub2Zmc2V0KClcbiAgICB2YXIgdGFyZ2V0SGVpZ2h0ID0gdGhpcy4kdGFyZ2V0LmhlaWdodCgpXG5cbiAgICBpZiAob2Zmc2V0VG9wICE9IG51bGwgJiYgdGhpcy5hZmZpeGVkID09ICd0b3AnKSByZXR1cm4gc2Nyb2xsVG9wIDwgb2Zmc2V0VG9wID8gJ3RvcCcgOiBmYWxzZVxuXG4gICAgaWYgKHRoaXMuYWZmaXhlZCA9PSAnYm90dG9tJykge1xuICAgICAgaWYgKG9mZnNldFRvcCAhPSBudWxsKSByZXR1cm4gKHNjcm9sbFRvcCArIHRoaXMudW5waW4gPD0gcG9zaXRpb24udG9wKSA/IGZhbHNlIDogJ2JvdHRvbSdcbiAgICAgIHJldHVybiAoc2Nyb2xsVG9wICsgdGFyZ2V0SGVpZ2h0IDw9IHNjcm9sbEhlaWdodCAtIG9mZnNldEJvdHRvbSkgPyBmYWxzZSA6ICdib3R0b20nXG4gICAgfVxuXG4gICAgdmFyIGluaXRpYWxpemluZyAgID0gdGhpcy5hZmZpeGVkID09IG51bGxcbiAgICB2YXIgY29sbGlkZXJUb3AgICAgPSBpbml0aWFsaXppbmcgPyBzY3JvbGxUb3AgOiBwb3NpdGlvbi50b3BcbiAgICB2YXIgY29sbGlkZXJIZWlnaHQgPSBpbml0aWFsaXppbmcgPyB0YXJnZXRIZWlnaHQgOiBoZWlnaHRcblxuICAgIGlmIChvZmZzZXRUb3AgIT0gbnVsbCAmJiBzY3JvbGxUb3AgPD0gb2Zmc2V0VG9wKSByZXR1cm4gJ3RvcCdcbiAgICBpZiAob2Zmc2V0Qm90dG9tICE9IG51bGwgJiYgKGNvbGxpZGVyVG9wICsgY29sbGlkZXJIZWlnaHQgPj0gc2Nyb2xsSGVpZ2h0IC0gb2Zmc2V0Qm90dG9tKSkgcmV0dXJuICdib3R0b20nXG5cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIEFmZml4LnByb3RvdHlwZS5nZXRQaW5uZWRPZmZzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMucGlubmVkT2Zmc2V0KSByZXR1cm4gdGhpcy5waW5uZWRPZmZzZXRcbiAgICB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKEFmZml4LlJFU0VUKS5hZGRDbGFzcygnYWZmaXgnKVxuICAgIHZhciBzY3JvbGxUb3AgPSB0aGlzLiR0YXJnZXQuc2Nyb2xsVG9wKClcbiAgICB2YXIgcG9zaXRpb24gID0gdGhpcy4kZWxlbWVudC5vZmZzZXQoKVxuICAgIHJldHVybiAodGhpcy5waW5uZWRPZmZzZXQgPSBwb3NpdGlvbi50b3AgLSBzY3JvbGxUb3ApXG4gIH1cblxuICBBZmZpeC5wcm90b3R5cGUuY2hlY2tQb3NpdGlvbldpdGhFdmVudExvb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgc2V0VGltZW91dCgkLnByb3h5KHRoaXMuY2hlY2tQb3NpdGlvbiwgdGhpcyksIDEpXG4gIH1cblxuICBBZmZpeC5wcm90b3R5cGUuY2hlY2tQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXRoaXMuJGVsZW1lbnQuaXMoJzp2aXNpYmxlJykpIHJldHVyblxuXG4gICAgdmFyIGhlaWdodCAgICAgICA9IHRoaXMuJGVsZW1lbnQuaGVpZ2h0KClcbiAgICB2YXIgb2Zmc2V0ICAgICAgID0gdGhpcy5vcHRpb25zLm9mZnNldFxuICAgIHZhciBvZmZzZXRUb3AgICAgPSBvZmZzZXQudG9wXG4gICAgdmFyIG9mZnNldEJvdHRvbSA9IG9mZnNldC5ib3R0b21cbiAgICB2YXIgc2Nyb2xsSGVpZ2h0ID0gTWF0aC5tYXgoJChkb2N1bWVudCkuaGVpZ2h0KCksICQoZG9jdW1lbnQuYm9keSkuaGVpZ2h0KCkpXG5cbiAgICBpZiAodHlwZW9mIG9mZnNldCAhPSAnb2JqZWN0JykgICAgICAgICBvZmZzZXRCb3R0b20gPSBvZmZzZXRUb3AgPSBvZmZzZXRcbiAgICBpZiAodHlwZW9mIG9mZnNldFRvcCA9PSAnZnVuY3Rpb24nKSAgICBvZmZzZXRUb3AgICAgPSBvZmZzZXQudG9wKHRoaXMuJGVsZW1lbnQpXG4gICAgaWYgKHR5cGVvZiBvZmZzZXRCb3R0b20gPT0gJ2Z1bmN0aW9uJykgb2Zmc2V0Qm90dG9tID0gb2Zmc2V0LmJvdHRvbSh0aGlzLiRlbGVtZW50KVxuXG4gICAgdmFyIGFmZml4ID0gdGhpcy5nZXRTdGF0ZShzY3JvbGxIZWlnaHQsIGhlaWdodCwgb2Zmc2V0VG9wLCBvZmZzZXRCb3R0b20pXG5cbiAgICBpZiAodGhpcy5hZmZpeGVkICE9IGFmZml4KSB7XG4gICAgICBpZiAodGhpcy51bnBpbiAhPSBudWxsKSB0aGlzLiRlbGVtZW50LmNzcygndG9wJywgJycpXG5cbiAgICAgIHZhciBhZmZpeFR5cGUgPSAnYWZmaXgnICsgKGFmZml4ID8gJy0nICsgYWZmaXggOiAnJylcbiAgICAgIHZhciBlICAgICAgICAgPSAkLkV2ZW50KGFmZml4VHlwZSArICcuYnMuYWZmaXgnKVxuXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoZSlcblxuICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgICB0aGlzLmFmZml4ZWQgPSBhZmZpeFxuICAgICAgdGhpcy51bnBpbiA9IGFmZml4ID09ICdib3R0b20nID8gdGhpcy5nZXRQaW5uZWRPZmZzZXQoKSA6IG51bGxcblxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoQWZmaXguUkVTRVQpXG4gICAgICAgIC5hZGRDbGFzcyhhZmZpeFR5cGUpXG4gICAgICAgIC50cmlnZ2VyKGFmZml4VHlwZS5yZXBsYWNlKCdhZmZpeCcsICdhZmZpeGVkJykgKyAnLmJzLmFmZml4JylcbiAgICB9XG5cbiAgICBpZiAoYWZmaXggPT0gJ2JvdHRvbScpIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQub2Zmc2V0KHtcbiAgICAgICAgdG9wOiBzY3JvbGxIZWlnaHQgLSBoZWlnaHQgLSBvZmZzZXRCb3R0b21cbiAgICAgIH0pXG4gICAgfVxuICB9XG5cblxuICAvLyBBRkZJWCBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5hZmZpeCcpXG4gICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uXG5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuYWZmaXgnLCAoZGF0YSA9IG5ldyBBZmZpeCh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uYWZmaXhcblxuICAkLmZuLmFmZml4ICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uYWZmaXguQ29uc3RydWN0b3IgPSBBZmZpeFxuXG5cbiAgLy8gQUZGSVggTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT1cblxuICAkLmZuLmFmZml4Lm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5hZmZpeCA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIEFGRklYIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09XG5cbiAgJCh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICQoJ1tkYXRhLXNweT1cImFmZml4XCJdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHNweSA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhID0gJHNweS5kYXRhKClcblxuICAgICAgZGF0YS5vZmZzZXQgPSBkYXRhLm9mZnNldCB8fCB7fVxuXG4gICAgICBpZiAoZGF0YS5vZmZzZXRCb3R0b20gIT0gbnVsbCkgZGF0YS5vZmZzZXQuYm90dG9tID0gZGF0YS5vZmZzZXRCb3R0b21cbiAgICAgIGlmIChkYXRhLm9mZnNldFRvcCAgICAhPSBudWxsKSBkYXRhLm9mZnNldC50b3AgICAgPSBkYXRhLm9mZnNldFRvcFxuXG4gICAgICBQbHVnaW4uY2FsbCgkc3B5LCBkYXRhKVxuICAgIH0pXG4gIH0pXG5cbn0oalF1ZXJ5KTtcbiJdfQ==
